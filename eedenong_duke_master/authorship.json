[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eedenong"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eedenong"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eedenong"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eedenong"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    archivesBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    archiveVersion \u003d \"0.1.1\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eedenong"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eedenong"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eedenong"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    modules \u003d [\u0027javafx.controls\u0027, \u0027javafx.fxml\u0027]"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eedenong"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eedenong"
        },
        "content": "test {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eedenong": 41,
      "-": 20
    }
  },
  {
    "path": "list.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eedenong"
        },
        "content": "[T][✓] sleep"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eedenong"
        },
        "content": "[T][✘] eat"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eedenong"
        },
        "content": "[T][✓] sleep early"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eedenong"
        },
        "content": "[T][✘] eat"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eedenong"
        },
        "content": "[D][✓] homework by: Oct 2 2020"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eedenong"
        },
        "content": "[E][✘] meeting at: smu"
      }
    ],
    "authorContributionMap": {
      "eedenong": 6
    }
  },
  {
    "path": "src/main/java/AddTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eedenong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eedenong"
        },
        "content": " * Represents a Command object that will be created when the user inputs the command to add a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eedenong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eedenong"
        },
        "content": "public class AddTaskCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public AddTaskCommand(String command, String input) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * Executes the command to add a Task object to the task list,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * by creating a task object from the input attribute of this object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * If the input string is not in the correct format of todo, event, deadline, an error will be thrown."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @param tasks TaskList object from the driver Duke object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @param ui Ui object from the driver Duke object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @param storage Storage object from the driver Duke object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @throws DukeException Exception thrown by the method generateTask,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     *     if the given input string is of the wrong format."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            // create and add the task to the task list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            Task taskToAdd \u003d this.generateTask(this.input);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            tasks.addTask(taskToAdd);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            // update and save the file"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            storage.saveFile(tasks.getTaskList());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            // update the user of the new task list"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            return ui.taskAddSuccess(taskToAdd, tasks.getTaskList().size());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * Returns a Task object generated from the input String."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @param input a String of input from the user."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @return a Task object of the type corresponding to the input string that was given by the user."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @throws DukeException If input is not prepended correctly or if the body of the task is empty."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public Task generateTask(String input) throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        String[] splitInput \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        String taskType \u003d splitInput[0];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        Task taskToReturn \u003d null;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            String taskDetails \u003d splitInput[1];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                // Create a ToDo task and return it"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                taskToReturn \u003d new ToDo(taskDetails);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                taskToReturn \u003d new Deadline(taskDetails);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                taskToReturn \u003d new Event(taskDetails);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException ae) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            String message \u003d \"Details of a task cannot be empty!\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            throw new DukeException(message);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        } catch (DateTimeParseException de) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            // if the date is entered in a wrong format, throw the error"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            String message \u003d \"\\t Wrong date format! Please input your date in the format yyyy-mm-dd\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            throw new DukeException(message);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        return taskToReturn;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "eedenong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eedenong": 76
    }
  },
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eedenong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eedenong"
        },
        "content": " * Represents a Command object that will be created when the user inputs an input to flag the end of his/her input."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eedenong"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eedenong"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public ByeCommand(String cmd) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        super(cmd);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * Sets the boolean value of isExit the current Command object to true."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @param tasks TaskList object from the driver Duke object"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @param ui Ui object from the driver Duke object"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @param storage Storage object from the driver Duke object"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        super.setExit();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        return ui.sayBye();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eedenong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eedenong": 19
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eedenong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eedenong"
        },
        "content": " * The parent Command class from which the different kinds of commands extends from."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eedenong"
        },
        "content": " * For each different kind of command that extends from this class,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eedenong"
        },
        "content": " * they will implement the execute method according to their functionality."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eedenong"
        },
        "content": " * The boolean isExit is an indicator as to whether the command will cause the program to stop."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eedenong"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eedenong"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public Command(String command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    protected void setExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public String getCommandString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        return this.command;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eedenong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eedenong": 28
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eedenong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eedenong"
        },
        "content": " * Represents a Task object with a set date to be completed by, denoted by the attribute LocalDate deadline."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eedenong"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eedenong"
        },
        "content": "class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    private LocalDate deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public Deadline(String task) throws DateTimeParseException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        // Split the input task string by the delimiter /by"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        // first element in arr will be the description of the task, second elem will be the deadline, both are String"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        // Pass the description as the argument to the constructor"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        super(task.split(\"/by\")[0]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        String[] arr \u003d task.split(\"/by\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            this.deadline \u003d LocalDate.parse(arr[1].trim(), formatter);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * Returns the date of the deadline as a String in the format of MMM d yyyy."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @return String of the deadline of the task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        return this.deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        String description \u003d super.getDescription();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        String status \u003d super.getStatusIcon();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        String deadline \u003d this.getDeadline();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        return \"[D]\" + \"[\" + status + \"] \" + description + \"by: \" + deadline;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eedenong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eedenong": 43
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eedenong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eedenong"
        },
        "content": " * Represents a Command object that will be created when"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eedenong"
        },
        "content": " * the user inputs the command to delete a task from the task list."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eedenong"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eedenong"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    int taskNumber;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public DeleteCommand(String command, int taskNumber) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * Executes the command to delete the task indicated by the taskNumber from the user\u0027s task list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * Throws an exception if the user tries to execute this command when the task list is empty, or if the"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * task does not exist in the task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @param tasks TaskList object from the driver Duke object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @param ui Ui object from the driver Duke object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @param storage Storage object from the driver Duke object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @throws DukeException Exception thrown by the method deleteTask if the task list is empty,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     *     or the task to delete does not exist."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            // Remove the task from the task list in tasks"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            Task deletedTask \u003d tasks.deleteTask(taskNumber);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            // Update the file by saving it"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            storage.saveFile(tasks.getTaskList());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            // Update user on the deletion of the task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            return ui.taskDeleteSuccess(deletedTask, tasks.getTaskList().size());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eedenong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eedenong": 35
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eedenong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eedenong"
        },
        "content": " * Represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eedenong"
        },
        "content": " * a label containing text from the speaker."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eedenong"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eedenong"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * Flips dialog box such that the ImageView is on the left and the text is on the right."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public void flip() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eedenong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eedenong": 60
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eedenong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eedenong"
        },
        "content": " * The driver class for the Duke program."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eedenong"
        },
        "content": " * Reads user input and adds, deletes, updates and saves the user\u0027s tasks accordingly."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eedenong"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    private Storage store;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * Constructor to run for JavaFX"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        this(\"list.txt\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * Constructor for Duke that takes in a String representing the"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * name of the save file for the user\u0027s task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @param fileName String of the save file of the user\u0027s task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public Duke(String fileName) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        // Initialize Ui"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        // Initialize storage"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        this.store \u003d new Storage(fileName);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        // Initialize taskList"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        this.taskList \u003d  new TaskList(this.store.loadFromFilePath());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        this.parser \u003d new Parser();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * Driver function that runs the Duke program."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        boolean endInput \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        while (!endInput) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                String input \u003d ui.readInput();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                Command command \u003d parser.parse(input);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                command.execute(taskList, ui, store);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                endInput \u003d command.isExit();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                // Print any error that is thrown"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                StringBuilder sb \u003d new StringBuilder(ui.getBreakLine());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                sb.append(e.getMessage());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                sb.append(ui.getBreakLine());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                System.out.println(sb.toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            } catch (NullPointerException ne) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                ui.flagWrongCommand();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        ui.sayBye();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            Command command \u003d parser.parse(input);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            return command.execute(taskList, ui, store);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            StringBuilder sb \u003d new StringBuilder(ui.getBreakLine());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            sb.append(e.getMessage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            sb.append(ui.getBreakLine());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            return sb.toString();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        new Duke(\"list.txt\").run();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "eedenong": 69,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eedenong"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eedenong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eedenong": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eedenong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eedenong"
        },
        "content": " * Represents a Task object with a set location that the event is occurring at, denoted by the attribute String place."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eedenong"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eedenong"
        },
        "content": "class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    private String place;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public Event(String task) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        // Pass the description of the task as the argument to the parent constructor"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        super(task.split(\"/at\")[0]);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        String[] arr \u003d task.split(\"/at\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        this.place \u003d arr[1].trim();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public String getPlace() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        return this.place;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        String description \u003d super.getDescription();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        String status \u003d super.getStatusIcon();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        String place \u003d this.getPlace();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        return \"[E]\" + \"[\" + status + \"] \" + description + \"at: \" + place;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eedenong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eedenong": 26
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eedenong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eedenong"
        },
        "content": " * Represents a Command object that will be created when"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eedenong"
        },
        "content": " * the user inputs the command to find tasks using a keyword."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eedenong"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eedenong"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public FindCommand(String input) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        this.keyword \u003d input.split(\" \")[1];"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * Executes the command to find tasks that match the given keyword in the task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * Flags to the user if the task does not exist in the task list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @param tasks TaskList object from the driver Duke object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @param ui Ui object from the driver Duke object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @param storage Storage object from the driver Duke object"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        ArrayList\u003cTask\u003e foundList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        for (Task t: taskList) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            String taskString \u003d t.toString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            // Split the task string by space"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            String[] splitString \u003d taskString.split(\" \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            // Iterate through the array and match the word"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            for (String s: splitString) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                if (s.equals(this.keyword)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                    // If the keyword is found, add to the foundList"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                    foundList.add(t);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        return ui.findTaskSuccess(foundList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eedenong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eedenong": 41
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eedenong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eedenong"
        },
        "content": " * Launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eedenong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eedenong"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eedenong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eedenong": 10
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eedenong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eedenong"
        },
        "content": " * Represents a Command object created when the user inputs the command to list the tasks in the task list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eedenong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eedenong"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public ListCommand(String command) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * Prints the user\u0027s entire current task list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * If the task list is empty, the program will flag to the user that the task list is empty."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @param tasks TaskList object from the driver Duke object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @param ui Ui object from the driver Duke object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @param storage Storage object from the driver Duke object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        // Get the task list from tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        return ui.printTaskList(taskList);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eedenong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eedenong": 23
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eedenong"
        },
        "content": "//@Override"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eedenong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eedenong"
        },
        "content": " * GUI for Duke using FXML"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eedenong"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eedenong"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eedenong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eedenong": 30
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eedenong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eedenong"
        },
        "content": " * Controller for MainWindow"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eedenong"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eedenong"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(\"Hello! I\u0027m Duke. What can I do for you today?\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                dukeImage));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        );"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        if (response.startsWith(\"Bye\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            Thread curr \u003d Thread.currentThread();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                curr.sleep(2000);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eedenong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eedenong": 60
    }
  },
  {
    "path": "src/main/java/MarkDoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eedenong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eedenong"
        },
        "content": " * Represents the Command object that is created when the user inputs the command to mark a particular task as done."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eedenong"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eedenong"
        },
        "content": "public class MarkDoneCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public MarkDoneCommand(String command, int taskNumber) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * Sets the task in the task list, indicated by taskNumber, as done."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @param tasks TaskList object from the driver Duke object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @param ui Ui object from the driver Duke object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @param storage Storage object from the driver Duke object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @throws DukeException Exception thrown when the task to be marked done does not exist in the task list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            // Mark the task as done"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            Task taskDone \u003d tasks.markTaskDone(taskNumber);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            // Update the file by saving it"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            storage.saveFile(tasks.getTaskList());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            // Update the user"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            return ui.markDoneSuccess(taskDone);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eedenong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eedenong": 32
    }
  },
  {
    "path": "src/main/java/OtherCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eedenong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eedenong"
        },
        "content": " * Represents a Command object that will be created when the user"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eedenong"
        },
        "content": " * inputs a command that is not recognised by Duke"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eedenong"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eedenong"
        },
        "content": "public class OtherCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public OtherCommand(String input) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * Executes the command to flag to the user that the input is not"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * of a recognised format."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @param tasks TaskList object from the driver Duke object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @param ui Ui object from the driver Duke object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @param storage Storage object from the driver Duke object"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @return String to be displayed back to the user"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        return ui.flagWrongCommand();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eedenong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eedenong": 23
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eedenong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eedenong"
        },
        "content": " * Represents a object that makes sense of the user input into the program."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eedenong"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eedenong"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * Returns a Command object that is generated from the user\u0027s input into the program."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * The type of Command object that is returned depends on the user\u0027s input."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * Throws a NullPointerException if the user\u0027s input is not of the correct format."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @param input the input String from the user into the program."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @return a Command object based on the user\u0027s input."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @throws NullPointerException thrown if the user input is not in the correct format."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public Command parse(String input) throws NullPointerException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        String[] splitInput \u003d input.split(\" \");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        String cmd \u003d splitInput[0];"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        Command command \u003d null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        switch (cmd) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            command \u003d new ByeCommand(cmd);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            command \u003d new ListCommand(cmd);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            // Read the task number as the next element of splitInput"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(splitInput[1]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            command \u003d new MarkDoneCommand(cmd, taskNumber);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            int taskNumberDelete \u003d Integer.parseInt(splitInput[1]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            command \u003d new DeleteCommand(cmd, taskNumberDelete);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            command \u003d new FindCommand(input);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            command \u003d new AddTaskCommand(cmd, input);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            command \u003d new OtherCommand(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eedenong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eedenong": 49
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eedenong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eedenong"
        },
        "content": " * Represents an object that stores the save file of the user\u0027s task list,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eedenong"
        },
        "content": " * and handles the saving and update of the task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eedenong"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eedenong"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    private Path filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * Constructor for a Storage object that takes in a String"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * representing the name of the task list save file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @param fileName String of the task list save file name."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public Storage(String fileName) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        // Load the file"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        String currDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        this.filePath \u003d  Paths.get(currDir, \"list.txt\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        this.file \u003d new File(filePath.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            // create the file if it does not exist"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                this.file.createNewFile();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            System.err.println(e.getMessage());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public Path getFilePath() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        return this.filePath;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public File getFile() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        return this.file;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * Returns an ArrayList of String from reading the lines"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * from the user\u0027s task list file of the format .txt"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @return ArrayList of String representing the user\u0027s task list,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     *     where each element corresponds to one task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public ArrayList\u003cString\u003e loadFromFilePath() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            Scanner sc \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                lines.add(sc.nextLine());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            System.out.println(\"Task list save file not found!\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        return new ArrayList\u003c\u003e(lines);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * Saves and updates the user\u0027s .txt task list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @param taskList The ArrayList of Tasks that represents the updated list of tasks"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     *                 to be saved to the .txt file."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public void saveFile(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            File file \u003d new File(this.filePath.toString());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            for (Task t : taskList) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                String taskString \u003d t.toString();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                bw.write(taskString);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                bw.newLine();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            bw.close();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            System.out.println(\"Error saving to file! :-(\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "eedenong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eedenong": 95
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eedenong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eedenong"
        },
        "content": " * Represents a parent Task object from which tasks of different categories inherit from."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eedenong"
        },
        "content": " * Each Task object and it\u0027s children will have a description String, as well as a boolean isDone to indicate if the task is completed."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eedenong"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eedenong"
        },
        "content": "class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            // return a tick"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            return \"\\u2713\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            // return a cross"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            return \"\\u2718\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        String status \u003d this.getStatusIcon();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        String description \u003d this.getDescription();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        return \"[\" + status + \"] \" + description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eedenong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eedenong": 37
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eedenong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eedenong"
        },
        "content": " * Represents the object that stores the user\u0027s task list as a static ArrayList of Task objects."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eedenong"
        },
        "content": " * Supports operations to manipulate it\u0027s taskList."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eedenong"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eedenong"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    private static ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * Constructor for a TaskList object that initializes an ArrayList of Tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @param taskListString ArrayList of Strings representing the task Strings that are read"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     *                       from the save file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public TaskList(ArrayList\u003cString\u003e taskListString) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        for (String taskString: taskListString) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            Task task \u003d taskFromString(taskString);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * Adds the specified task object to it\u0027s taskList."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @param task The Task object to be added to the taskList."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * Marks the given task number in the task list as done."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @param taskNumber the task number to be marked as done."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public Task markTaskDone(int taskNumber) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            Task taskMarked \u003d taskList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            taskMarked.setDone();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            return taskMarked;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            String errString \u003d \"\\t Sorry! Could not find the specified task number in your task list!\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            throw new DukeException(errString);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * Removes the specified task from the taskList."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @param taskNumber The index number of the task to be deleted from the taskList."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @return The Task that was deleted."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @throws DukeException Exception thrown if the task does not exist."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public Task deleteTask(int taskNumber) throws DukeException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            Task taskRemoved \u003d taskList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            taskList.remove(taskRemoved);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            return taskRemoved;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            String errString \u003d \"\\t Your task list is empty! You can\u0027t delete from an empty list!\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            throw new DukeException(errString);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * Generates and returns a task given a task string that is read from the save file."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * Returns null if the task string is not in a valid format."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @param taskString a single line task in a String format read from file"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @return Task generated from a TaskString"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    private Task taskFromString(String taskString) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        Task taskToReturn \u003d null;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        String[] strArr \u003d taskString.split(\" \");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        ArrayList\u003cString\u003e temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        Collections.addAll(temp, strArr);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        char type \u003d temp.get(0).charAt(1);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        //check if the char is Done symbol"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        boolean isDone \u003d temp.get(0).charAt(4) \u003d\u003d \u0027\\u2713\u0027;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        case \u0027T\u0027:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            // case for ToDo"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            StringBuilder sbt \u003d new StringBuilder();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            for (int i \u003d 1; i \u003c temp.size(); i++) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                sbt.append(temp.get(i));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                if (i !\u003d (temp.size() - 1)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                    sbt.append(\" \");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            String descT \u003d sbt.toString();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            taskToReturn \u003d new ToDo(descT);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        case \u0027D\u0027:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            // case for Deadline"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            StringBuilder sbd \u003d new StringBuilder();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            ArrayList\u003cString\u003e date \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            for (int i \u003d 1; i \u003c temp.size(); i++) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                if (i !\u003d (temp.size() - 1)) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                    String curr \u003d temp.get(i);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                    if (curr.equals(\"by:\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                        //if equals to colon, replace it with /, don\u0027t add space behind"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                        sbd.append(\"/by \");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                        if (i \u003e\u003d (temp.size() - 3)) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                            date.add(temp.get(i));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                            sbd.append(curr);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                            sbd.append(\" \");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                    // Reached the end of the temp array, means also that date array is complete"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                    date.add(temp.get(i));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                    StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                    for (int j \u003d 0; j \u003c date.size(); j++) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                        sb.append(date.get(j));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                        if (j !\u003d (date.size() - 1)) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                            sb.append(\" \");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                    String dateString \u003d sb.toString();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                    LocalDate d \u003d LocalDate.parse(dateString, formatter);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                    sbd.append(d.format(DateTimeFormatter.ofPattern(\"yyyy-MM-d\")));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            String descD \u003d  sbd.toString();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            taskToReturn \u003d new Deadline(descD);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        case \u0027E\u0027:"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            StringBuilder sbe \u003d new StringBuilder();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            for (int i \u003d 1; i \u003c temp.size(); i++) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                if (i !\u003d (temp.size() - 1))  {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                    String curr \u003d temp.get(i);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                    if (curr.equals(\"at:\")) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                        sbe.append(\"/at \");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                        sbe.append(curr);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                        sbe.append(\" \");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                    sbe.append(temp.get(i));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            String descE \u003d sbe.toString();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            taskToReturn \u003d new Event(descE);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            assert taskToReturn !\u003d null;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            taskToReturn.setDone();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        return taskToReturn;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "eedenong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eedenong": 164
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eedenong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eedenong"
        },
        "content": " * Represents a Task object which description is a String representing the task to do."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eedenong"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eedenong"
        },
        "content": "class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public ToDo(String task) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        String status \u003d super.getStatusIcon();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        return \"[T]\" + \"[\" + status + \"] \" + super.getDescription();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eedenong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eedenong": 14
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eedenong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eedenong"
        },
        "content": " * Represents an object that handles user input and interaction through prompts such as welcome and farewell messages,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eedenong"
        },
        "content": " * as well as indicating success of task addition, deletion and flagging to the user"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eedenong"
        },
        "content": " * when an input of the wrong format is entered."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eedenong"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eedenong"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    private final String BREAKLINE \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public String readInput() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        // Read user input"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        return this.sc.nextLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * Prints and returns a greeting message to the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @return String greeting message to the user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public String sayHello() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        // Get welcome message"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        sb.append(\"Hello! I\u0027m Duke!\\n\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        sb.append(\"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * Prints a farewell message to the user."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public String sayBye() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        // Print goodbye message"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        sb.append(\"Bye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * Alerts user of a successful task addition to their task list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @param task Task object that was added."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @param taskListSize Size of the user\u0027s task list after addition."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public String taskAddSuccess(Task task, int taskListSize) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        sb.append(\"Got it. I\u0027ve added this task:\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        sb.append(task + \"\\n\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        sb.append(\"Now you have \" + taskListSize + \" tasks in the list.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * Alerts the user of a successful task deletion from their task list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @param task Task object that was deleted."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @param taskListSize Size of the user\u0027s task list after deletion."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public String taskDeleteSuccess(Task task, int taskListSize) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        sb.append(\"Understood. I\u0027ve deleted this task:\\n\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        sb.append(\" \" + task + \"\\n\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        sb.append(\"Now you have \" + taskListSize + \" tasks in the list.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * Alerts the user of successfully marking a task as done,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * and showing the user the task that was marked."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * @param task Task object that was marked as done."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public String markDoneSuccess(Task task) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        sb.append(\"Alright! I\u0027ve marked this task as done:\\n\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        sb.append(\" \" + task + \"\\n\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     * Alerts the user of an incorrect command input."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "eedenong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public String flagWrongCommand() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        String sorryStr \u003d \"Sorry! You\u0027ve entered an invalid command, please try again!\\n\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        String helpStr \u003d \"List of commands: \\n\" + \" todo\\n\" + \" event\\n\""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                + \" deadline\\n\" + \" list\\n\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        sb.append(sorryStr);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        sb.append(helpStr);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public String findTaskSuccess(ArrayList\u003cTask\u003e foundList) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        // Check if the foundList is empty"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        if (foundList.size() \u003e 0) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            // If not 0, then print all the tasks that are found"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            sb.append(\"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            for (int i \u003d 0; i \u003c foundList.size(); i++) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                sb.append(\"\\t \" + (i + 1) + \". \" + foundList.get(i).toString());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            // Found list is empty, tell the user that cannot find the matching task"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            sb.append(\"Sorry! No matching tasks found!\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public String printTaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            sb.append(\"Your task list is empty!\\n\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            sb.append(\"Here are the tasks in your list!\\n\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            for(int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                String taskNum \u003d (i + 1) + \".\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                sb.append(taskNum);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                Task currTask \u003d taskList.get(i);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                sb.append(currTask.toString());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                sb.append(\"\\n\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public String getBreakLine() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        return this.BREAKLINE;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "eedenong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eedenong": 132
    }
  },
  {
    "path": "src/main/java/list.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eedenong"
        },
        "content": "[T][?] sleep"
      }
    ],
    "authorContributionMap": {
      "eedenong": 1
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\u003c?import javafx.geometry.*?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\u003c?import javafx.scene.control.*?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\u003c?import javafx.scene.image.*?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "eedenong": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eedenong"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eedenong"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "eedenong": 19
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eedenong"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public void testDeadlineString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        String inputString \u003d \"homework /by 2020-02-12\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        String expectedString \u003d \"[D][\" + \"\\u2718\" + \"] homework by: Feb 12 2020\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        assertEquals(expectedString, new Deadline(inputString).toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eedenong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eedenong": 11
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eedenong"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public void testEventString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        String inputString \u003d \"dinner /at formosa\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        String expectedString \u003d \"[E][\" + \"\\u2718\" + \"] \" + \"dinner at: formosa\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        assertEquals(expectedString, new Event(inputString).toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eedenong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eedenong": 13
    }
  },
  {
    "path": "src/test/java/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eedenong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eedenong"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    public void testToDoString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        String inputString \u003d \"sleep\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        String expectedString \u003d \"[T][\" + \"\\u2718\" + \"] sleep\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eedenong"
        },
        "content": "        assertEquals(expectedString, new ToDo(inputString).toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eedenong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eedenong": 12
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\tHello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\tWhat can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\t Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\t  [T][✘] buy bread"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\t Now you have 1 tasks in the list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\t Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\t  [E][✘] meeting  (at: 2pm)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\t Now you have 2 tasks in the list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\tHere are the tasks in your list:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\t1.[T][✘] buy bread"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\t2.[E][✘] meeting  (at: 2pm)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\tNice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\t[E][✓] meeting  (at: 2pm)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\tBye. Hope to see you again soon!"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eedenong"
        },
        "content": "\t____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "eedenong": 26
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eedenong"
        },
        "content": "todo buy bread"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eedenong"
        },
        "content": "event meeting /at 2pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eedenong"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eedenong"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eedenong"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "eedenong": 5
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eedenong"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eedenong"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eedenong"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eedenong"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eedenong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eedenong"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eedenong"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eedenong"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eedenong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eedenong"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eedenong"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eedenong"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eedenong"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eedenong"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eedenong"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eedenong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eedenong"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eedenong"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eedenong"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eedenong"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eedenong"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eedenong"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eedenong"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "eedenong": 34
    }
  }
]
