[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "version \u00270.2.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    archiveVersion \u003d \"0.2.0\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    compile(\u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    testImplementation(\u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "test {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    mainClassName \u003d \"duke.program.Launcher\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Hardoh": 39,
      "-": 20
    }
  },
  {
    "path": "input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "hello there"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "todo homework"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "deadline Quiz /by Friday 2359"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "deadline      /by"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "deadline      /by dsadas"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "deadline Test /by"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "event Nat Day /at 9 Aug"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "event    /at"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "todo eat sushi"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "deadline proj deliverable /by Wednesday 2359"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "event Bday /at 10 Mar"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Hardoh": 20
    }
  },
  {
    "path": "runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "if ! javac -cp src/main/java/ -Xlint:none -d ../bin src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Hardoh": 34
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.interaction.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * Represents the Command for the \"add\" input by the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * It adds a new task to the task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @author  Hardy Shein"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    private String toAdd;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    private Task.TaskType taskType;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public AddCommand() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * AddCommand constructor."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param toAdd string name of new task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param taskType of the new task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public AddCommand(String toAdd, Task.TaskType taskType) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        this.toAdd \u003d toAdd;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Executes Add behaviour of adding a new task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param taskList to access collection of tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param storage to access save-load functionality."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        String output \u003d null;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            output \u003d taskList.addTask(toAdd, taskType, storage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            Ui.showTaskAdded(output, taskList.getList().size());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            UndoCommand.addUndoableCommand(new UndoAddCommand());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            Ui.showError(e);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Inform if command is an exit command."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @return boolean indicating if command is an exit command."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return \"todo/deadline/event - Add a new task to your list.\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hardoh": 65
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * Represents the a generic Command that will be extended from."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * The method \u003ccode\u003eexecute\u003c/code\u003e should be implemented and"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * called to run any command\u0027s behaviours."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @author  Hardy Shein"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Abstract execute method for all Command subclasses."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param taskList to access collection of tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param storage to access save-load functionality."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public abstract void execute(TaskList taskList, Storage storage);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Abstract method for all Command subclasses."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @return boolean indicating if command is an exit command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hardoh": 30
    }
  },
  {
    "path": "src/main/java/duke/command/DateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.task.DatedTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.interaction.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * Represents the Command for the \"date\" input by the user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * It displays all task items that fall on an input date."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @author  Hardy Shein"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "public class DateCommand extends Command {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    private String dateStr;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public DateCommand() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * DateCommand constructor."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param dateStr of the date user wants to check."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public DateCommand(String dateStr) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        this.dateStr \u003d dateStr;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Executes Date behaviour of finding all tasks on a given date."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param taskList to access collection of tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param storage to access save-load functionality."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        String latestResponse \u003d \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            LocalDate date \u003d  LocalDate.parse(dateStr);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            int count \u003d 0;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            for (Task t: taskList.getList()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                if (!(t instanceof DatedTask)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                DatedTask datedTask \u003d (DatedTask)t;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                if (!datedTask.getDate().toLocalDate().isEqual(date)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                latestResponse +\u003d count + \".\" + datedTask.toString() + \"\\n\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                Ui.printWithIndent(count + \".\" + datedTask.toString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            latestResponse +\u003d \"You have \" + count + \" thing\" + (count !\u003d 1 ? \"s\" : \"\")"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                    + \" happening on: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            Ui.setLatestResponse(latestResponse);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            Ui.printWithIndent(latestResponse);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            latestResponse \u003d \"Please input a valid date. E.g. 2020-12-26\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            Ui.printWithIndent(latestResponse);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            Ui.setLatestResponse(latestResponse);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Inform if command is an exit command."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @return boolean indicating if command is an exit command."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return \"date yyyy-MM-dd - Shows all tasks on the given date\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hardoh": 90
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.interaction.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * Represents the Command for the \"delete\" input by the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * It deletes the task at the input task index from the task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @author  Hardy Shein"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    private int indexToDelete;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public DeleteCommand() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * DeleteCommand constructor."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param index of the task in collection to be deleted."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        indexToDelete \u003d index;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Executes Delete behaviour of deleted task at given index."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param taskList to access collection of tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param storage to access save-load functionality."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        Task toDelete \u003d taskList.getTask(indexToDelete);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        String output \u003d taskList.deleteTask(indexToDelete);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        if (output !\u003d null) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            UndoCommand.addUndoableCommand(new UndoDeleteCommand(toDelete, indexToDelete));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            storage.saveTaskListToFile(taskList);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            Ui.showTaskDelete(output, taskList.getList().size());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            Ui.showTaskNotFound();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Inform if command is an exit command."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @return boolean indicating if command is an exit command."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return \"delete \u003cindex\u003e - Deletes a task at the given index in your task list.\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hardoh": 64
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.interaction.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * Represents the Command for the \"done\" input by the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * It sets the input task index \"isDone\" status to true."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @author  Hardy Shein"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    private int doneIndex;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public DoneCommand() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * DoneCommand constructor."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param index of the task in collection to be set Done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        doneIndex \u003d index;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Executes Done behaviour of setting given task to Done."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param taskList to access collection of tasks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param storage to access save-load functionality."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        if (taskList.doneTask(doneIndex)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            UndoCommand.addUndoableCommand(new UndoDoneCommand(doneIndex));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            storage.saveTaskListToFile(taskList);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            Ui.showTaskDone(taskList.getList().get(doneIndex));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            Ui.showTaskNotFound();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Inform if command is an exit command."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @return boolean indicating if command is an exit command."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return \"done \u003cindex\u003e - Updates the task at the given index to \\\"Done\\\" status.\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hardoh": 60
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * Represents the Command for the \"bye\" input by the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * It does not have any \u003ccode\u003eexecute\u003c/code\u003e behaviour but the"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * \u003ccode\u003eisExit\u003c/code\u003e informs the main loop to end the program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @author  Hardy Shein"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Inform if command is an exit command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @return boolean indicating if command is an exit command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return \"bye - Quits the program. I don\u0027t wanna go :\u0027(\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hardoh": 33
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.interaction.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * Represents the Command for the \"find\" input by the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * It shows all task items that contain the subsequent keyword from the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @author  Hardy Shein"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public FindCommand() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * FindCommand constructor."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param keyword of the word user wants to match."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Executes Find behaviour of finding all tasks containing a keyword."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param taskList to access collection of tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param storage to access save-load functionality."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        String latestResponse \u003d \"\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        Ui.showLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        if (keyword.isBlank()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            latestResponse \u003d \"Sorry, I need a keyword.\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            Ui.printWithIndent(latestResponse);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        for (Task t: taskList.getList()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            if (!t.getName().contains(keyword)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            latestResponse +\u003d count + \".\" + t.toString() + \"\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            Ui.printWithIndent(count + \".\" + t.toString());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        latestResponse +\u003d \"You have \" + count + \" matching task\" + (count !\u003d 1 ? \"s\" : \"\")"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                + \" for keyword: \" + keyword;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        Ui.setLatestResponse(latestResponse);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        Ui.printWithIndent(\"You have \" + count + \" matching task\" + (count !\u003d 1 ? \"s\" : \"\")"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                + \" for keyword: \" + keyword);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        Ui.showLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Inform if command is an exit command."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @return boolean indicating if command is an exit command."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return \"find \u003ckeyword\u003e - Shows all tasks that match a given keyword/phrase\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hardoh": 77
    }
  },
  {
    "path": "src/main/java/duke/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.interaction.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * Represents the Command for the \"help\" input by the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * It displays all possible commands available."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @author  Hardy Shein"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Executes List behaviour of showing all tasks in collection."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param taskList to access collection of tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param storage to access save-load functionality."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        Ui.showAllCommands(new AddCommand(), new ListCommand(), new DateCommand(), new DeleteCommand(),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                new DoneCommand(), new ExitCommand(), new FindCommand(), new UndoCommand(), this);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Inform if command is an exit command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @return boolean indicating if command is an exit command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return \"help - Shows all possible commands available.\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hardoh": 40
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.interaction.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * Represents the Command for the \"list\" input by the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * It displays all task items in the task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @author  Hardy Shein"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Executes List behaviour of showing all tasks in collection."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param taskList to access collection of tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param storage to access save-load functionality."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        Ui.showAllTasks(taskList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Inform if command is an exit command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @return boolean indicating if command is an exit command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return \"list - Shows all tasks currently on the list.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hardoh": 39
    }
  },
  {
    "path": "src/main/java/duke/command/UndoAddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.interaction.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * Represents an executable command of undoing an AddCommand"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * It deletes the task at the input task index from the task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @author  Hardy Shein"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "public class UndoAddCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Executes delete behaviour of the latest added task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param taskList to access collection of tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param storage to access save-load functionality."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        String output \u003d taskList.deleteTask("
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                taskList.getList().size() - 1"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        );"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        if (output \u003d\u003d null) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            Ui.showTaskNotFound();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        storage.saveTaskListToFile(taskList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        Ui.showTaskDelete(output, taskList.getList().size());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Inform if command is an exit command."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @return boolean indicating if command is an exit command."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hardoh": 46
    }
  },
  {
    "path": "src/main/java/duke/command/UndoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.interaction.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import java.util.Stack;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * Represents the Command for the \"add\" input by the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * It adds a new task to the task list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @author  Hardy Shein"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "public class UndoCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    private static Stack\u003cCommand\u003e undoableCommandStack;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * UndoCommand constructor."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public UndoCommand() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        if (undoableCommandStack \u003d\u003d null) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            undoableCommandStack \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Executes Add behaviour of adding a new task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param taskList to access collection of tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param storage to access save-load functionality."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        if (!undoableCommandStack.empty()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            undoableCommandStack.pop().execute(taskList, storage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            Ui.showNothingToUndo();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Adds an undoable command to the undoable stack."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param command that can be executed."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public static void addUndoableCommand(Command command) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        if (undoableCommandStack \u003d\u003d null) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            undoableCommandStack \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        undoableCommandStack.push(command);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Inform if command is an exit command."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @return boolean indicating if command is an exit command."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return \"undo - Reverts task list to prior to last command.\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hardoh": 68
    }
  },
  {
    "path": "src/main/java/duke/command/UndoDeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.interaction.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * Represents an executable command of undoing an AddCommand"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * It deletes the task at the input task index from the task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @author  Hardy Shein"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "public class UndoDeleteCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    private int indexToRestore;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    private Task taskToRestore;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * UndoDeleteCommand constructor."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param taskToRestore Task object of the task to be restored."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param indexToRestore integer of the task\u0027s old index."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public UndoDeleteCommand(Task taskToRestore, int indexToRestore) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        this.taskToRestore \u003d taskToRestore;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        this.indexToRestore \u003d indexToRestore;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Executes Add behaviour of deleted task at a given index."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param taskList to access collection of tasks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param storage to access save-load functionality."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        output \u003d taskList.addTaskAt(indexToRestore, taskToRestore);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        Ui.showTaskAdded(output, taskList.getList().size());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Inform if command is an exit command."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @return boolean indicating if command is an exit command."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hardoh": 52
    }
  },
  {
    "path": "src/main/java/duke/command/UndoDoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.interaction.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * Represents the Command for the \"done\" input by the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * It sets the input task index \"isDone\" status to true."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @author  Hardy Shein"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "public class UndoDoneCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    int undoneIndex;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * UndoDoneCommand constructor."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param index of the task in collection to be set Not Done."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public UndoDoneCommand(int index) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        undoneIndex \u003d index;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Executes Done behaviour of setting given task to Done."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param taskList to access collection of tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param storage to access save-load functionality."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public void execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        taskList.undoneTask(undoneIndex);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        storage.saveTaskListToFile(taskList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        Ui.showTaskUndone(taskList.getList().get(undoneIndex));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Inform if command is an exit command."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @return boolean indicating if command is an exit command."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return \"done \u003cindex\u003e - Updates the task at the given index to \\\"Done\\\" status.\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hardoh": 52
    }
  },
  {
    "path": "src/main/java/duke/interaction/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "package duke.interaction;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Creates a new DialogBox object with given String and Image."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param text to print on the dialog box."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param img for \"speaker\" of this dialog."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @return a new DialogBox object."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Creates a new DialogBox object with given String and Image, flipped."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param text to print on the dialog box."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param img for \"speaker\" of this dialog."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @return a new DialogBox object."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hardoh": 75
    }
  },
  {
    "path": "src/main/java/duke/interaction/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "package duke.interaction;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.program.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Initializes the Duke\u0027s main window. App greets user via GUI here."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        // First message"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                DialogBox.getDukeDialog(\"Hello! I\u0027m Duke. What can I do for you?\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                        + \"(Type \u0027help\u0027 to get started.)\", dukeImage)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        );"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        );"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hardoh": 63
    }
  },
  {
    "path": "src/main/java/duke/interaction/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "package duke.interaction;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.command.DateCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.command.HelpCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.command.UndoCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * Handles the applications parsing behaviour,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * deciding what action to take depending on the user input/command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @author  Hardy Shein"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Analyses a full command string and converts"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * to an executable Command object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param fullCommand read from user input."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @return Command object parsed from a full command string"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException.InvalidCommand {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        Scanner in \u003d new Scanner(fullCommand);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        String input \u003d in.next();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            switch (input.toLowerCase()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                return new DoneCommand((in.hasNextInt() ? in.nextInt() - 1 : -1));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                return new AddCommand((in.hasNextLine() ? in.nextLine().trim() : \"\"), Task.TaskType.TODO);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                return new AddCommand((in.hasNextLine() ? in.nextLine().trim() : \"\"), Task.TaskType.DEADLINE);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                return new AddCommand((in.hasNextLine() ? in.nextLine().trim() : \"\"), Task.TaskType.EVENT);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                return new DeleteCommand((in.hasNextInt() ? in.nextInt() - 1 : -1));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            case \"date\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                return new DateCommand((in.hasNextLine() ? in.nextLine().trim() : \"\"));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                return new FindCommand((in.hasNextLine() ? in.nextLine().trim() : \"\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            case \"help\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                return new HelpCommand();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            case \"undo\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                return new UndoCommand();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                if (in.hasNextLine()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                    in.nextLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                throw new DukeException.InvalidCommand();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        } catch (DukeException.InvalidCommand e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            Ui.showError(e);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hardoh": 72
    }
  },
  {
    "path": "src/main/java/duke/interaction/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "package duke.interaction;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * Contains mainly static methods for all interactions"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * with the user, including printing and reading input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @author  Hardy Shein"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    private static String indentation \u003d \"    \";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    private static String hori_line \u003d \"______________________________________\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    private static String latestResponse \u003d \"\"; // For GUI to read from"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Prints the input with a set indentation."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param toPrint user whats to print."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public static void printWithIndent(String toPrint) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        System.out.println(indentation + toPrint);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Prints a horizontal line for presentation."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public static void showLine() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        printWithIndent(hori_line);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Prints greeting presentation for user."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public static void greet() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        printWithIndent(\"Hello! I\u0027m Duke.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        printWithIndent(\"What can I do for you?\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Prints exiting presentation for user."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public static void sayBye() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        latestResponse \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        printWithIndent(latestResponse);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Prints the exception for the user to see."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param e of the exception that occurred."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public static void showError(Exception e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        latestResponse \u003d e.getMessage();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        printWithIndent(e.getMessage());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Prints the information of the new task added"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * and the new number of tasks."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param added task to be print."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param total new count of tasks."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public static void showTaskAdded(String added, int total) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        latestResponse \u003d \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        latestResponse +\u003d added + \"\\n\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        latestResponse +\u003d \"Now you have \" + total + \" task\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                + (total !\u003d 1 ? \"s\" : \"\") + \" in the list.\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        printWithIndent(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        printWithIndent(added);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        printWithIndent(\"Now you have \" + total + \" task\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                + (total !\u003d 1 ? \"s\" : \"\") + \" in the list.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Prints the information of all the tasks in the TaskList object."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param taskList for access to the collection of Task objects."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public static void showAllTasks(TaskList taskList) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        latestResponse \u003d \"\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        ArrayList\u003cTask\u003e listToShow \u003d taskList.getList();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        if (!listToShow.isEmpty()) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d listToShow.size(); i++) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                latestResponse +\u003d i + \".\" + listToShow.get(i - 1).toString() + \"\\n\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                printWithIndent(i + \".\" + listToShow.get(i - 1).toString());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            latestResponse \u003d \"Empty List. You are currently free! Upz lah!\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            printWithIndent(latestResponse);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Prints the information of the done task."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param done task to be print."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public static void showTaskDone(Task done) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        latestResponse \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        latestResponse +\u003d done.toString();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        printWithIndent(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        printWithIndent(done.toString());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Prints the information of the undone task."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param undone task to be print."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public static void showTaskUndone(Task undone) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        latestResponse \u003d \"Ok, I\u0027ve marked this task as undone:\\n\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        latestResponse +\u003d undone.toString();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        printWithIndent(\"Ok, I\u0027ve marked this task as undone:\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        printWithIndent(undone.toString());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Prints the information of the deleted task"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * and the new number of tasks."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param deleted task to be print."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param total new count of tasks."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public static void showTaskDelete(String deleted, int total) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        latestResponse \u003d \"Noted! I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        latestResponse +\u003d deleted + \"\\n\";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        latestResponse +\u003d \"Now you have \" + total"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                + \" task\" + (total !\u003d 1 ? \"s\" : \"\") + \" in the list.\";"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        printWithIndent(\"Noted! I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        printWithIndent(deleted);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        printWithIndent(\"Now you have \" + total"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                + \" task\" + (total !\u003d 1 ? \"s\" : \"\") + \" in the list.\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Prints to the user that the task of interest was not found."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public static void showTaskNotFound() {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        latestResponse \u003d \"Sorry, mate! No such task.\";"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        printWithIndent(latestResponse);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Prints to the user that there is nothing to undo."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public static void showNothingToUndo() {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        latestResponse \u003d \"Nothing to undo.\";"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        printWithIndent(latestResponse);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Reads next user\u0027s whole command and returns as a String."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @return string representation of the command."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public static String readCommand() {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public static String getLatestResponse() {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return latestResponse;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public static void setLatestResponse(String response) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        latestResponse \u003d response;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Prints the commands provided by the application."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param commands varargs representing all commands to be printed."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public static void showAllCommands(Command... commands) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        latestResponse \u003d \"\";"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        Stream.of(commands).forEach(command -\u003e {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            latestResponse +\u003d \"-- \" + command.toString() + \"\\n\";"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            printWithIndent(\"-- \" + command + \". \" + command.toString());"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        });"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hardoh": 216
    }
  },
  {
    "path": "src/main/java/duke/program/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "package duke.program;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.interaction.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.interaction.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * The Duke program implements an application that manipulates a collection of tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * This class contains overall behaviour functions like \u003ccode\u003eloop\u003c/code\u003e and \u003ccode\u003eexit\u003c/code\u003e."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @author  Hardy Shein"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Duke\u0027s constructor initializes Storage and TaskList"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * and loads user data into the new task list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        storage.load(taskList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Duke\u0027s exit behaviour involves UI output"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * and final storage saving."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        Ui.sayBye();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        storage.saveTaskListToFile(taskList);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Duke\u0027s behaviour loop after set-up to before exit."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    private void loop() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        boolean isExiting \u003d false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            String fullCommand \u003d Ui.readCommand();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                command \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                command.execute(taskList, storage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                isExiting \u003d command.isExit();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            } catch (DukeException.InvalidCommand invalidCommand) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                Ui.showError(invalidCommand);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        } while (!isExiting);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        boolean isExiting;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            command.execute(taskList, storage);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            output \u003d Ui.getLatestResponse();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            isExiting \u003d command.isExit();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            if (isExiting) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                // TODO: Find a more graceful way to exit?"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                System.exit(0);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        } catch (DukeException.InvalidCommand invalidCommand) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            output \u003d invalidCommand.getMessage();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hardoh": 84,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/program/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "package duke.program;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hardoh": 12
    }
  },
  {
    "path": "src/main/java/duke/program/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "package duke.program;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.interaction.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hardoh": 32
    }
  },
  {
    "path": "src/main/java/duke/task/DatedTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * Represents the DatedTask type class extending from the"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * abstract \u003ccode\u003eTask\u003c/code\u003e class, which has a name and a \u003ccode\u003eLocalDateTime\u003c/code\u003e for the due date and time."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @author  Hardy Shein"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "public abstract class DatedTask extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    private LocalDateTime date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * DatedTask constructor with LocalDateTime for date."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param name of the dated task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param date of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public DatedTask(String name, LocalDateTime date) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Getter for a reference to the LocalDateTime of the date."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @return the LocalDateTime representation of the date."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public LocalDateTime getDate() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hardoh": 34
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.util.DateTimeUtil;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * Represents the Deadline type class extending from the"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * abstract \u003ccode\u003eDatedTask\u003c/code\u003e class, which has a name and a \u003ccode\u003eLocalDateTime\u003c/code\u003e for the due date and time."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @author  Hardy Shein"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "public class Deadline extends DatedTask {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Deadline constructor with LocalDateTime for date."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param name of the deadline task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param deadline of the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public Deadline(String name, LocalDateTime deadline) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        super(name, deadline);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Deadline constructor with String for date."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param name of the deadline task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param deadline of the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public Deadline(String name, String deadline) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        super(name, DateTimeUtil.stringAsDateTime(deadline));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Gets the save-string representation of the task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @return the String representation of the task Storage can save."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        //D0Finish project@June 6"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return \"D\" + (isDone ? \"1\" : \"0\") + name + \"@\" + getDate();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return \"[D]\" + super.toString()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                + \" (by: \" + getDate().format(DateTimeFormatter.ofPattern(\"MMM d yyyy h.mma\")) + \")\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hardoh": 53
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.util.DateTimeUtil;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * Represents the Event type class extending from the"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * abstract \u003ccode\u003eDatedTask\u003c/code\u003e class, which has a name and a \u003ccode\u003eLocalDateTime\u003c/code\u003e for the date and time."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @author  Hardy Shein"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "public class Event extends DatedTask {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Event constructor with LocalDateTime for date."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param  name of the deadline task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param datetime of the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public Event(String name, LocalDateTime datetime) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        super(name, datetime);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Event constructor with String for date."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param  name of the deadline task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param datetime of the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public Event(String name, String datetime) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        super(name, DateTimeUtil.stringAsDateTime(datetime));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Gets the save-string representation of the task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @return the String representation of the task Storage can save."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        //E1Anna\u0027s Birthday@May 15"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return \"E\" + (isDone ? \"1\" : \"0\") + name + \"@\" + getDate();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return \"[E]\" + super.toString()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                + \" (at: \" + getDate().format(DateTimeFormatter.ofPattern(\"MMM d yyyy h.mma\")) + \")\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hardoh": 53
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * Represents the a generic Task that will be extended from."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @author  Hardy Shein"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public enum TaskType { TODO, DEADLINE, EVENT }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Task constructor."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param  name of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Sets task\u0027s status to done."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Sets task\u0027s status to undone."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public void markAsUndone() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Gets the save-string representation of the task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @return the String representation of the task Storage can save."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public abstract String toSaveString();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return \"[\" + (isDone ? \"✓\" : \"✘\") + \"] \" + name;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hardoh": 54
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.util.DateTimeUtil;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * Handles the data structure where the tasks are stored."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * Contains various methods to add, delete and \"done\" a task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @author  Hardy Shein"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * TaskList constructor initializes array list of tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * with initial capacity 100."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Getter for a reference to the task list data structure."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @return the ArrayList collection of tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Adds to the task collection a task object generated"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * from the save-string representation."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param taskString of a save-string representation of the task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public void addSaveStringAsTask(String taskString) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        // Takes in a string representation of a task and adds to list"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        String taskInfo;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        String[] sep;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        switch (taskString.charAt(0)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        case \u0027T\u0027:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            taskList.add(new ToDo(taskString.substring(2)));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        case \u0027D\u0027:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            taskInfo \u003d taskString.substring(2);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            sep \u003d taskInfo.split(\"@\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            taskList.add(new Deadline(sep[0], LocalDateTime.parse(sep[1])));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        case \u0027E\u0027:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            taskInfo \u003d taskString.substring(2);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            sep \u003d taskInfo.split(\"@\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            taskList.add(new Event(sep[0], LocalDateTime.parse(sep[1])));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        if (taskString.charAt(1) \u003d\u003d \u00271\u0027) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            taskList.get(taskList.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Adds to the task collection a new task object."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param index within the list of this new task."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param task object representing the new task."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @return a String representing the task that was added."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public String addTaskAt(int index, Task task) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        taskList.add(index, task);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return task.toString();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Adds to the task collection a new task object."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param newTask name of the new task to add."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param taskType for the type of task to add."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param storage for saving the new task to file."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @return a String representing the task that was added, else an error message."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public String addTask(String newTask, Task.TaskType taskType, Storage storage) throws Exception {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                addTodo(newTask);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                addDeadline(newTask);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                addEvent(newTask);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            Task t \u003d taskList.get(taskList.size() - 1);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            storage.saveTaskToFile(t);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            return t.toString();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        } catch (DukeException.EmptyToDo | DukeException.EmptyDeadlineName"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                | DukeException.NoDeadlineTime | DukeException.EmptyEvent"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                | DukeException.NoEventDatetime e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            // currently all exceptions are handled just by relaying a message. Nothing special, yet."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Adds to the task collection a new Todo task."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param newTask name of the new task to add."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    private void addTodo(String newTask) throws DukeException.EmptyToDo {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        if (newTask.isBlank()) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            throw new DukeException.EmptyToDo();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        taskList.add(new ToDo(newTask));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Adds to the task collection a new Deadline task."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param newTask name of the new task to add."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    private void addDeadline(String newTask) throws DukeException.EmptyDeadlineName,"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            DukeException.NoDeadlineTime, DukeException.InvalidDateTime {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        String taskName;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        String[] strArr;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        // newTask string consists of \"\u003cactual task name\u003e /by \u003cdeadline\u003e\""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        strArr \u003d newTask.split(\"/by\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        taskName \u003d strArr[0].trim();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        if (taskName.isBlank()) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            throw new DukeException.EmptyDeadlineName();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        String deadline;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            deadline \u003d strArr[1].trim();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            // This will occur when user did not use a /by command"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            throw new DukeException.NoDeadlineTime();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        // /by was used but is followed by blank"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        if (deadline.isBlank()) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            throw new DukeException.NoDeadlineTime();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        // Check if valid date"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            DateTimeUtil.checkStringValidDate(deadline);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            taskList.add(new Deadline(taskName, deadline));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            throw new DukeException.InvalidDateTime();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Adds to the task collection a new Event task."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param newTask name of the new task to add."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    private void addEvent(String newTask) throws DukeException.EmptyEvent,"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            DukeException.NoEventDatetime, DukeException.InvalidDateTime {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        String taskName;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        String[] strArr;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        // newTask string consists of \"\u003cactual task name\u003e /at \u003cdate\u003e\""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        strArr \u003d newTask.split(\"/at\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        taskName \u003d strArr[0].trim();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        if (taskName.isBlank()) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            throw new DukeException.EmptyEvent();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        String eventTime;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            eventTime \u003d strArr[1].trim();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            // This will occur when user did not use a /at command"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            throw new DukeException.NoEventDatetime();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        // /at was used but is followed by blank"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        if (eventTime.isBlank()) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            throw new DukeException.NoEventDatetime();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        // Check if valid date"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            DateTimeUtil.checkStringValidDate(eventTime);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            taskList.add(new Event(taskName, eventTime));"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            throw new DukeException.InvalidDateTime();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Updates a task object in collection to \"Done\"."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param taskIndex of the task (in collection) to be set \"Done\"."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @return a boolean representing if task was found (set to done), else false"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public boolean doneTask(int taskIndex) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        if (taskIndex \u003c taskList.size() \u0026\u0026 taskIndex \u003e\u003d 0) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            taskList.get(taskIndex).markAsDone();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            // Task does not exist"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Updates a task object in collection to \"Not Done\"."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param taskIndex of the task (in collection) to be set \"Done\"."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @return a boolean representing if task was found (set to done), else false"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public boolean undoneTask(int taskIndex) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        if (taskIndex \u003c taskList.size() \u0026\u0026 taskIndex \u003e\u003d 0) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            taskList.get(taskIndex).markAsUndone();"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            // Task does not exist"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Deletes a task object from collection."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param taskIndex of the task (in collection) to be deleted."
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @return a String representing the task that was deleted, else null."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public String deleteTask(int taskIndex) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        if (taskIndex \u003c taskList.size() \u0026\u0026 taskIndex \u003e\u003d 0) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            String taskToRemove \u003d taskList.get(taskIndex).toString();"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            taskList.remove(taskIndex);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            return taskToRemove;"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            // Task does not exist"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Getter for a reference to the task at an index."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @return the Task object at the index of the task list."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hardoh": 259
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * Represents the To-do type class extending from the"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * abstract \u003ccode\u003eTask\u003c/code\u003e class, which simply has a name."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @author  Hardy Shein"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * ToDo constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param name of the ToDo task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public ToDo(String name) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Gets the save-string representation of the task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @return the String representation of the task Storage can save."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        //T1Read a book"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return \"T\" + (isDone ? \"1\" : \"0\") + name;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hardoh": 36
    }
  },
  {
    "path": "src/main/java/duke/util/DateTimeUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import java.time.temporal.TemporalAccessor;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * Contains Date-Time related method(s)."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @author  Hardy Shein"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "public class DateTimeUtil {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    private static DateTimeFormatter formatter \u003d null;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * A conversion tool from String to LocalDateTime."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param dateTimeString to be converted to LocalDateTime object"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @return the LocalDateTime representation of the input string"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public static LocalDateTime stringAsDateTime(String dateTimeString) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        if (formatter \u003d\u003d null) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            formatter \u003d DateTimeFormatter"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                    .ofPattern(\"yyyy-MM-dd[ HH:mm]\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        TemporalAccessor temporalAccessor \u003d formatter.parseBest(dateTimeString, LocalDateTime::from, LocalDate::from);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return (temporalAccessor instanceof LocalDateTime)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                ? (LocalDateTime)temporalAccessor :"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                ((LocalDate)temporalAccessor).atStartOfDay(); // Assume time is 00:00 where no time is given"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Attempts to parse a String to a DateTIme object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param dateTimeString representing the candidate String for DateTime"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public static void checkStringValidDate(String dateTimeString) throws DateTimeParseException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        if (formatter \u003d\u003d null) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            formatter \u003d DateTimeFormatter"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                    .ofPattern(\"yyyy-MM-dd[ HH:mm]\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            formatter.parseBest(dateTimeString, LocalDateTime::from, LocalDate::from);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hardoh": 51
    }
  },
  {
    "path": "src/main/java/duke/util/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * Contains all of Duke\u0027s user-defined exceptions."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @author  Hardy Shein"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "public class DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public static class InvalidCommand extends Exception {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        public InvalidCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            super(\"Sorry, I don\u0027t know what you mean. Try the \u0027help\u0027 command?\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public static class EmptyToDo extends Exception {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        public EmptyToDo() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            super(\"Whoa there! I need to know what you are \\\"ToDo-ing\\\"!\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public static class EmptyDeadlineName extends Exception {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        public EmptyDeadlineName() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            super(\"Whoa there! I need to know what is the deadline!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public static class NoDeadlineTime extends Exception {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        public NoDeadlineTime() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            super(\"Whoa there! I need to know when is the deadline! E.g. \\\"deadline quiz /by 2019-07-09\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public static class EmptyEvent extends Exception {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        public EmptyEvent() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            super(\"Whoa there! I need to know what\u0027s the event!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public static class NoEventDatetime extends Exception {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        public NoEventDatetime() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            super(\"Whoa there! I need to know when is the event! E.g. \\\"event Party /at 2020-07-10 17:30\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public static class InvalidDateTime extends Exception {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        public  InvalidDateTime() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            super(\"Sorry, I\u0027m gonna need a proper date. E.g. 2020-07-10\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hardoh": 52
    }
  },
  {
    "path": "src/main/java/duke/util/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * Responsible for all File IO related behaviours. It includes save and load functionality."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @author  Hardy Shein"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hardoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    private File saveFile;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Storage\u0027s constructor checks if"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * \"data/userdata.txt\" exists. If not,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * it creates the relevant directory and file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Finally, initializes saveFile with that file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        File dir \u003d new File(\"data\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        if (!dir.exists()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            dir.mkdir();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        saveFile \u003d new File(dir, \"userdata.txt\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        if (!saveFile.exists()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                saveFile.createNewFile();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                System.err.println(e);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        assert saveFile !\u003d null : \" Save file was not created.\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Getter for a reference to the File data with user data."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @return the File object representing user data"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public File getSave() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        return this.saveFile;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Writes the information of a single task to the"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * save file (For single task additions by user)."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param task a reference to a Task object to save."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public void saveTaskToFile(Task task) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        FileWriter writer;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            writer \u003d new FileWriter(saveFile, true);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            PrintWriter pw \u003d new PrintWriter(writer);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            pw.println(task.toSaveString());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            pw.close();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            System.err.println(e);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Traverses whole list of tasks from TaskList object and"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * writes out to the save file."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param taskList a reference to the TaskList object to read tasks from."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public void saveTaskListToFile(TaskList taskList) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        FileWriter writer;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        PrintWriter pw;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            // Clear save"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            writer \u003d new FileWriter(saveFile);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            pw \u003d new PrintWriter(writer);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            pw.print(\"\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            // Save from scratch"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            writer \u003d new FileWriter(saveFile, true);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            pw \u003d new PrintWriter(writer);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            pw.print(\"\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            for (Task t: taskList.getList()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                pw.println(t.toSaveString());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            pw.close();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            System.err.println(e);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * Reads through the save file and adds in any existing tasks into"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * a task list object."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     * @param taskList a reference to the TaskList object to add tasks to."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public void load(TaskList taskList) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            Scanner reader \u003d new Scanner(saveFile);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            String data;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            while (reader.hasNextLine()) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                data \u003d reader.nextLine();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                taskList.addSaveStringAsTask(data);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hardoh": 117
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "         \u003c/padding\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"65.0\" fitWidth\u003d\"67.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Hardoh": 19
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.interaction.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Hardoh": 19
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.interaction.Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.util.DateTimeUtil;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import duke.util.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNotEquals;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public void parserTest() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        System.out.println(\"TEST: ParserTest\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        Command c \u003d null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            c \u003d Parser.parse(\"bye\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        } catch (DukeException.InvalidCommand invalidCommand) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "            System.out.println(invalidCommand.getMessage());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        assertEquals(true, c.isExit());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public void dateTimeTest() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        System.out.println(\"TEST: DateTimeTest\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        LocalDateTime dt \u003d DateTimeUtil.stringAsDateTime(\"2020-02-25\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        LocalDateTime expected \u003d LocalDateTime.parse(\"2020-02-25T00:00\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        assertEquals(expected, dt);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        dt \u003d DateTimeUtil.stringAsDateTime(\"2020-04-05 11:04\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        expected \u003d LocalDateTime.parse(\"2020-04-05T11:04\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        assertEquals(expected, dt);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        dt \u003d DateTimeUtil.stringAsDateTime(\"2020-04-05 11:59\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        expected \u003d LocalDateTime.parse(\"2020-04-05T23:59\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        assertNotEquals(expected, dt);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public void taskTest() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        System.out.println(\"TEST: TaskTest\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        LocalDateTime dt \u003d DateTimeUtil.stringAsDateTime(\"2020-02-25 22:30\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        Deadline testDeadline \u003d new Deadline(\"Homework\", dt);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        testDeadline.markAsDone();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        assertEquals(testDeadline.toSaveString(), \"D1Homework@2020-02-25T22:30\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Hardoh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    public void taskListTest() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        System.out.println(\"TEST: TaskListTest\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        TaskList tl \u003d new TaskList();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        tl.addSaveStringAsTask(\"E0flight@2020-02-25T00:00\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        assertEquals(true, tl.doneTask(0));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        assertEquals(false, tl.doneTask(2));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        tl.deleteTask(0);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "        assertEquals(null, tl.deleteTask(0));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Hardoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hardoh": 64
    }
  }
]
