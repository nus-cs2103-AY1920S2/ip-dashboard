[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "compileJava.options.encoding \u003d \"UTF-8\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "compileTestJava.options.encoding \u003d \"UTF-8\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "test {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "//    mainClassName \u003d \"ip.Duke\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    mainClassName \u003d \"ip.Launcher\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    archiveVersion \u003d \"0.1\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "JJiahui": 42
    }
  },
  {
    "path": "src/main/java/ip/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "package ip;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import ip.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import ip.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        tasks \u003d storage.readFromFile();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        Command c \u003d parser.parse(input);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        return c.execute(tasks, ui);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public static class DukeException extends Exception {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        public DukeException(String msg) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            super(msg);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JJiahui": 33
    }
  },
  {
    "path": "src/main/java/ip/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "package ip;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JJiahui"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JJiahui"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "JJiahui": 13
    }
  },
  {
    "path": "src/main/java/ip/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "package ip;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import ip.view.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JJiahui"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JJiahui"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JJiahui": 32
    }
  },
  {
    "path": "src/main/java/ip/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "package ip;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import ip.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import ip.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import ip.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import ip.task.FixedDuration;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import ip.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     * Parses a command entered in the command line and returns a command"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     * @param input the string to be parsed"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     * @return the command to be executed"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public Command parse(String input) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        Scanner inputSc;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        String command, name, datetime, rest;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        inputSc \u003d new Scanner(input);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            if (!inputSc.hasNext()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            command \u003d inputSc.next();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                case \"bye\": return new ExitCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                case \"list\": return new ListCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    if (!inputSc.hasNext()){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                        throw new Duke.DukeException(\"The keyword to search is missing :p\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    return new FindCommand(inputSc.nextLine().trim());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    if (!inputSc.hasNextInt()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                        throw new Duke.DukeException(\"The index of the task is missing :/\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    int index \u003d inputSc.nextInt() - 1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    return new DoneCommand(index);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    if (!inputSc.hasNextInt()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                        throw new Duke.DukeException(\"The index of the task is missing :/\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    int i \u003d inputSc.nextInt() - 1;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    return new DeleteCommand(i);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    name \u003d input.substring(command.length()).trim();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    if (name.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                        throw new Duke.DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    Todo todo \u003d new Todo(name);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    return new AddCommand(todo);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    rest \u003d input.substring(command.length()).trim();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    int byIndex \u003d rest.indexOf(\"/by\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    if (byIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                        throw new Duke.DukeException(\"Please include the deadline datetime after the \\\"/by\\\" keyword\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    name \u003d rest.substring(0, byIndex).trim();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    if (name.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                        throw new Duke.DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    datetime \u003d rest.substring(byIndex + 3).trim();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    if (datetime.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                        throw new Duke.DukeException(\"The deadline datetime cannot be empty.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    Deadline dl;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                        dl \u003d new Deadline(name, LocalDate.parse(datetime));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                        return new AddCommand(dl);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    } catch (Exception e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                        dl \u003d new Deadline(name, (datetime));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                        return new AddCommand(dl);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    rest \u003d input.substring(command.length()).trim();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    int atIndex \u003d rest.indexOf(\"/at\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    if (atIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                        throw new Duke.DukeException(\"Please include the event datetime after the \\\"/at\\\" keyword\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    name \u003d rest.substring(0, atIndex).trim();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    if (name.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                        throw new Duke.DukeException(\"The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    datetime \u003d rest.substring(atIndex + 3).trim();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    if (datetime.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                        throw new Duke.DukeException(\"The event datetime cannot be empty.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    Event ev;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                        ev \u003d new Event(name, LocalDate.parse(datetime));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                        return new AddCommand(ev);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    } catch (Exception e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                        ev \u003d new Event(name, (datetime));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                        return new AddCommand(ev);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                case \"fixed\":"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    rest \u003d input.substring(command.length()).trim();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    int durationIndex \u003d rest.indexOf(\"/duration\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    if (durationIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                        throw new Duke.DukeException(\"Please include the duration after the \\\"/duration\\\" keyword\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    name \u003d rest.substring(0, durationIndex).trim();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    if (name.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                        throw new Duke.DukeException(\"The description of a fixed duration task cannot be empty.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    datetime \u003d rest.substring(durationIndex + 9).trim();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    if (datetime.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                        throw new Duke.DukeException(\"The duration cannot be empty.\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    return new AddCommand(new FixedDuration(name, datetime));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    throw new Duke.DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        } catch (Duke.DukeException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            return new InvalidCommand(e.getMessage());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JJiahui": 121
    }
  },
  {
    "path": "src/main/java/ip/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "package ip;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import ip.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import java.io.ObjectInputStream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    private static final String FILENAME \u003d \"yourfile.txt\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     * Write all the user\u0027s tasks to local storage"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     * @param tasks the user\u0027s tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public void writeToFile(TaskList tasks) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        try (FileOutputStream fileOutputStream \u003d new FileOutputStream(new File(FILENAME));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "             ObjectOutputStream objectOutputStream \u003d new ObjectOutputStream(fileOutputStream)) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            objectOutputStream.writeObject(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        } catch (IOException e) {}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     * Reads the user\u0027s tasks from local storage."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     * @return the user\u0027s tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public TaskList readFromFile() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        try (FileInputStream fileInputStream \u003d new FileInputStream(new File(FILENAME));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            ObjectInputStream objectInputStream \u003d new ObjectInputStream(fileInputStream)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            TaskList tasks \u003d (TaskList) objectInputStream.readObject();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        } catch (IOException | ClassNotFoundException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            return new TaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JJiahui": 39
    }
  },
  {
    "path": "src/main/java/ip/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "package ip;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import ip.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import ip.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    private Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    private static final String LINE \u003d \"\\t__________________________________________________________\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public static final String GOODBYE \u003d LINE + \"\\tGoodbye! Hope to hear from you soon :)\\n\" + LINE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    private String printResponse(String... strs) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(LINE);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        for (String s: strs) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            sb.append(\u0027\\t\u0027);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            sb.append(s);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            sb.append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        sb.append(LINE);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     * Displays the error message"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     * @param msg the error message"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public String displayError(String msg) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        return printResponse(\":( OOPS!!! \", msg);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     * Displays the initial greeting when the program starts"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public static String initialGreeting() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "//        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        return \"Hello from\\n\" + logo;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     * Displays the response when a new task is added"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     * @param t the task added"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     * @param numTasks the no. of tasks in the list currently"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public String displayTaskAdded(Task t, int numTasks) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        return printResponse(\"Got it, I\u0027ve added this task:\", t.toString(),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                        \"Now you have \" + numTasks + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     * Displays all tasks in the list"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     * @param tasks the list of tasks"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public String displayAllTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            return printResponse(\"There are no tasks in the list! Please add some :)\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        String[] strList \u003d new String[tasks.size()];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            strList[i] \u003d \"\\t\" + (i + 1) + \": \" + tasks.get(i).toString();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        return printResponse(strList);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     * Displays a goodbye greeting when the user exits"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public String displayGoodbye() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        return GOODBYE;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     * Displays the response when a task is marked as done by the user"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     * @param t the task marked as done"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public String displayTaskMarkedDone(Task t) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        return printResponse(\"Awesome! I\u0027ve marked this task as done: \", t.toString());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     * Displays the response when a task is deleted by the user"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     * @param t the task deleted"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     * @param numTasks the no. of tasks in the list currently"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public String displayTaskDeleted(Task t, int numTasks) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        return printResponse(\"Noted, I\u0027ve removed this task: \", t.toString(),"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                        \"Now you have \" + numTasks + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public String displayFoundTasks(TaskList found) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        if (found.size() \u003d\u003d 0){"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            return printResponse(\"No matching tasks were found :/\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        String[] strList \u003d new String[found.size() + 1];"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        strList[0] \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        for (int i \u003d 0; i \u003c found.size(); i++) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            strList[i + 1] \u003d \"\\t\" + (i + 1) + \": \" + found.get(i).toString();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        return printResponse(strList);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JJiahui": 105
    }
  },
  {
    "path": "src/main/java/ip/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "package ip.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import ip.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import ip.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import ip.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public String execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        return ui.displayTaskAdded(task, tasks.size());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JJiahui": 19
    }
  },
  {
    "path": "src/main/java/ip/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "package ip.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import ip.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import ip.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    boolean isExit \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JJiahui": 14
    }
  },
  {
    "path": "src/main/java/ip/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "package ip.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import ip.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import ip.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public DeleteCommand(int i) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        this.index \u003d i;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public String execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            return new InvalidCommand(\"There are no tasks in the list :(\").execute(tasks, ui);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            return new InvalidCommand(\"Please enter a valid index, from 1 to \" + tasks.size()).execute(tasks, ui);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        return ui.displayTaskDeleted(tasks.delete(index), tasks.size());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JJiahui": 23
    }
  },
  {
    "path": "src/main/java/ip/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "package ip.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import ip.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import ip.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public DoneCommand(int i) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        this.index \u003d i;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public String execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            return new InvalidCommand(\"There are no tasks in the list :(\").execute(tasks, ui);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            return new InvalidCommand(\"Please enter a valid index, from 1 to \" + tasks.size()).execute(tasks, ui);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        return ui.displayTaskMarkedDone(tasks.markTaskDone(index));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JJiahui": 23
    }
  },
  {
    "path": "src/main/java/ip/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "package ip.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import ip.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import ip.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public String execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        return ui.displayGoodbye();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JJiahui": 15
    }
  },
  {
    "path": "src/main/java/ip/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "package ip.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import ip.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import ip.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public FindCommand(String keyword){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public String execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        return ui.displayFoundTasks(tasks.find(keyword));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JJiahui": 17
    }
  },
  {
    "path": "src/main/java/ip/command/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "package ip.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import ip.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import ip.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    private String msg;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public InvalidCommand(String msg) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        this.msg \u003d msg;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public String execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        return ui.displayError(msg);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JJiahui": 17
    }
  },
  {
    "path": "src/main/java/ip/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "package ip.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import ip.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import ip.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public String execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        return ui.displayAllTasks(tasks);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JJiahui": 11
    }
  },
  {
    "path": "src/main/java/ip/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "package ip.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    LocalDate byld;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public Deadline(String name, String by) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public Deadline(String name, LocalDate byld) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        this.byld \u003d byld;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + (by \u003d\u003d null ? byld.format(dtf) : by) + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JJiahui": 23
    }
  },
  {
    "path": "src/main/java/ip/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "package ip.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    String at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    LocalDate atld;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public Event(String name, String at) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public Event(String name, LocalDate atld) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        this.atld \u003d atld;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + (at \u003d\u003d null ? atld.format(dtf) : at) + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JJiahui": 23
    }
  },
  {
    "path": "src/main/java/ip/task/FixedDuration.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "package ip.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "public class FixedDuration extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    String duration;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public FixedDuration(String name, String duration) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        return \"[F]\" + super.toString() + \" (duration: \" + duration + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JJiahui": 16
    }
  },
  {
    "path": "src/main/java/ip/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "package ip.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "public abstract class Task implements Serializable {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public static DateTimeFormatter dtf \u003d DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    String name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    boolean done \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        done \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        return \"[\" + (done ? \"v\" : \"x\") + \"] \" + name;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public boolean contains(String keyword) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        return name.contains(keyword);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JJiahui": 28
    }
  },
  {
    "path": "src/main/java/ip/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "package ip.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "public class TaskList implements Serializable {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public void add(Task t) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public Task delete(int i) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        return tasks.remove(i);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public TaskList() {}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public TaskList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        this.tasks \u003d (ArrayList\u003cTask\u003e) list;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public Task markTaskDone(int i) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        Task t \u003d tasks.get(i);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        t.markAsDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     * Returns the number of tasks in the list"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     * @return the number of tasks"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     * Returns a task at an index in the list"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     * @param i the index of the task"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     * @return the task at index i"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        return tasks.get(i);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public TaskList find(String keyword) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        List\u003cTask\u003e found \u003d tasks.stream()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                        .filter(t -\u003e t.contains(keyword))"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                        .collect(Collectors.toList());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        return new TaskList(found);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JJiahui": 54
    }
  },
  {
    "path": "src/main/java/ip/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "package ip.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public Todo(String name) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JJiahui": 12
    }
  },
  {
    "path": "src/main/java/ip/view/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "package ip.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    private static final Font FONT \u003d new Font( \"Courier New\", 12);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        assert dialog !\u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        assert displayPicture !\u003d null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            dialog.setMinHeight(Region.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        dialog.setFont(FONT);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public static DialogBox getRightDialog(String txt, Image i) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        return new DialogBox(txt, i);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public static DialogBox getLeftDialog(String txt, Image i) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        var db \u003d new DialogBox(txt, i);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JJiahui": 64
    }
  },
  {
    "path": "src/main/java/ip/view/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "package ip.view;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import ip.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import ip.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JJiahui"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JJiahui"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    private Image leftImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/left_red.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    private Image rightImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/right_red.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        assert scrollPane !\u003d null;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        assert dialogContainer !\u003d null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getRightDialog(Ui.initialGreeting(), rightImage));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        assert userInput !\u003d null;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        assert dialogContainer !\u003d null;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                DialogBox.getLeftDialog(input, leftImage),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                DialogBox.getRightDialog(response, rightImage)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        );"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        if (response.equals(Ui.GOODBYE)){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            duke.exit();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            new Thread(() -\u003e {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                    Thread.sleep(1500);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                } catch (InterruptedException e) {}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                Platform.exit();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            }).start();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JJiahui": 69
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"600.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "JJiahui": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"ip.view.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"524.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"524.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"600.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"588.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "JJiahui": 19
    }
  },
  {
    "path": "src/test/java/ip/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "package ip;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public void emptyInputShouldReturnNull() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        Assertions.assertNull(new Parser().parse(\"\"));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JJiahui": 11
    }
  },
  {
    "path": "src/test/java/ip/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "package ip;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import ip.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import ip.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import ip.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public void testTodoToString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        String name \u003d \"create tests\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        Assertions.assertEquals(new Todo(name).toString(), \"[T][x] \" + name);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public void testDeadlineToString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        String name \u003d \"create tests\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        String by \u003d \"yesterday\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        Assertions.assertEquals(new Deadline(name, by).toString(), \"[D][x] \" + name + \" (by: \" + by + \")\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    public void testEventToString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        String name \u003d \"create tests\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        String at \u003d \"next week\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "        Assertions.assertEquals(new Event(name, at).toString(), \"[E][x] \" + name + \" (at: \" + at + \")\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JJiahui": 27
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JJiahui"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t__________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\tThere are no tasks in the list! Please add some :)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t__________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t__________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t☹ OOPS!!! "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\tThe description of a todo cannot be empty."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t__________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t__________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\tGot it, I\u0027ve added this task:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t[T][✗] read book"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\tNow you have 1 task(s) in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t__________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t__________________________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t☹ OOPS!!! "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\tPlease include the event datetime after the \"/at\" keyword"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t__________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t__________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t☹ OOPS!!! "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\tThe description of a event cannot be empty."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t__________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t__________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t☹ OOPS!!! "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\tThe event datetime cannot be empty."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t__________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t__________________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\tGot it, I\u0027ve added this task:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t[E][✗] dinner (at: 7pm today)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\tNow you have 2 task(s) in the list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t__________________________________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t__________________________________________________________"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t\t1: [T][✗] read book"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t\t2: [E][✗] dinner (at: 7pm today)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t__________________________________________________________"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t__________________________________________________________"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t☹ OOPS!!! "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\tPlease include the deadline datetime after the \"/by\" keyword"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t__________________________________________________________"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t__________________________________________________________"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t☹ OOPS!!! "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\tThe description of a deadline cannot be empty."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t__________________________________________________________"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t__________________________________________________________"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t☹ OOPS!!! "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\tThe deadline datetime cannot be empty."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t__________________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t__________________________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\tGot it, I\u0027ve added this task:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t[D][✗] project (by: next Monday)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\tNow you have 3 task(s) in the list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t__________________________________________________________"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t__________________________________________________________"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t\t1: [T][✗] read book"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t\t2: [E][✗] dinner (at: 7pm today)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t\t3: [D][✗] project (by: next Monday)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t__________________________________________________________"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t__________________________________________________________"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\tAwesome! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t[E][✓] dinner (at: 7pm today)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t__________________________________________________________"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t__________________________________________________________"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t\t1: [T][✗] read book"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t\t2: [E][✓] dinner (at: 7pm today)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t\t3: [D][✗] project (by: next Monday)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t__________________________________________________________"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t__________________________________________________________"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\tNoted, I\u0027ve removed this task: "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t[T][✗] read book"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\tNow you have 2 task(s) in the list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t__________________________________________________________"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t__________________________________________________________"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t\t1: [E][✓] dinner (at: 7pm today)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t\t2: [D][✗] project (by: next Monday)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t__________________________________________________________"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t__________________________________________________________"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\tGoodbye! Hope to hear from you soon :)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "\t__________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "JJiahui": 83
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "event"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "event /at"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "event dinner /at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "event dinner /at 7pm today"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "deadline /by"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "deadline project /by"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "deadline project /by next Monday"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "JJiahui": 18
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "# delete contents of the local storage"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "if [ -e \"./yourfile.txt\" ]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    rm ./yourfile.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "fi"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/ip/*.java ../src/main/java/ip/task/*.java ../src/main/java/ip/command/*.java"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "then"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "fi"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "java -classpath ../bin ip.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JJiahui"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "then"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "else"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JJiahui"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "JJiahui": 40
    }
  }
]
