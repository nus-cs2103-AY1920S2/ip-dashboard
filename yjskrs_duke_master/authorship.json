[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "test {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yjskrs": 38,
      "-": 21
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import javafx.scene.text.FontPosture;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import javafx.scene.text.FontWeight;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        dialog.setFont(Font.font(\"UD Digi Kyokasho NP-R\", FontWeight.NORMAL, FontPosture.REGULAR, 12));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        dialog.setWrapText(true);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        dialog.setMinHeight(Label.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        Circle clip \u003d new Circle(50, 50, 46);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        displayPicture.setClip(clip);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        BackgroundFill fill \u003d new BackgroundFill(Color.rgb(0xdc, 0xf8, 0xc6),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                new CornerRadii(7),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                Insets.EMPTY);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        Background background \u003d new Background(fill);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        dialog.setBackground(background);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        dialog.setPadding(new Insets(2, 5, 2, 5));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Gets the user dialog box."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param text Dialog text."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param img User image."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @return The dialog box."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Gets the Duke dialog box."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param text Dialog text."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param img Duke image."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @return The dialog box."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yjskrs": 94
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yjskrs": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yjskrs": 31
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Initializes the GUI window."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                DialogBox.getDukeDialog(Ui.getHelloMessage(), dukeImage)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        );"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        );"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yjskrs": 58
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " * The \u003ccode\u003eDeadline\u003c/code\u003e class extends from Task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " * \u003cp\u003eA \u003ccode\u003eDeadline\u003c/code\u003e object has a \u003ccode\u003ename\u003c/code\u003e, a \u003ccode\u003eisCompleted\u003c/code\u003e property"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " * and a \u003ccode\u003eby\u003c/code\u003e property which represents the time of the event."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " * @author Zhu Yijie"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private static final String IDENTIFIER \u003d \"D\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public static final String TIME_DEMARCATOR \u003d \"/by\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private LocalDate by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Creates a new Deadline object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param name The name of the deadline."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param by Time the deadline is due."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public Deadline(String name, String by) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        assert !by.isEmpty() : \"Empty by string.\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        this.by \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Creates a new Deadline object with non-default isCompleted."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param name The name of the deadline."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param isCompleted Whether the deadline is completed."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param by Time the deadline is due."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public Deadline(String name, boolean isCompleted, String by) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        super(name, isCompleted);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        assert !by.isEmpty() : \"Empty by string.\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        this.by \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    ////////////////////////////// PRINTING TASK"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public String getTimeString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return StringParser.addRoundBracket(\"by: \""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                + DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL).format(by));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    protected String getIdentifier() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return IDENTIFIER;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    protected String getIdentifierIcon() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return StringParser.addSquareBracket(getIdentifier());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public String format() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return StringParser"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                .combineTaskStringWithSpacedPipe("
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                        getIdentifier(),"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                        getStatusInBinary(),"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                        getName(),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                        by.toString());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return StringParser"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                .combineTaskStringWithSpace("
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                        getIdentifierIcon(),"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                        getStatusIcon(),"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                        getName(),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                        getTimeString());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yjskrs": 82
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " * The \u003ccode\u003eDuke\u003c/code\u003e class is the entry point of the program."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " * @author Zhu Yijie"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Creates and initialises a Duke object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        this.taskList \u003d Storage.load();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        Ui.sayHello();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Runs Duke."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                    Storage.save(taskList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                    System.out.println(\"exception\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                Ui.sayGoodbye();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            String response \u003d InputHandler.processInput(input, taskList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            Ui.respond(response);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * The main method starts the Duke program."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param args Input arguments."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return InputHandler.processInput(input, taskList);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yjskrs": 58,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " * The \u003ccode\u003eEvent\u003c/code\u003e class extends from Task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " * \u003cp\u003eAn \u003ccode\u003eEvent\u003c/code\u003e object has a \u003ccode\u003ename\u003c/code\u003e, a \u003ccode\u003eisCompleted\u003c/code\u003e property"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " * and an \u003ccode\u003eat\u003c/code\u003e property which represents the time of the event."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " * @author Zhu Yijie"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private static final String IDENTIFIER \u003d \"E\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public static final String TIME_DEMARCATOR \u003d \"/at\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Creates a new Event object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param name The name of the event."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param at Time of event."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public Event(String name, String at) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        assert !at.isEmpty() : \"Empty at string.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Creates a new Event object with non-default isCompleted."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param name The name of the event."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param isCompleted Whether the event is completed."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param at Time of event."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public Event(String name, boolean isCompleted, String at) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        super(name, isCompleted);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        assert !at.isEmpty() : \"Empty at string.\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    ////////////////////////////// PRINTING TASK"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public String getTimeString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return StringParser.addRoundBracket(\"at: \" + at);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    protected String getIdentifier() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return IDENTIFIER;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    protected String getIdentifierIcon() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return StringParser.addSquareBracket(getIdentifier());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public String format() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return StringParser"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                .combineTaskStringWithSpacedPipe("
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                        getIdentifier(),"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                        getStatusInBinary(),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                        getName(),"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                        at);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return StringParser"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                .combineTaskStringWithSpace("
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                        getIdentifierIcon(),"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                        getStatusIcon(),"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                        getName(),"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                        getTimeString());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yjskrs": 80
    }
  },
  {
    "path": "src/main/java/duke/InputHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " * The \u003ccode\u003eInputHandler\u003c/code\u003e class is a utility class to handle user input and call the"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " * respective classes to deal with the input. It then retrieves the output from the classes"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " * and sends it out."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " * @author Zhu Yijie"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "public class InputHandler {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Takes in user input, handles it and passes it to the relevant classes for processing."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Then returns the output to be sent to the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @return The response to the user input."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public static String processInput(String input, TaskList taskList) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        String command \u003d input.split(StringParser.SPACE)[0].toLowerCase();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        String arguments \u003d input.substring(command.length()).strip();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        case \"hello\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return processHello();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        case \"poke\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return processPoke();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return processBye();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return processHelp();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        case \"save\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return processSave(taskList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return processList(taskList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return processAddTodo(arguments, taskList);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return processAddDeadline(arguments, taskList);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return processAddEvent(arguments, taskList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return processDone(arguments, taskList);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        case \"undo\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return processUndo(arguments, taskList);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return processDelete(arguments, taskList);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return processFind(arguments, taskList);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return processUnrecognizedCommand();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private static String processHello() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return \"Hello!! \u003c3 \u003c3\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private static String processPoke() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        String[] responses \u003d {\"(- o - ) . z Z)\","
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                              \"( \u003e A \u003c )/\","
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                              \"/(T___T)\\\\\","
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                              \"(0` - `!)/\","
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                              \"(\u003e - w -) \u003e\","
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                              \"(/ _ \u003c .)\","
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                              \"(/ \u003e D \u003c)/\","
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                              \"(/q n q)/\","
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                              \"/(o_ o)\"};"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        int rnd \u003d (int) Math.floor(Math.random() * responses.length);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return responses[rnd];"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private static String processBye() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return \"(\u0027A\u0027)/\u0027\u0027 Bye! Come again soon.\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private static String processHelp() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return StringParser.combineTextWithNewline(\"Looking for help? Help is here! (^ u ^)/\","
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                \"Here are the commands you can enter:\","
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                \"list                         | list tasks\","
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                \"find [(partial) task name]   | find existing task\","
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                \"todo [name]                  | add todo with name\","
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                \"deadline [name] /by [date]   | add deadline with name and due on date (in YYYY-MM-DD)\","
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                \"event [event] /at [datetime] | add event with name and occurring at datetime\","
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                \"delete [id]                  | delete task with id\","
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                \"done [id]                    | mark task with id as done\","
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                \"undo [id]                    | mark task with id as not done\","
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                \"save                         | save tasks to storage\","
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                \"hello                        | greet me\","
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                \"poke                         | poke me\","
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                \"bye                          | say goodbye to me\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Processes the save command."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @return Save message."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private static String processSave(TaskList taskList) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            Storage.save(taskList);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            System.out.println(\"exception\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return \"Tasks saved! You may now exit the program.\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Processes the list command."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @return List message with listed tasks."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private static String processList(TaskList taskList) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        String list \u003d taskList.list();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return \"Here are your tasks:\\n\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                + (list.isEmpty() ? \"There are no tasks!\" : list);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Processes the todo command."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param taskContent Todo command contents."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @return Add todo message."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private static String processAddTodo(String taskContent, TaskList taskList) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        if (taskContent.isEmpty()) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return \"Todo name not specified! Please enter in the format: todo [name]\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        Todo newTodo \u003d new Todo(taskContent);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            taskList.add(newTodo);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return \"Added:\\n\" + newTodo;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return \"Duplicate task not added:\\n\" + newTodo;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Processes the deadline command."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param taskContent Deadline command contents."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @return Add deadline message."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private static String processAddDeadline(String taskContent, TaskList taskList) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        String taskName \u003d taskContent.split(Deadline.TIME_DEMARCATOR)[0].strip();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        String deadline \u003d taskContent.substring(taskName.length()).replace(Deadline.TIME_DEMARCATOR, \"\").strip();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        if (taskContent.isEmpty() || taskName.isEmpty() || deadline.isEmpty()) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return \"Deadline name and/or time not specified! Please enter in the format: deadline [name] /by [time]\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(taskName, deadline);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            taskList.add(newDeadline);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return \"Added:\\n\" + newDeadline;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return \"Duplicate task not added:\\n\" + newDeadline;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Processes the event command."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param taskContent Event command contents."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @return Add event message."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private static String processAddEvent(String taskContent, TaskList taskList) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        String taskName \u003d taskContent.split(Event.TIME_DEMARCATOR)[0].strip();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        String time \u003d taskContent.substring(taskName.length()).replace(Event.TIME_DEMARCATOR, \"\").strip();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        if (taskContent.isEmpty() || taskName.isEmpty() || time.isEmpty()) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return \"Event name and/or time not specified! Please enter in the format: event [name] /at [time]\";"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        "
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        Event newEvent \u003d new Event(taskName, time);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            taskList.add(newEvent);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return \"Added:\\n\" + newEvent;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return \"Duplicate task not added:\\n\" + newEvent;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Processes the done command."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param id Task id."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @return Mark task as done message."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private static String processDone(String id, TaskList taskList) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            int idValue \u003d Integer.parseInt(id);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return \"Good job for completing the task:\\n\""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                    + taskList.markAsCompleted(idValue);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return \"Invalid task id. Please enter a valid id number!\";"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "   "
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Processes the undo command."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param id Task id."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @return Mark task as not done message."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private static String processUndo(String id, TaskList taskList) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            int idValue \u003d Integer.parseInt(id);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return \"o.o well... good luck completing the task:\\n\""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                    + taskList.markAsIncomplete(idValue);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return \"Invalid task id. Please enter a valid id number!\";"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Processes the delete command."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param id Task id."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @return Remove task message."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private static String processDelete(String id, TaskList taskList) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            int idValue \u003d Integer.parseInt(id);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return \"Removed task:\\n\""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                    + taskList.remove(idValue);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return \"Invalid task id. Please enter a valid id number!\";"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Processes the find command."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param key Keyword to look for."
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @return Lists tasks found."
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private static String processFind(String key, TaskList taskList) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        Task[] tasksFound \u003d taskList.find(key);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        if (tasksFound \u003d\u003d null) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return \"No matching tasks found.\";"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        "
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        String outputString \u003d \"\";"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        for (Task task : tasksFound) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            outputString +\u003d (task + \"\\n\");"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return \"Found matching task(s):\\n\" + outputString;"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private static String processUnrecognizedCommand() {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return \"???????? gomenasai wakarimasen :((( Enter `help` to get a list of commands.\";"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yjskrs": 263
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import java.nio.charset.Charset;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " * The \u003ccode\u003eStorage\u003c/code\u003e class is a utility class to load data from a file, if any, and write"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " * data to a file to store for future use."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " * @author Zhu Yijie"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private static final String FILE_PATH \u003d \"./data/duke.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private static final File FILE \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private static final Charset ENCODING \u003d Charset.defaultCharset();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Retrieves all data from file and sends data to the TaskList class."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @throws IOException If an input or output exception occurred."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public static TaskList load() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            byte[] encoded \u003d Files.readAllBytes(Paths.get(FILE_PATH));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return TaskList.setup(new String(encoded, ENCODING));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Takes formatted TaskList data and writes it to file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @throws IOException If an input or output exception occurred."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public static void save(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        FileWriter writer \u003d new FileWriter(FILE, false);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        writer.write(taskList.formatForStorage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yjskrs": 46
    }
  },
  {
    "path": "src/main/java/duke/StringParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "public class StringParser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public static final String SPACE \u003d \" \";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public static final String SPACED_PIPE \u003d \" | \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public static final String NEWLINE \u003d \"\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public static String addSquareBracket(String text) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return \"[\" + text + \"]\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public static String addRoundBracket(String text) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return \"(\" + text + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Format task contents into a string separated by spaces."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param text Task contents."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @return Formatted task contents."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public static String combineTaskStringWithSpace(String... text) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return Arrays.asList(text).stream()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                .map(content -\u003e content.strip())"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                .collect(Collectors.joining(SPACE));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Format task contents into a string separated by spaced pipes for saving to storage."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param text Task contents."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @return Formatted task contents."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public static String combineTaskStringWithSpacedPipe(String... text) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return Arrays.asList(text).stream()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                .map(content -\u003e content.strip())"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                .collect(Collectors.joining(SPACED_PIPE));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Combine text items into a newline-separated string."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param text Text items."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @return Combined string."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public static String combineTextWithNewline(String... text) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return Arrays.asList(text).stream()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                .map(content -\u003e content.strip())"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                .collect(Collectors.joining(NEWLINE));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yjskrs": 54
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " * The \u003ccode\u003eTask\u003c/code\u003e class is an abstract class with a name and a boolean to represent whether"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " * it is completed."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " * @author Zhu Yijie"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private boolean isCompleted;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Creates a new Task object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param name The name of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        assert !name.isEmpty() : \"Empty task name.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        this.isCompleted \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Creates a new Task object with non-default isCompleted."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param name The name of the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param isCompleted Whether the task is completed."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public Task(String name, boolean isCompleted) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        assert !name.isEmpty() : \"Empty task name.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        this.isCompleted \u003d isCompleted;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Marks the task as completed."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public void markAsCompleted() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        isCompleted \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Marks the task as incomplete."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public void markAsIncomplete() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        isCompleted \u003d false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    ////////////////////////////// PRINTING TASK"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Returns a string representing the name of the task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @return The name of the task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Returns string for whether the task is completed or not."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @return The string representing the whether the task is completed or not."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    protected String getStatus() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return isCompleted ? \"/\" : \" \";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Returns string for whether the task is completed or not in binary."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @return The string representing the whether the task is completed or not."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    protected String getStatusInBinary() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return isCompleted ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Returns status icon for whether the task is completed or not."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @return The icon string representing the whether the task is completed or not."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    protected String getStatusIcon() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return StringParser.addSquareBracket(getStatus());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Returns identifier string for the type of task."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @return The string representing the task type."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    protected abstract String getIdentifier();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Returns identifier icon for the type of task."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @return The icon string representing the task type."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    protected abstract String getIdentifierIcon();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Returns a string formatting the task for saving in a file."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @return The string representing the task."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public abstract String format();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public abstract String toString();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    ////////////////////////////// EQUALITY CHECKS"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Checks if provided task name matches this task\u0027s name partially, ignoring case."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param taskName Task name to check."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @return True if taskName is contained in this task\u0027s name, false otherwise."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public boolean matchPartial(String taskName) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return name.toLowerCase().contains(taskName.toLowerCase());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Checks if provided task name matches this task\u0027s name fully, ignoring case."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param taskName Task name to check."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @return True if taskName is equivalent to this task\u0027s name, false otherwise."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public boolean equals(String taskName) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return name.equalsIgnoreCase(taskName);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        } else if (obj instanceof Task) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            Task task \u003d (Task) obj;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return task.equals(this.name) \u0026\u0026 task.getIdentifier().equals(this.getIdentifier());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public int hashCode() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        int nameHash \u003d getName().toLowerCase().hashCode() * 277;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        int identifierHash \u003d getIdentifier().hashCode() * 23;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return nameHash + identifierHash;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yjskrs": 152
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " * The \u003ccode\u003eTaskList\u003c/code\u003e class stores a list of all \u003ccode\u003eTask\u003c/code\u003e objects and handles"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " * them."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " * @author Zhu Yijie"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Creates a new TaskLit object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Creates a new TaskLit object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Sets up the system of all tasks from a file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param data Data taken from a file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public static TaskList setup(String data) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        if (data.isEmpty()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return new TaskList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        List\u003cTask\u003e newTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        String[] list \u003d data.split(\"\\n\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        for (String line : list) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            if (line.isEmpty()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            String[] arguments \u003d line.strip().split(\" \\\\| \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            String type \u003d arguments[0];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            String name \u003d arguments[2];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            boolean isCompleted \u003d arguments[1].equals(\"1\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                newTasks.add(new Todo(name, isCompleted));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                newTasks.add(new Deadline(name, isCompleted, arguments[3]));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                newTasks.add(new Event(name, isCompleted, arguments[3]));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return new TaskList(newTasks);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Adds a task to the list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param newTask The task to be added."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @throws IllegalArgumentException If the task already exists in the list."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public void add(Task newTask) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        if (tasks.contains(newTask)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Gets a task by its id (index + 1)."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param id Id of task that user sees."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @return The task."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @throws IndexOutOfBoundsException If id is invalid."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private Task get(int id) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        if (id \u003c\u003d 0 || id \u003e tasks.size()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return tasks.get(id - 1);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Removes a task from the list."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param id The id of the task to be removed."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @return The task removed."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public Task remove(int id) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        Task task \u003d get(id);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        tasks.remove(task);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Marks a task from the list as completed."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param id The id of the task to be modified."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @return The task modified."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public Task markAsCompleted(int id) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        Task task \u003d get(id);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        task.markAsCompleted();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Marks a task from the list as incomplete."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param id The id of the task to be modified."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @return The task modified."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public Task markAsIncomplete(int id) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        Task task \u003d get(id);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        task.markAsIncomplete();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Finds an array of tasks that match the string provided. Returns null if there are no"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * matching tasks."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param name The name of task to find."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @return Task array, if found, or null if no matching tasks found."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public Task[] find(String name) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        List\u003cTask\u003e tasksMatched \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            if (task.matchPartial(name)) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                tasksMatched.add(task);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        "
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        if (tasksMatched.isEmpty()) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return tasksMatched.toArray(Task[]::new);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Lists all tasks in the list."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @return String representing the list of tasks."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public String list() {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); ++i) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            output +\u003d ((i + 1) + \". \" + tasks.get(i) + \"\\n\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Formats the list of tasks for storing in a file."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @return String representing the list of tasks."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public String formatForStorage() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        String[] taskStrings \u003d tasks.stream()"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                .map(Task::format)"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                .toArray(String[]::new);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return StringParser.combineTextWithNewline(taskStrings);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yjskrs": 180
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " * The \u003ccode\u003eTodo\u003c/code\u003e class extends from Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " * \u003cp\u003eA \u003ccode\u003eTodo\u003c/code\u003e object has a \u003ccode\u003ename\u003c/code\u003e and a \u003ccode\u003eisCompleted\u003c/code\u003e property."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " * @author Zhu Yijie"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private static final String IDENTIFIER \u003d \"T\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Creates a new Todo object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param name The name of the todo."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public Todo(String name) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Creates a new Todo object with non-default isCompleted."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param name The name of the todo."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param isCompleted Whether the todo is completed."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public Todo(String name, boolean isCompleted) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        super(name, isCompleted);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    ////////////////////////////// PRINTING TASK"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    protected String getIdentifier() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return IDENTIFIER;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    protected String getIdentifierIcon() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return StringParser.addSquareBracket(getIdentifier());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public String format() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return StringParser"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                .combineTaskStringWithSpacedPipe("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                        getIdentifier(),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                        getStatusInBinary(),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                        getName());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return StringParser"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                .combineTaskStringWithSpace("
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                        getIdentifierIcon(),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                        getStatusIcon(),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                        getName());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yjskrs": 61
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " * The \u003ccode\u003eUi\u003c/code\u003e class is a utility class which deals with printing to standard output to"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " * provide an interface to interact with the user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " * @author Zhu Yijie"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private static final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                                     + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                                     + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                                     + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                                     + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private static final String LINE_SEPARATOR \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    private static final String NEWLINE \u003d \"\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public static String getHelloMessage() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        String welcomeMsg \u003d \"Hello, I\u0027m Duke! What can I do for you?\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return welcomeMsg;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Prints a welcome message to standard output."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * \u003cp\u003eUsed when starting up program."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public static void sayHello() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        String welcomeMsg \u003d \"Hello from\\n\" + LOGO;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        welcomeMsg +\u003d parseOutput(getHelloMessage());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        System.out.println(welcomeMsg);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Prints a goodbye message to standard output."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * \u003cp\u003eUsed when closing program."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public static void sayGoodbye() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        String goodbyeMsg \u003d parseOutput(\"Awwww... Sad to see you go :( Hope to see you again soon!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        System.out.println(goodbyeMsg);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Prints to standard output."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param contents String to be output."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public static void respond(String contents) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        System.out.println(parseOutput(contents));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * Handles program output and formats it for printing to standard output."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @param output String to be output."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     * @return The string to be printed to standard output."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public static String parseOutput(String output) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        if (output.isEmpty()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        return output + NEWLINE;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yjskrs": 66
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" prefWidth\u003d\"639.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "yjskrs": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"483.0\" prefWidth\u003d\"652.0\" xmlns\u003d\"http://javafx.com/javafx/11.0\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"448.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"575.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"576.0\" layoutY\u003d\"441.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutY\u003d\"-1.0\" prefHeight\u003d\"441.0\" prefWidth\u003d\"652.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"441.0\" prefWidth\u003d\"639.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "yjskrs": 19
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import duke.Todo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        assertEquals(\"[T] [ ] nom\", new Todo(\"nom\").toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public void testFormatConversion() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        assertEquals(\"T | 0 | nom\", new Todo(\"nom\").format());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    public void testMarkAsCompleted() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        Todo newTodo \u003d new Todo(\"nom\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        newTodo.markAsCompleted();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "        assertEquals(\"T | 1 | nom\", newTodo.format());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yjskrs": 23
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yjskrs"
        },
        "content": " ____        _"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "|  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    Hello, I\u0027m Duke!"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    There are no tasks!"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    Added:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    [T][X] eat"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    Added:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    [D][X] submit stuff (by: 20 February 2020)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    Added:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    [E][X] jlpt (at: sunday)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    Added:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    [T][X] more stuff"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    1. [T][X] eat"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    2. [D][X] submit stuff (by: 20 February 2020)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    3. [E][X] jlpt (at: sunday)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    4. [T][X] more stuff"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    Good job for completing the task:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    [E][/] jlpt (at: sunday)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    Added:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    [T][X] hello/"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    Found matching task(s):"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    [T][X] more stuff"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    [T][X] hello/"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    Awwww... Sad to see you go :( Hope to see you again soon!"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "yjskrs": 60
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "todo eat"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "deadline submit stuff /by 2020-02-20"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "event jlpt /at sunday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "todo more stuff"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "todo hello/"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "find o"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "yjskrs": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "yjskrs": 21
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/* ../src/main/java/duke/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yjskrs"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yjskrs"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "yjskrs": 34
    }
  }
]
