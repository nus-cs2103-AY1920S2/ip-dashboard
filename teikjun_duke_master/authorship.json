[
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Represents an executable command"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    TaskList taskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Executes the command and returns the result."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public abstract CommandResult execute();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Supplies the data that command will operate on"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param taskList the single taskList used in Duke"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void setData(TaskList taskList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Returns a String telling the user that the add command was successful"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param newTask"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return a String feedback for the user"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String getAddSuccessMessage(Task newTask) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        assert(taskList !\u003d null);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                + newTask + \"\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                + \"Now you have \" + taskList.getSize() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 32
    }
  },
  {
    "path": "src/main/java/CommandResult.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    String feedbackToUser;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    TaskList taskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    CommandResult(String feedbackToUser) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.feedbackToUser \u003d feedbackToUser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String getFeedbackToUser() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return feedbackToUser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public TaskList getTaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 16
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    String date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    Deadline(String name, boolean isDone, String date) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static Deadline createDeadline(String name, boolean isDone, String date) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return new Deadline(name, isDone, date);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static Deadline decode(String text) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        String[] parts \u003d text.split(\",\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        boolean decodedIsDone \u003d parts[1].equals(\"1\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return createDeadline(parts[2], decodedIsDone, parts[3]);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String encodeTask() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int encodedIsDone \u003d this.getIsDone() ? 1 : 0;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return \"D,\" + encodedIsDone + \",\" + name + \",\" + date;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public Deadline complete() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return createDeadline(this.getName(), true, this.getDate());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public Task setName(String newName) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return createDeadline(newName, isDone, date);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        String taskString \u003d super.toString();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        String result \u003d \"[D]\" + taskString + \" (by: \" + date + \")\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 49
    }
  },
  {
    "path": "src/main/java/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"deadline\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    String firstArgumentText;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    String secondArgumentText;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    DeadlineCommand(String firstArgumentText, String secondArgumentText) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.firstArgumentText \u003d firstArgumentText;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.secondArgumentText \u003d secondArgumentText;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        Task newDeadline \u003d Deadline.createDeadline(firstArgumentText, false, secondArgumentText);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        taskList.addToList(newDeadline);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return new CommandResult(getAddSuccessMessage(newDeadline));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 21
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    int taskNumber;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    DeleteCommand(int taskNumber) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        Task removedTask \u003d taskList.delete(taskNumber);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return new CommandResult(getDeleteSuccessMessage(removedTask));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String getDeleteSuccessMessage(Task removedTask) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return \"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                + removedTask + \"\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                + \"Now you have \" + taskList.getSize() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 20
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    int taskNumber;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    DoneCommand(int taskNumber) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        Task completedTask \u003d taskList.markAsDone(taskNumber);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return new CommandResult(getDoneSuccessMessage(completedTask));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String getDoneSuccessMessage(Task completedTask) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                + completedTask + \"\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                + \"Now you have \" + taskList.getSize() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 20
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Driver class of Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    Storage storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    Ui ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    TaskList taskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.storage \u003d new Storage();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.taskList \u003d storage.load();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Runs the program until termination"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.start();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.runCommandLoop();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.exit();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Reads the user command and executes it, until the user issues the exit command"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void runCommandLoop() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            String userCommandText \u003d ui.getUserCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            command \u003d (new Parser()).parseCommand(userCommandText);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            CommandResult result \u003d executeCommand(command);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            ui.showResultToUser(result);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } while (!ExitCommand.isExitCommand(command));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public CommandResult executeCommand(Command command) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        command.setData(taskList);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        storage.save(taskList);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return command.execute();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        ui.showGoodbyeMessage();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 52,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 5
    }
  },
  {
    "path": "src/main/java/EditCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class EditCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"edit\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    int taskNumber;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    String newName;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    EditCommand(int taskNumber, String newName) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.newName \u003d newName;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        Task editedTask \u003d taskList.edit(taskNumber, newName);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return new CommandResult(getEditSuccessMessage(editedTask));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String getEditSuccessMessage(Task editedTask) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return \"Got it. The task has been successfully updated to:\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                + editedTask;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 21
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    String date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    Event(String name, boolean isDone, String date) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static Event createEvent(String name, boolean isDone, String date) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return new Event(name, isDone, date);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static Event decode(String text) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        String[] parts \u003d text.split(\",\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        boolean decodedIsDone \u003d parts[1].equals(\"1\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return createEvent(parts[2], decodedIsDone, parts[3]);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String encodeTask() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int encodedIsDone \u003d this.getIsDone() ? 1 : 0;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return \"E,\" + encodedIsDone + \",\" + name + \",\" + date;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public Event complete() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return createEvent(this.getName(), true, this.getDate());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public Task setName(String newName) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return createEvent(newName, isDone, date);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        String taskString \u003d super.toString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        String result \u003d \"[E]\" + taskString + \" (at: \" + date + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 45
    }
  },
  {
    "path": "src/main/java/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"event\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    String firstArgumentText;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    String secondArgumentText;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    EventCommand(String firstArgumentText, String secondArgumentText) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.firstArgumentText \u003d firstArgumentText;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.secondArgumentText \u003d secondArgumentText;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        Task newEvent \u003d Event.createEvent(firstArgumentText, false, secondArgumentText);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        taskList.addToList(newEvent);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return new CommandResult(getAddSuccessMessage(newEvent));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 18
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static final String BYE_MESSAGE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return new CommandResult(BYE_MESSAGE);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static boolean isExitCommand(Command c) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return c instanceof ExitCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 13
    }
  },
  {
    "path": "src/main/java/IncorrectCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class IncorrectCommand extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    String errorMessage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    IncorrectCommand(String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return new CommandResult(\"OOPS!!! \" + errorMessage);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 12
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return new CommandResult(taskList.getAllTasks());"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 8
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Parses user input."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public Command parseCommand(String userCommandText) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        String[] words \u003d userCommandText.split(\" \");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        String commandWord \u003d words[0];"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        String argumentText \u003d words.length \u003d\u003d 1 ? \"\" : Parser.getArguments(words);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            switch (commandWord) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            case DoneCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                // complete the task at number given by user"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                int taskNumberToComplete \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                return new DoneCommand(taskNumberToComplete);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                int taskNumberToDelete \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                return new DeleteCommand(taskNumberToDelete);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            case TodoCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                if (argumentText.equals(\"\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    return new TodoCommand(argumentText);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            case DeadlineCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                String[] deadlineParts \u003d argumentText.split(\" /by \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                if (deadlineParts[0].equals(\"\") || deadlineParts[1].equals(\"\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    throw new DukeException(\"The description of a deadline cannot be empty\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    return new DeadlineCommand(deadlineParts[0], deadlineParts[1]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            case EventCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                String[] eventParts \u003d argumentText.split(\" /at \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                if (eventParts[0].equals(\"\") || eventParts[1].equals(\"\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    throw new DukeException(\"The description of an event cannot be empty\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    return new EventCommand(eventParts[0], eventParts[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            case ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            case EditCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                String[] editParts \u003d argumentText.split(\"/to\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                int TaskNumberToEdit \u003d Integer.parseInt(editParts[0].trim());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                String newName \u003d editParts[1].trim();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                return new EditCommand(TaskNumberToEdit, newName);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            return new IncorrectCommand(e.getMessage());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Combines a String array from index 1 to (length - 1)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static String getArguments(String[] parts) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        String result \u003d parts[1];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        for (int i \u003d 2; i \u003c parts.length; i++) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            result +\u003d \" \" + parts[i];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 67
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.nio.charset.Charset;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Stores the TaskList"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    Path path;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    Storage() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        String userHome \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        path \u003d Paths.get(userHome, \"duke\", \"data\", \"duke.txt\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Loads the TaskList that is stored in a predetermined filePath."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return TaskList"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public TaskList load() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        TaskList taskList \u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            List\u003cString\u003e encodedTasks \u003d Files.readAllLines(path, Charset.defaultCharset());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            taskList \u003d this.decodeTaskList(encodedTasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Stores a Task List in a predetermined filePath"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void save(TaskList taskList) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            List\u003cString\u003e encodedTasks \u003d this.encodeTaskList(taskList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            Files.write(path, encodedTasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Returns an encoded String representation of TaskList so that it can be stored"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return a String representation of TaskList"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public List\u003cString\u003e encodeTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        List\u003cString\u003e encodedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        for (Task t : taskList.getList()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            encodedTasks.add(t.encodeTask());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return encodedTasks;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Returns a decoded TaskList so that it can be used by Duke"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * If the text is an empty String, an empty ArrayList will be returned as expected."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param encodedTasks the encoded text used to store the TaskList"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return a TaskList based on the encoded text"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public TaskList decodeTaskList(List\u003cString\u003e encodedTasks) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        List\u003cTask\u003e decodedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        for (String s : encodedTasks) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            switch(s.charAt(0)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                case (\u0027T\u0027):"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    decodedTasks.add(Todo.decode(s));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                case (\u0027D\u0027):"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    decodedTasks.add(Deadline.decode(s));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                case (\u0027E\u0027):"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    decodedTasks.add(Event.decode(s));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return new TaskList(decodedTasks);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 87
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    String name;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    Task(String name, boolean isDone) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public abstract Task complete();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public abstract String encodeTask();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public abstract Task setName(String newName);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        String checkbox \u003d \"[\" + (this.getIsDone() ? \"\\u2713\" : \"\\u2718\") + \"]\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        String result \u003d checkbox + \" \" + this.getName();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 30
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * Stores a list of tasks and methods to make changes to the list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    private final List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    TaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Returns the size of the tasks list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return the number of tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Adds a task to the tasks list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param newTask the task to be added"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void addToList(Task newTask) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Deletes a task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param taskNumber the target task number to delete"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return the task that is deleted"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public Task delete(int taskNumber) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int index \u003d taskNumber - 1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        Task removedTask \u003d tasks.remove(index);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return removedTask;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public Task edit(int taskNumber, String newName) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int index \u003d taskNumber - 1;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        Task targetTask \u003d tasks.get(index);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        Task editedTask \u003d targetTask.setName(newName);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        tasks.set(index, editedTask);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return editedTask;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Mark a task as done by substituting the current task with a completed task in the list"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @param taskNumber the target task number to delete"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return the Task that is marked as done"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public Task markAsDone(int taskNumber) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        // the index of a task in the list is one less than the taskNumber"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int index \u003d taskNumber - 1;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        Task currentTask \u003d tasks.get(index);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        Task completedTask \u003d currentTask.complete();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        tasks.set(index, completedTask);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return completedTask;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * Gets a String representation of all tasks in the list"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     * @return a String representing all tasks in the list"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teikjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String getAllTasks() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        String result \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            result +\u003d \"\\n\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            Task currentTask \u003d tasks.get(i);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            int taskNumber \u003d i + 1;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teikjun"
        },
        "content": "            result +\u003d taskNumber + \". \" + currentTask;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 85
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    Todo(String name, boolean isDone) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static Todo createTodo(String name, boolean isDone) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return new Todo(name, isDone);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static Todo decode(String text) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        String[] parts \u003d text.split(\",\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        boolean decodedIsDone \u003d parts[1].equals(\"1\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return createTodo(parts[2], decodedIsDone);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String encodeTask() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        int encodedIsDone \u003d this.getIsDone() ? 1 : 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return \"T,\" + encodedIsDone + \",\" + name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public Todo complete() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return createTodo(this.getName(), true);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public Task setName(String newName) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return createTodo(newName, isDone);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        String taskString \u003d super.toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        String result \u003d \"[T]\" + taskString;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "teikjun": 39
    }
  },
  {
    "path": "src/main/java/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"todo\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    String argumentText;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    TodoCommand(String argumentText) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.argumentText \u003d argumentText;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public CommandResult execute() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        Task newTodo \u003d Todo.createTodo(argumentText, false);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        taskList.addToList(newTodo);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return new CommandResult(getAddSuccessMessage(newTodo));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 20
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": " * User interface of the application"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    Scanner sc;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    Ui() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public String getUserCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void showResultToUser(CommandResult result) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        System.out.println(result.getFeedbackToUser());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void showWelcomeMessage() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                + \"What can I do for you?\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void showGoodbyeMessage() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        System.out.println(\":D\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    public void printLogo() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teikjun": 37
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "[T][✘] borrow book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "[D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "1. [T][✘] borrow book"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "2. [D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "[D][✓] return book (by: June 6th)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "1. [T][✘] borrow book"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "2. [D][✓] return book (by: June 6th)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "[D][✓] return book (by: June 6th)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "Exiting Duke..."
      }
    ],
    "authorContributionMap": {
      "teikjun": 22
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "teikjun": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "dir /s /B ..\\src\\main\\java\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin @sources.txt"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "teikjun": 22
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teikjun"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teikjun"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teikjun"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teikjun"
        },
        "content": "# if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teikjun"
        },
        "content": "if"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teikjun"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teikjun"
        },
        "content": "  )"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teikjun"
        },
        "content": "then"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teikjun"
        },
        "content": "fi"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teikjun"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teikjun"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teikjun"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teikjun"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teikjun"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teikjun"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teikjun"
        },
        "content": "then"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teikjun"
        },
        "content": "else"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teikjun"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teikjun"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "teikjun": 39
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teikjun"
        },
        "content": "../src/main/java/Deadline.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teikjun"
        },
        "content": "../src/main/java/Duke.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teikjun"
        },
        "content": "../src/main/java/DukeException.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teikjun"
        },
        "content": "../src/main/java/Event.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teikjun"
        },
        "content": "../src/main/java/Parser.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teikjun"
        },
        "content": "../src/main/java/Storage.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teikjun"
        },
        "content": "../src/main/java/Task.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teikjun"
        },
        "content": "../src/main/java/TaskList.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teikjun"
        },
        "content": "../src/main/java/Todo.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teikjun"
        },
        "content": "../src/main/java/Ui.java"
      }
    ],
    "authorContributionMap": {
      "teikjun": 10
    }
  }
]
