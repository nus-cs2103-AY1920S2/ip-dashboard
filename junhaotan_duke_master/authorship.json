[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "group \u0027main.java\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "test {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "junhaotan": 39
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "D | 1 | homework | 3rd of March 2020, 11:59pm"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "T | 0 | CS2103 iP"
      }
    ],
    "authorContributionMap": {
      "junhaotan": 2
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "Duke is an personal task managing desktop app."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "1. Add task to list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "2. List tasks"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "3. Mark task as done"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "4. Delete task from list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "5. Find task in list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "6. Help for user "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "7. Bye"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "### `todo (description)` - Add a Todo task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "A todo task will be added with the task name`(description)`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "`todo view webcast`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "`Got it. I\u0027ve added this task:`  "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " `[T][✗] view webcast`  "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "`Now you have 1 task in the list.`"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "### `event (description) /at (period)` - Add an Event task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "An event task will be added with the task name `(description)` and `(period)`."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "`event project meeting /at 03/04/2020 1400-1600`"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "`Got it. I\u0027ve added this task:`   "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " `[E][✗] project meeting (at: 3rd of April 2020, 2:00pm to 4:00pm)`  "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "`Now you have 2 tasks in the list.`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "### `deadline (description) /by (deadline)` - Add a Deadline task"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "A deadline task will be added with the task name `(description)` and `(deadline)`."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "`deadline coding assignment /by 03/03/2020 2359`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "`Got it. I\u0027ve added this task:`  "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " `[D][✗] coding assignment (by: 3rd of March 2020, 11:59pm)`  "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "`Now you have 3 tasks in the list.`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "### `list` - List all the tasks"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "All the tasks in the list will be displayed."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "`Here are the tasks in your list:`  "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "`1.[T][✗] view webcast`  "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "`2.[E][✗] project meeting (at: 3rd of April 2020, 2:00pm to 4:00pm)`  "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "`3.[D][✗] coding assignment (by: 3rd of March 2020, 11:59pm)`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "### `done (task number)` - Mark task as done"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "The task with that particular task number will be marked as done."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "`done 2`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "`Nice! I\u0027ve marked this task as done:`  "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " `[E][✓] project meeting (at: 3rd of March 2020, 2:00pm to 4:00pm)`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "### `delete (task number)` - Delete a task"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "The task with that particular task number will be deleted."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " Example of usage:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " `delete 2`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " Expected outcome:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "`Noted. I\u0027ve removed this task:`  "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " `[E][✓] project meeting (at: 3rd of March 2020, 2:00pm to 4:00pm)`  "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " `Now you have 2 tasks in the list.`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "### `find (keyword)` - Find a task"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "Find a task by searching for that particular `(keyword)`."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " Example of usage:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " `find webcast`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " Expected outcome:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " `Here are the matching tasks in your list:`  "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "`1.[T][✗] view webcast`  "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "### `help` - Provide in-App guidance to user"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "Displays available commands to the user."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " Example of usage:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " `help`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " Expected outcome:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " `Available commands:`  "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "  `list: displays all tasks that is recorded`"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "  "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "  `done [index]: marks the task as done`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "  "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "  `todo [task]: adds the task to the list`"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "  "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "  `deadline /by [dd/mm/yy HHMM]: adds task with deadline to the list`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "  "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "  `event /at [dd/mm/yy HHMM-HHMM]: adds event with date and time to the list`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "  "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "   `delete [index]: deletes the task`"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "   "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "   `find [keyword]: finds all task that is related to the keyword`"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "   `bye: exits the application`"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "### `bye` - Exit from the application"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "A goodbye message will be shown and the application will close."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "`Bye~ Hope to see you again soon!`"
      }
    ],
    "authorContributionMap": {
      "-": 18,
      "junhaotan": 121
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    private String[] command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Creates a Command object."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @param input A string representation of user\u0027s command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public Command(String input) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        this.command \u003d input.split(\"\\\\s\", 2);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Executes the user\u0027s command accordingly."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @param tasks TaskList object containing list of tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @param ui Ui object that aid interaction with the user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @param storage Storage object that stores a file with tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        switch (command[0].toLowerCase()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            return ui.showBye();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            return ui.listTask(tasks);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            if (command.length \u003c 2 || command[1].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                return \"OOPS!!! I\u0027m sorry, please enter an index to mark completed!\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                int number \u003d Integer.parseInt(command[1].trim());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                if (number \u003c 1 || number \u003e tasks.getList().size()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    assert number \u003e 1 : \"Invalid index, cannot be smaller than 1!\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    assert number \u003c tasks.getList().size() : \"Invalid index, cannot be greater than list size!\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    return \"The index inputted is not in the list! Please enter a valid index!\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                if (tasks.getList().get(number - 1).isDone \u003d\u003d false) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    tasks.markDone(number);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    storage.updateDone(number);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    return ui.printDone(number, tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    return \"This task is already completed! Please do other tasks!\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            if (command.length \u003c 2 || command[1].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                return \"OOPS! The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                String taskName \u003d command[1].trim();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                Task todo \u003d new Todo(taskName);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                storage.addTodo(taskName);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                tasks.add(todo);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                return ui.printAdd(todo);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            if (command.length \u003c 2 || command[1].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                return \"OOPS! The description of a deadline cannot be empty.\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                String deadline \u003d command[1].trim();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                String[] arrDeadline \u003d deadline.split(\"/by\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                if (arrDeadline.length \u003c 2 || arrDeadline[1].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    return \"OOPS! Please input /by Date Time (e.g. /by dd/mm/yyyy HHMM)\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    String timeDeadline \u003d Parser.convertDateAndTime(arrDeadline[1].trim());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    Task taskDeadline \u003d new Deadline(arrDeadline[0].trim(), timeDeadline);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    storage.addDeadline(deadline);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    tasks.add(taskDeadline);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    return ui.printAdd(taskDeadline);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            if (command.length \u003c 2 || command[1].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                return \"OOPS! The description of a event cannot be empty.\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                String event \u003d command[1].trim();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                String[] arrEvent \u003d event.split(\"/at\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                if (arrEvent.length \u003c 2 || arrEvent[1].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    return \"OOPS! Please input /at Date (e.g. /at dd/mm/yyyy 1500-2000)\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    String time \u003d Parser.convertDateAndTime(arrEvent[1].trim());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    Task taskEvent \u003d new Event(arrEvent[0].trim(), time);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    storage.addEvent(event);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    tasks.add(taskEvent);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    return ui.printAdd(taskEvent);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            if (command.length \u003c 2 || command[1].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                return \"OOPS! Please enter an index to delete.\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                int deletionNumber \u003d Integer.parseInt(command[1].trim());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                if (deletionNumber \u003c 1 || deletionNumber \u003e tasks.getList().size()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    assert deletionNumber \u003e 1 : \"Invalid index, cannot be smaller than 1!\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    assert deletionNumber \u003c tasks.getList().size() : \"Invalid index, cannot be greater than list size!\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    return \"The index inputted is not in the list! Please enter a valid index!\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                storage.delete(deletionNumber);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                Task toDelete \u003d tasks.getList().get(deletionNumber - 1);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                tasks.delete(deletionNumber);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                return ui.printDelete(toDelete);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            if (command.length \u003c 2 || command[1].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                return \"OOPS! The description of a find cannot be empty.\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                String keyWord \u003d command[1].trim();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                return ui.printFind(keyWord);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            String instruction \u003d \"Available commands:\\n\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    + \"list: displays all tasks that is recorded\\n\\n\""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    + \"done [index]: marks the task as done\\n\\n\""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    + \"todo [task]: adds the task to the list\\n\\n\""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    + \"deadline /by [dd/mm/yy HHMM]: adds task with deadline to the list\\n\\n\""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    + \"event /at [dd/mm/yy HHMM-HHMM]: adds event with date and time to the list\\n\\n\""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    + \"delete [index]: deletes the task\\n\\n\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    + \"find [keyword]: finds all task that is related to the keyword\\n\\n\""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    + \"bye: exits the application\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            return instruction;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                        + \"Type \u0027help\u0027 to view available commands!\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                return e.getMessage();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Gets a boolean (true/false) depending on user\u0027s command."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @return true if user\u0027s command is \"bye\"."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        boolean flag \u003d false;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            flag \u003d true;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        return flag;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junhaotan": 143
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " * The Deadline class is a type of Task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    protected String deadlineDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Creates a Deadline Task object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @param description A string representation of the task description."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @param deadlineDate A string representation of the deadline for the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public Deadline(String description, String deadlineDate) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        this.deadlineDate \u003d deadlineDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Gets the task description, deadline and status whether is it done."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @return A string representation of the task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + deadlineDate + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junhaotan": 28
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Returns the dialog box with user\u0027s image and corresponding text with it."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @param text String representation of user\u0027s dialog."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @param img JavaFX object of image that represents the face of the user."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @return DialogBox that has user\u0027s image accompanied with its dialog."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Returns the dialog box with Duke\u0027s image and corresponding text with it."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @param text String representation of Duke\u0027s dialog."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @param img JavaFX object of image that represents the face of Duke."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @return DialogBox that has Duke\u0027s image accompanied with its dialog."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junhaotan": 73
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " * The Duke class."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Creates a Duke object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @param filePath A string representation of the file directory."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        String s \u003d c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "junhaotan": 26
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " * DukeException class that extends from Exception class."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Creates a DukeException object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @param msg A string representation of the exception."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junhaotan": 14
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " * Event class that is a type of Task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    String timeline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Creates a Event Task object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @param description A string representation of the task description."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @param timeline A string representation of the time for the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public Event(String description, String timeline) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        this.timeline \u003d timeline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Gets the task description, time and status whether is it done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @return A string representation of the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.timeline + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junhaotan": 27
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junhaotan": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    private Duke duke \u003d new Duke(\"data/duke.txt\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junhaotan": 30
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import java.util.Timer;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import java.util.TimerTask;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    private String welcome \u003d \"Hello! I\u0027m Duke, your personal task manager!\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            + \"What can I do for you?\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            + \"You can key in the command \u0027help\u0027 to view available commands.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    private String bye \u003d \"Bye~ Hope to see you again soon!\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Initializes the main window which welcomes the user and also set desired properties for the"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * UI elements in the window."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(welcome, dukeImage));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        );"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        // creates a delay of 0.5s before exiting the application to show the bye message"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        if (response.equals(bye)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            new Timer().schedule(new TimerTask() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                public void run() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    Platform.exit();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    System.exit(0);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            }, 500);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junhaotan": 78
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " * Parser class that handles processing of the user\u0027s date/time input."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Gets a Command object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @param command A string representation of the user\u0027s command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @return A new Command object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public static Command parse(String command) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        return new Command(command);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Returns the string representation of a date by converting from dd/mm/yyyy hhmm to"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * English sentences that is easier to read."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @param time A string representation of date in form of dd/mm/yyyy hhmm."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @return A string representation of date in English sentences."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public static String convertDateAndTime(String time) { // in the form of dd/mm/yyyy hhmm"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        String[] array \u003d time.split(\" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        String day \u003d \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        if (array.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            String[] dateArray \u003d array[0].split(\"/\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            if (dateArray.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                if ((dateArray[0].equals(\"1\") || dateArray[0].equals(\"21\") || dateArray[0].equals(\"31\"))) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    day \u003d dateArray[0] + \"st\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                } else if ((dateArray[0].equals(\"2\") || dateArray[0].equals(\"22\"))) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    day \u003d dateArray[0] + \"nd\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                } else if ((dateArray[0].equals(\"3\") || dateArray[0].equals(\"23\"))) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    day \u003d dateArray[0] + \"rd\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    day \u003d dateArray[0] + \"th\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                switch (dateArray[1]) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                case \"1\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    day \u003d day + \" of January \";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                case \"2\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    day \u003d day + \" of February \";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                case \"3\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    day \u003d day + \" of March \";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                case \"4\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    day \u003d day + \" of April \";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                case \"5\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    day \u003d day + \" of May \";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                case \"6\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    day \u003d day + \" of June \";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                case \"7\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    day \u003d day + \" of July \";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                case \"8\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    day \u003d day + \" of August \";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                case \"9\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    day \u003d day + \" of September \";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                case \"10\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    day \u003d day + \" of October \";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                case \"11\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    day \u003d day + \" of November \";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                case \"12\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    day \u003d day + \" of December \";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                day \u003d day + dateArray[2] + \", \";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    String rawTime \u003d array[1];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    String[] timeArray \u003d rawTime.split(\"-\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    if (timeArray.length \u003d\u003d 1) { // deadline"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                        SimpleDateFormat input \u003d new SimpleDateFormat(\"HHmm\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                        SimpleDateFormat output \u003d new SimpleDateFormat(\"hh:mmaa\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                        Date date \u003d input.parse(rawTime);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                        String outputString \u003d output.format(date);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                        if (outputString.charAt(0) \u003d\u003d \u00270\u0027) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                            day \u003d day + outputString.substring(1).toLowerCase();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                            day \u003d day + outputString.toLowerCase();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    } else if (timeArray.length \u003d\u003d 2) { // event"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                        SimpleDateFormat input \u003d new SimpleDateFormat(\"HHmm\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                        SimpleDateFormat output \u003d new SimpleDateFormat(\"hh:mmaa\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                        Date start \u003d input.parse(timeArray[0]);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                        Date end \u003d input.parse(timeArray[1]);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                        String startTime \u003d output.format(start).toLowerCase();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                        String endTime \u003d output.format(end).toLowerCase();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                        if (startTime.charAt(0) \u003d\u003d \u00270\u0027) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                            startTime \u003d startTime.substring(1);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                        if (endTime.charAt(0) \u003d\u003d \u00270\u0027) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                            endTime \u003d endTime.substring(1);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                        day \u003d day + startTime + \" to \" + endTime;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                } catch (ParseException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                return time;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            return time;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        return day;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junhaotan": 121
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " * Storage class that handles loading tasks from file and saving tasks in the file."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Creates a Storage object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @param filePath A string representation of the file directory."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        file \u003d new File(filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                file \u003d new File(\"data\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                file.mkdir();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                file \u003d new File(\"data/duke.txt\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Updates task in file to be marked as done."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @param number An Integer that represents the task index."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public void updateDone(int number) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            String s \u003d \"\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            Scanner scanFile \u003d new Scanner(file);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d TaskList.size(); i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                if (i \u003d\u003d number) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    if (i \u003d\u003d TaskList.size()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                        s \u003d s + scanFile.nextLine().replaceFirst(\"0\", \"1\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                        s \u003d s + scanFile.nextLine().replaceFirst(\"0\", \"1\") + System.lineSeparator();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    if (i \u003d\u003d TaskList.size()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                        s \u003d s + scanFile.nextLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                        s \u003d s + scanFile.nextLine() + System.lineSeparator();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            FileWriter fw \u003d new FileWriter(\"data/duke.txt\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            fw.write(s);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            System.out.println(\"\\tInvalid task number.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            System.out.println(\"\\tFile does not exist\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            System.out.println(\"\\t\" + e.getMessage());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Loads the tasks in file into an ArrayList of Task."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @return ArrayList containing tasks from file."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                String eventType \u003d sc.next();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                switch (eventType) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    String todo \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    String[] arr \u003d todo.split(\"\\\\|\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    Task todoTask \u003d new Todo(arr[2].trim());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    if (arr[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                        todoTask.markAsDone();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    tasks.add(todoTask);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    String deadline \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    String[] arr2 \u003d deadline.split(\"\\\\|\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    Task deadlineTask \u003d new Deadline(arr2[2].trim(), arr2[3].trim());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    if (arr2[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                        deadlineTask.markAsDone();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    tasks.add(deadlineTask);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    String event \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    String[] arr3 \u003d event.split(\"\\\\|\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    Task eventTask \u003d new Event(arr3[2].trim(), arr3[3].trim());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    if (arr3[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                        eventTask.markAsDone();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    tasks.add(eventTask);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            System.out.println(\"\\tFile does not exist\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Adds Todo task to the file."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @param taskName A string representation of the task description."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public void addTodo(String taskName) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            FileWriter append \u003d new FileWriter(\"data/duke.txt\", true);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            if (TaskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                append.write(\"T | 0 | \" + taskName);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                append.write(\"\\n\" + \"T | 0 | \" + taskName);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            append.close();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Adds Deadline task to the file."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @param deadline A string representation of the Deadline task description."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public void addDeadline(String deadline) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            String[] arrDeadline \u003d deadline.split(\"/by\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            String timeDeadline \u003d Parser.convertDateAndTime(arrDeadline[1].trim());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            Task t \u003d new Deadline(arrDeadline[0].trim(), timeDeadline);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            FileWriter append \u003d new FileWriter(\"data/duke.txt\", true);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            if (TaskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                append.write(\"D | 0 | \" + arrDeadline[0].trim() + \" | \" + timeDeadline);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                append.write(\"\\n\" + \"D | 0 | \" + arrDeadline[0].trim() + \" | \" + timeDeadline);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            append.close();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Adds the Event task to the file."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @param event A string representation of the Event task description."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public void addEvent(String event) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            String[] arrEvent \u003d event.split(\"/at\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            String time \u003d Parser.convertDateAndTime(arrEvent[1].trim());"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            Task task \u003d new Event(arrEvent[0].trim(), time);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            FileWriter append \u003d new FileWriter(\"data/duke.txt\", true);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            if (TaskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                append.write(\"E | 0 | \" + arrEvent[0].trim() + \" | \" + time);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                append.write(\"\\n\" + \"E | 0 | \" + arrEvent[0].trim() + \" | \" + time);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            append.close();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Deletes a task in the file."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @param deletionNumber An Integer representing the task index to be deleted."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public void delete(int deletionNumber) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            String s \u003d \"\";"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            Scanner scanFile \u003d new Scanner(file);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d TaskList.size(); i++) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                if (i \u003d\u003d deletionNumber) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    scanFile.nextLine();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                } else if (i \u003d\u003d TaskList.size()) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    s \u003d s + scanFile.nextLine();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                } else if (i \u003d\u003d TaskList.size() - 1 \u0026\u0026 TaskList.size() \u003d\u003d deletionNumber) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    s \u003d s + scanFile.nextLine();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    s \u003d s + scanFile.nextLine() + System.lineSeparator();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            FileWriter fw \u003d new FileWriter(\"data/duke.txt\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            fw.write(s);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            System.out.println(\"\\tFile does not exist.\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            System.out.println(\"\\tTask does not exist.\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            System.out.println(\"\\t\" + e.getMessage());"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junhaotan": 212
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " * Task class that represents things to be done."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Creates a Task object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @param description A string representation of the task description."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Returns symbol representing whether the task is done or not done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @return A string that is either tick or X."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        this.isDone \u003d !this.isDone;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Returns the task description."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @return A string representation of the task description."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Returns the task description and an symbol depending on whether it is done or not done."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @return A string representation of the task description."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junhaotan": 52
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " * TaskList class that contains the ArrayList of Task and has methods to modify it."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Creates TaskList object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "      * @param tasks An ArrayList of Task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Returns the size of the ArrayList."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @return An Integer representing how many tasks the ArrayList holds."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public static int size() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Returns the ArrayList containing the Task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @return An ArrayList of Task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public static ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Adds task to the ArrayList of Task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @param t A task that will be added."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public void add(Task t) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Deletes the task from the ArrayList of Task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "      * @param deletionNumber An Integer representing the task index to be deleted."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public void delete(int deletionNumber) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        tasks.remove(deletionNumber - 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Marks the Task in the ArrayList as done."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @param number An Integer representing the task index to be marked as done."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public void markDone(int number) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        tasks.get(number - 1).markAsDone();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junhaotan": 62
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " * Todo class that is a type of Task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Creates a Todo Task object."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @param description A string representation of the task description."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Gets the task description, time and status whether is it done."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @return A string representation of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junhaotan": 23
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " * Ui class that handles user interactions."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhaotan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Creates a Ui object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Displays a string to bid goodbye to the user and exits the program."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public String showBye() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        return \"Bye~ Hope to see you again soon!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Displays acknowledgement whenever a task is added."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @param toAdd Task that will be added."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public String printAdd(Task toAdd) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        String temp \u003d \"Got it. I\u0027ve added this task:\" + \"\\n\" + toAdd + \"\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                + \"Now you have \" + TaskList.size() + \" \" + (TaskList.size() \u003d\u003d 1 ? \"task\" : \"tasks\")"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                + \" in the list.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Displays acknowledgement whenever a task is deleted."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @param toDelete Task that will be deleted."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public String printDelete(Task toDelete) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        String temp \u003d \"Noted. I\u0027ve removed this task:\" + \"\\n\" + toDelete + \"\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                + \"Now you have \" + TaskList.size() + \" \" + (TaskList.size() \u003d\u003d 1 ? \"task\" : \"tasks\")"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                + \" in the list.\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Displays acknowledgement whenever a task is done."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @param number An Integer representation of the task index that is to be done."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @param tasks A TaskList object that contains ArrayList of Task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public String printDone(int number, TaskList tasks) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        String temp \u003d \"Nice! I\u0027ve marked this task as done:\" + \"\\n\" + \"\\t\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                + tasks.getList().get(number - 1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Displays acknowledgement whenever user tries to search for a task."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @param keyWord A string representation of what the user is trying to search in the list of tasks."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public String printFind(String keyWord) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        boolean runOnce \u003d true;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        String temp \u003d \"\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        for (int i \u003d 0; i \u003c TaskList.size(); i++) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            if (TaskList.getList().get(i).getDescription().toLowerCase().contains(keyWord)) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                if (runOnce) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    temp +\u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                    runOnce \u003d false;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                temp +\u003d index + \".\" + TaskList.getList().get(i) + \"\\n\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        if (index \u003d\u003d 1) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            temp +\u003d \"There are no matching tasks in your list! Please try something else!\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * Displays all the Task objects in the TaskList."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     * @param tasks A TaskList object that contains ArrayList of Task."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public String listTask(TaskList tasks) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        if (tasks.getList().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            return \"There are no task in the list! FREEDOM!\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        String temp \u003d \"Here are the \" + (tasks.getList().size() \u003d\u003d 1 ? \"task\" : \"tasks\") + \" in your list:\\n\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.getList().size(); i++) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            temp +\u003d i + \".\" + tasks.getList().get(i - 1) + \"\\n\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junhaotan": 99
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "junhaotan": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "junhaotan": 19
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public void convert() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        String s \u003d \"1/2/2013 0000\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        assertEquals(\"1st of February 2013, 12:00am\", Parser.convertDateAndTime(s));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junhaotan": 11
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public void size() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        Task task \u003d new Todo(\"do tutorials\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        assertEquals(1, TaskList.size());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    public void delete() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        Task task \u003d new Todo(\"do tutorials\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        tasks.delete(1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "        assertEquals(0, TaskList.size());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "junhaotan": 24
    }
  },
  {
    "path": "text-ui-test/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "E | 0 | bainian | 2nd of January 2020, 5:00pm to 10:00pm"
      }
    ],
    "authorContributionMap": {
      "junhaotan": 1
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "event bainian /at 2/1/2020 1700-2200"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "junhaotan": 6
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "if [ ! -d \"../bin\" ]; then"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "  mkdir ../bin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "fi"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]; then"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "  rm ACTUAL.TXT"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "fi"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin $(find ../src/main/java/* | grep .java); then"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "  echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "  exit 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "fi"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "junhaotan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "if [ $? -eq 0 ]; then"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "  echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "  exit 0"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "else"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "  echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "  exit 1"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "junhaotan"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "junhaotan": 30
    }
  }
]
