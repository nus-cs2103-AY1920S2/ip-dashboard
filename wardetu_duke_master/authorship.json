[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wardetu"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wardetu"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wardetu"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wardetu"
        },
        "content": "test {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wardetu"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wardetu"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wardetu"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wardetu": 28,
      "-": 21
    }
  },
  {
    "path": "src/main/java/duke/Controller.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wardetu"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wardetu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wardetu"
        },
        "content": " * The Controller class that facilitates execution of the Duke program"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wardetu"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wardetu"
        },
        "content": "public class Controller {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    protected Storage storageController;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    private boolean hasReachedExit \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Constructs a Controller object with the specified Storage object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @param storageController the Storage object"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public Controller(Storage storageController) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        this.storageController \u003d storageController;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public static void raiseException(Exception e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        Ui.printError(e);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Executes the parametric Command object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @param command a Command object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @return a boolean value that is returned by the method call execute() to the Command object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public boolean execute(Command command) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        hasReachedExit \u003d command.execute(storageController, storageController.generateTaskList());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        return hasReachedExit;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        return hasReachedExit;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wardetu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wardetu": 40
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wardetu"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import gui.components.DialogBox;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import javafx.embed.swing.SwingFXUtils;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import javax.imageio.ImageIO;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wardetu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wardetu"
        },
        "content": " * The Duke program"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wardetu"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wardetu"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    private Controller controller;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    private Image user;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    private Image duke;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Constructs a Duke instance with the specified file path"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @param filePath a String value of the file path."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        Storage storageController \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        this.controller \u003d new Controller(storageController);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        this(\"src/data/data.csv\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            user \u003d SwingFXUtils.toFXImage(ImageIO.read(new File(\"src/main/resources/images/ricky.png\")), null);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            duke \u003d SwingFXUtils.toFXImage(ImageIO.read(new File(\"src/main/resources/images/andrew.png\")), null);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        Duke bot \u003d new Duke(\"src/data/data.csv\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        bot.run();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        Ui.greet();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        Ui.printTaskList();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        while (scan.hasNext()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                Optional\u003cCommand\u003e parsed \u003d Parser.parse(scan.nextLine());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                if (parsed.isPresent()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                    Command command \u003d parsed.get();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                    if (controller.execute(command)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        ScrollPane scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        VBox dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        TextField userInput \u003d new TextField();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        Button sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        Scene scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        String initialLine \u003d \"\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        Ui.greet();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        initialLine +\u003d Ui.getContent() + \"\\n\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        Ui.printTaskList();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        initialLine +\u003d Ui.getContent();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                DialogBox.getDukeDialog(new Label(initialLine), new ImageView(duke))"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        );"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            handleUserInput(userInput, dialogContainer);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        });"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            handleUserInput(userInput, dialogContainer);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        });"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    private void handleUserInput(TextField userInput, VBox dialogContainer) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        );"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        if (controller.getStatus()) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                this.stop();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                Controller.raiseException(e);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    private String getResponse(String text) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            Optional\u003cCommand\u003e parsed \u003d Parser.parse(text);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            System.out.println(parsed.isPresent());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            if (parsed.isPresent()) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                System.out.println(parsed.get());"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                controller.execute(parsed.get());"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        return Ui.getContent();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wardetu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wardetu": 183,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wardetu"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wardetu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wardetu"
        },
        "content": " * The Parser class that parses user inputs"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wardetu"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wardetu"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Parses a string input and returns a corresponding Command object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @param input the user input with type String."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @return a Command object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public static Optional\u003cCommand\u003e parse(String input) throws Exception {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        String[] arr \u003d input.split(\"\\\\s\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            switch (arr[0].toLowerCase()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                if (arr.length \u003e 1) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                    Controller.raiseException(new Exception(\"A word of bye is enough\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                return Optional.of(new ExitCommand());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                index \u003d Integer.parseInt(arr[1]) - 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                if (arr.length \u003e 2) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                    Controller.raiseException(new Exception(\"More content than needed for delete task\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                return Optional.of(new DeleteCommand(index));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                index \u003d Integer.parseInt(arr[1]) - 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                if (arr.length \u003e 2) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                    Controller.raiseException(new Exception(\"More content than needed for done task\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                return Optional.of(new DoneCommand(index));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                String keyword \u003d arr[1];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                if (arr.length \u003e 2) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                    Controller.raiseException(new Exception(\"Sorry I can only handle one word at a time\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                return Optional.of(new FindCommand(keyword));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                if (arr.length \u003e 1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                    Controller.raiseException(new Exception(\"A word of list is enough\"));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                return Optional.of(new ListCommand());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                    return Optional.of(new AddCommand(Task.generateTask(arr)));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                    Controller.raiseException(e);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            throw new Exception(\"A tad too few words, innit? \");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        return Optional.empty();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wardetu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wardetu": 68
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wardetu"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wardetu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wardetu"
        },
        "content": " * The Storage class that handles storage related businesses for the Duke program."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wardetu"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wardetu"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Constructs a Storage object with the specified file path."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @param filePath the file path to the file that stores data for the Duke program."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Scans the file specified by the file path and output a list of Task objects."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @return An ArrayList collection of Task objects."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public ArrayList\u003cTask\u003e generateTaskList() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        ArrayList\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        try (Scanner scan \u003d new Scanner(new File(filePath))) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            while (scan.hasNextLine()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                String[] line \u003d scan.nextLine().split(\",\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                boolean isDone \u003d line[2].equals(\"T\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                String[] line2 \u003d new String[]{line[0], line[1]};"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                Task task \u003d Task.generateTask(line2);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                if (isDone) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                    task.setDone();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                lst.add(task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        return lst;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Writes the list of Task objects into the file specified by the file path."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @param lst An ArrayList collection of Task objects."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public void writeTask(ArrayList\u003cTask\u003e lst) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        try (FileWriter writer \u003d new FileWriter(filePath)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            String str \u003d lst.stream()"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                    .map(task -\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                            String.join(\",\", task.getType(),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                                    task.getDescription().trim(), task.getStatus()))"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                    .collect(Collectors.joining(\"\\n\"));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            writer.write(str);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            Controller.raiseException(e);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wardetu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wardetu": 71
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wardetu"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wardetu"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    private static String content;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public static void greet() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        content \u003d \"Greeting, traveler. My name is Andrew. What can I do for you?\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        System.out.println(content);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public static String getContent() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        return content;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Prints a goodbye message."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public static void goodbye() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        content \u003d \"I shall not trouble you anymore. Farewell, partner.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        System.out.println(content);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Prints a message when an addition command is completed."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @param str  a String description of the task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @param size the number of Task objects in the current list after the addition."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public static void printAdd(String str, int size) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        content \u003d String.format(\"Added:\\t %s\\nYou now have %d tasks in your list\\n\", str, size);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        System.out.println(content);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Prints a message when a deletion command is completed"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @param str  a String description of the task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @param size the number of Task objects in the current list after the deletion."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public static void printDel(String str, int size) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        content \u003d String.format(\"Your burden has been lifted, removed: \\n\\t %s\\nYou now have %d tasks in your list\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                , str, size);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        System.out.println(content);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Prints a message when a done command is completed"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @param str  a String description of the task"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @param size the number of Task objects in the current list after the completion."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public static void printDone(String str, int size) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        content \u003d String.format(\"Task successfully completed: \\n\\t %s\\nYou now have %d tasks in your list\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                , str, size);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        System.out.println(content);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Prints a message when a find command is initiated."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @param str the keyword provided"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public static void printFindPre(String str) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        content \u003d String.format(\"Tasks that contain %s in your list\\n\", str);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        System.out.println(content);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Prints a message showing the number of matches found."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @param size the number of matches"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public static void printFindPost(int size) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        content \u003d String.format(\"%d %s in total.\\n\", size, size \u003e 1 ? \"entries\" : \"entry\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        System.out.println(content);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Prints a message error."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @param e an Exception."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public static void printError(Exception e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        content \u003d e.getMessage();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        System.out.println(content);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Prints all the available commands that the Duke program can understand."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public static void printTaskList() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        content \u003d \"Commands available:\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                + \"\\n1. event [description] : add a new event\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                + \"\\n2. deadline [description] by yyyy-mm-dd hhmm : add a new deadline\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                + \"\\n3. todo [description] at yyyy-mm-dd hhmm : add a new todo\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                + \"\\n4. done [index] : complete the task at given index\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                + \"\\n5. delete [index] : delete the task at given index\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                + \"\\n6. find [one single keyword] : find records that contain the specified keyword\""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                + \"\\n7. bye : say goodbye and quit\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        System.out.println(content);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public static void printList(String lst) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        content \u003d lst;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        System.out.println(lst);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wardetu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wardetu": 107
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wardetu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import duke.Controller;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wardetu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wardetu"
        },
        "content": " * A class representing an addition command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wardetu"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wardetu"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Constructs an AddCommand object with a specified Task object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @param task a Task object to be added by Duke."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Executes this AddCommand and writes the specified task represented by the Task object to the file that is"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * currently specified by the file path in the Duke instance."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @param storageController a Storage object"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @param storage           an ArrayList collection of Task objects for processing in-program."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public boolean execute(Storage storageController, ArrayList\u003cTask\u003e storage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            storage.add(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            int storageSize \u003d storage.size();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            Ui.printAdd(task.toString(), storageSize);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            storageController.writeTask(storage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            Controller.raiseException(e);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public void executeGui(Storage storageController, ArrayList\u003cTask\u003e storage) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        execute(storageController, storage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wardetu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wardetu": 50
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wardetu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wardetu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wardetu"
        },
        "content": " * An abstract object representing a command to the Duke program"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wardetu"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wardetu"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Executes a command using the specified Storage object and an ArrayList collection of Task objects."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @param storageController a Storage object"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @param storage           an ArrayList collection of Task objects for processing in-program."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @return true if the Command is an ExitCommand, false otherwise."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public abstract boolean execute(Storage storageController, ArrayList\u003cTask\u003e storage);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public abstract void executeGui(Storage storageController, ArrayList\u003cTask\u003e storage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wardetu"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wardetu": 23
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wardetu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import duke.Controller;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wardetu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wardetu"
        },
        "content": " * A class representing a deletion command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wardetu"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wardetu"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Constructs the DeleteCommand object with specified index for deletion i."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @param i a nonnegative, integer index for a Task object in the currently processed ArrayList."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public DeleteCommand(int i) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        this.index \u003d i;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Executes this DeleteCommand. The Task object is deleted from the file specified by the file path in the current"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Duke instance."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @param storageController a Storage object"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @param storage           an ArrayList collection of Task objects for processing in-program."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public boolean execute(Storage storageController, ArrayList\u003cTask\u003e storage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            int storageSize \u003d storage.size();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            Ui.printDel(storage.get(index).toString(), storageSize - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            storage.remove(index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            storageController.writeTask(storage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            Controller.raiseException(e);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public void executeGui(Storage storageController, ArrayList\u003cTask\u003e storage) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        execute(storageController, storage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wardetu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wardetu": 50
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wardetu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import duke.Controller;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wardetu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wardetu"
        },
        "content": " * A class representing a completion command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wardetu"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wardetu"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Constructs the DeleteCommand object with specified index for completion i."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @param i a nonnegative, integer index for a Task object in the currently processed ArrayList."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public DoneCommand(int i) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        this.index \u003d i;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Executes this DoneCommand."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @param storageController a Storage object"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @param storage           an ArrayList collection of Task objects for processing in-program."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public boolean execute(Storage storageController, ArrayList\u003cTask\u003e storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            int storageSize \u003d storage.size();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            storage.get(index).setDone();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            Ui.printDone(storage.get(index).toString(), storageSize);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            storageController.writeTask(storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            Controller.raiseException(e);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public void executeGui(Storage storageController, ArrayList\u003cTask\u003e storage) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        execute(storageController, storage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wardetu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wardetu": 49
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wardetu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wardetu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wardetu"
        },
        "content": " * A class representing an exit command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wardetu"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wardetu"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    private static final String type \u003d \"exit\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Exits the program by returning a true value that will be propagated upward."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @param storageController a Storage object"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @param storage           an ArrayList collection of Task objects for processing in-program."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @return true"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public boolean execute(Storage storageController, ArrayList\u003cTask\u003e storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        Ui.goodbye();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public void executeGui(Storage storageController, ArrayList\u003cTask\u003e storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        System.out.println(\"asdas\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        Ui.goodbye();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wardetu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wardetu": 33
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wardetu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import duke.Controller;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import java.util.concurrent.atomic.AtomicInteger;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wardetu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wardetu"
        },
        "content": " * A class representing a find command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wardetu"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wardetu"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    private static final String type \u003d \"find\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Constructs the FindCommand object with a specified keyword."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @param keyword a String value for the keyword."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Displays the list of tasks that contain the query keyword. The list is consistent with data stored in the record"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * specified by the file path in the current Duke instance."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @param storageController a Storage object"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @param storage           an ArrayList collection of Task objects for processing in-program."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public boolean execute(Storage storageController, ArrayList\u003cTask\u003e storage) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            AtomicInteger index \u003d new AtomicInteger(1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            Ui.printFindPre(keyword);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            storage.stream()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                    .filter(task -\u003e task.getDescription().toLowerCase().contains(this.keyword.toLowerCase()))"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                    .forEach(task -\u003e System.out.printf(\"\\t%d -%s\\n\", index.getAndIncrement(), task.toString()));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            Ui.printFindPost(index.get() - 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            Controller.raiseException(e);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public void executeGui(Storage storageController, ArrayList\u003cTask\u003e storage) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        execute(storageController, storage);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wardetu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wardetu": 54
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wardetu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import duke.Controller;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wardetu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wardetu"
        },
        "content": " * A class representing a listing command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wardetu"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wardetu"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    private static final String type \u003d \"list\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Displays the current list of tasks. The list is consistent with data stored in the record specified by the file"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * path in the current Duke instance."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @param storageController a Storage object"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @param storage           an ArrayList collection of Task objects for processing in-program."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public boolean execute(Storage storageController, ArrayList\u003cTask\u003e storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            String lst \u003d \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            for (int i \u003d 0; i \u003c storage.size(); i++) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                lst +\u003d String.format(\"\\t%d -%s\\n\", i + 1, storage.get(i));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            Ui.printList(lst);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            Controller.raiseException(e);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public void executeGui(Storage storageController, ArrayList\u003cTask\u003e storage) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        execute(storageController, storage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wardetu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wardetu": 43
    }
  },
  {
    "path": "src/main/java/duke/task/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wardetu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wardetu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wardetu"
        },
        "content": " * A class that represents a task with a deadline."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wardetu"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wardetu"
        },
        "content": "class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    protected LocalDateTime time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Constructs an DeadlineTask object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @param inputArr a String array that represents the input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @throws Exception if there is not enough information or wrong format is given."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public DeadlineTask(String[] inputArr) throws Exception {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        this.type \u003d \"deadline\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        if (inputArr.length \u003c 2) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            throw new Exception(\"Deadline tasks must have a non-empty description!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        this.description \u003d Arrays.stream(inputArr)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                .map(str -\u003e str.toLowerCase().equals(\"deadline\") ? \"\" : str.equals(\"/by\") ? \"by\" : str)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                .collect(Collectors.joining(\" \"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        int lastBy \u003d description.lastIndexOf(\" by \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        if (lastBy \u003d\u003d -1) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            throw new Exception(\"Keyword \\\"by\\\" missing\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                this.time \u003d LocalDateTime.parse(this.description.substring(lastBy + 4),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                        DateTimeFormatter.ofPattern(\"yyyy-LL-dd HHmm\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                    this.time \u003d LocalDateTime.parse(this.description.substring(lastBy + 4),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                            DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mma\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                } catch (DateTimeParseException e2) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                    throw new Exception(\"Error: unable to decipher date \u0026 time input.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            this.description \u003d this.description.substring(0, lastBy + 3) + \u0027 \u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                    + time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mma\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Returns the String representation of this DeadlineTask object."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @return the String representation of this DeadlineTask object."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        return \" DEADLINE\" + super.toString();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wardetu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wardetu": 58
    }
  },
  {
    "path": "src/main/java/duke/task/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wardetu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wardetu"
        },
        "content": "/***"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wardetu"
        },
        "content": " * A task that has a time attribute that it occurs at."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wardetu"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wardetu"
        },
        "content": "class EventTask extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    protected LocalDateTime time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Constructs an EventTask object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @param inputArr a String array that represents the input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @throws Exception if there is not enough information or wrong format is given."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public EventTask(String[] inputArr) throws Exception {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        this.type \u003d \"event\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        if (inputArr.length \u003c 2) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            throw new Exception(\"Event tasks must have a non-empty description!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        this.description \u003d Arrays.stream(inputArr)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                .map(str -\u003e str.toLowerCase().equals(\"event\") ? \"\" : str.equals(\"/at\") ? \"at\" : str)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                .collect(Collectors.joining(\" \"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        int lastAt \u003d description.lastIndexOf(\" at \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        if (lastAt \u003d\u003d -1) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            throw new Exception(\"Keyword \\\"at\\\" missing\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                this.time \u003d LocalDateTime.parse(this.description.substring(lastAt + 4),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                        DateTimeFormatter.ofPattern(\"yyyy-LL-dd HHmm\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                    this.time \u003d LocalDateTime.parse(this.description.substring(lastAt + 4),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                            DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mma\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                } catch (DateTimeParseException e2) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                    throw new Exception(\"Error: unable to decipher date \u0026 time input.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            this.description \u003d this.description.substring(0, lastAt + 3) + \u0027 \u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                    + this.time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mma\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Returns the String representation of this EventTask object."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @return the String representation of this EventTask object."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        return \" EVENT\" + super.toString();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wardetu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wardetu": 60
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wardetu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wardetu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wardetu"
        },
        "content": " * Am abstract representation of a task issued to the Duke program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wardetu"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wardetu"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    private static final String TO_DO \u003d \"todo\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    private static final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    private static final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    static int size \u003d 0;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    private boolean isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    protected String type \u003d \"task\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Outputs a String representation of the Task object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @return the String representation."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        return String.format(\"%s%s\", this.isDone ? \"[completed]\" : \"[uncompleted]\", this.description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Returns the type of the Task object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @return type of the Task object with type String."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Returns the description of the Task object"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @return description of the Task object with type String."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Returns the status of the Task object"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @return status of the Task object with type String."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        return this.isDone ? \"T\" : \"F\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Sets the isDone field to true. If isDone is already true, throws an exception."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @throws Exception when value of isDone field is already true"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public void setDone() throws Exception {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            throw new Exception(\"You might have been mistaken. This task has already been completed.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Generates a Task object based on the input. The Task object can be a DeadlineTask, an EventTask, or a TodoTask."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @param inputAsArray a String array representing the input to create the Task object."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @return a Task object."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @throws Exception if the task type is invalid."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public static Task generateTask(String[] inputAsArray) throws Exception {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        String type \u003d inputAsArray[0];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        switch (type.toLowerCase()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        case TO_DO: {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            return new TodoTask(inputAsArray);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        case EVENT: {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            return new EventTask(inputAsArray);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        case DEADLINE: {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            return new DeadlineTask(inputAsArray);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wardetu"
        },
        "content": "            throw new Exception(\"You might have not chosen a valid task type! \" +"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                    \"Valid types are events, todos, and deadlines\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wardetu"
        },
        "content": "}"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wardetu": 93
    }
  },
  {
    "path": "src/main/java/duke/task/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wardetu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wardetu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wardetu"
        },
        "content": " * A task to be done that has no time attribute."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wardetu"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wardetu"
        },
        "content": "class TodoTask extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Constructs an TodoTask object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @param inputArr a String array that represents the input."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public TodoTask(String[] inputArr) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        this.type \u003d \"todo\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        size++;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        this.description \u003d Arrays.stream(inputArr)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                .map(str -\u003e str.toLowerCase().equals(\"todo\") ? \"\" : str)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wardetu"
        },
        "content": "                .collect(Collectors.joining(\" \"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * Returns the String representation of this TodoTask object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     * @return the String representation of this TodoTask object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wardetu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        return \" TODO\" + super.toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wardetu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wardetu": 34
    }
  },
  {
    "path": "src/main/java/gui/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wardetu"
        },
        "content": "package gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wardetu"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wardetu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wardetu": 10
    }
  },
  {
    "path": "src/main/java/gui/components/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wardetu"
        },
        "content": "package gui.components;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wardetu"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wardetu"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wardetu"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wardetu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wardetu"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wardetu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wardetu": 44
    }
  }
]
