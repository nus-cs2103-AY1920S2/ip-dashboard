[
  {
    "path": ".gitignore",
    "fileType": "gitignore",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# IDEA files"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "/.idea/"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/out/"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "/*.iml"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "# Gradle build files"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/.gradle/"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/build/"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "src/main/resources/docs/"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "# Automated testing file"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "text-ui-test/ACTUAL.txt"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "# save file"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "/data/duke.txt"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "# MacOS custom attributes files created by Finder"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ".DS_Store"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "*.iml"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "bin/"
      }
    ],
    "authorContributionMap": {
      "NicholasCF": 6,
      "-": 14
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    implementation \u0027com.google.code.gson:gson:2.8.6\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    archiveVersion \u003d \"0.1.5\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "test {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NicholasCF": 19,
      "-": 23
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " * Abstract class representing a command to add a generic task to the task list,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " * to be executed later."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "public abstract class AddCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * The task to be added to the list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    Task task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Adds the task to task list specified, stores the new list and"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * calls the UI to notify the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param tasks the task list to operate on"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param ui the user interface"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param storage the storage for the task list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        ui.showAddedTask(task, tasks.getCount());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NicholasCF": 25
    }
  },
  {
    "path": "src/main/java/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " * Represents a command to add a task with deadline to the task list,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " * to be executed later."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "public class AddDeadlineCommand extends AddCommand {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Creates an AddDeadlineCommand based on the description of the task,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * and the deadline."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param description the description of the task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param deadline the string representing the deadline of the task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public AddDeadlineCommand(String description, String deadline) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        task \u003d new Deadline(description, deadline);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NicholasCF": 16
    }
  },
  {
    "path": "src/main/java/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " * Represents a command to add an event to the task list,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " * to be executed later."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "public class AddEventCommand extends AddCommand {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Creates an AddEventCommand based on the description of the event,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * and the start and end times."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param description the description of the event"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param timeRange the string representing the start and end time"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public AddEventCommand(String description, String timeRange) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        task \u003d new Event(description, timeRange);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NicholasCF": 17
    }
  },
  {
    "path": "src/main/java/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " * Represents a command to add a task to the task list,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " * to be executed later."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "public class AddTodoCommand extends AddCommand {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Creates an AddEventCommand based on the description of the task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param description the description of the event"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public AddTodoCommand(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        task \u003d new Todo(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NicholasCF": 14
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " * Abstract class representing a command to be executed later."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Describes whether the command is an exit command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    protected boolean isExit \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Does a series of steps to fulfill the command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param tasks the task list to operate on"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param ui the user interface"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param storage the storage for the task list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NicholasCF": 22
    }
  },
  {
    "path": "src/main/java/CompleteTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " * Represents a command to mark a task in a task list as complete,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " * to be executed later."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "public class CompleteTaskCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Constructor for CompleteTaskCommand that takes in"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * the index of the task to be completed in the task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param index the index of the task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public CompleteTaskCommand(int index) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Completes the task in the task list specified by the index,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * stores the new task list and calls the UI to show the completed task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param tasks the task list to operate on"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param ui the user interface"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param storage the storage for the task list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        Task completedTask \u003d tasks.completeTask(index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        ui.showDonetask(completedTask);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NicholasCF": 32
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "import java.text.ParsePosition;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " * Represents a task with a description and a deadline."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * The deadline of the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    Date deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Constructor for Deadline that takes in a description of the task and"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * the deadline for the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param description the description of the task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param deadline the deadline of the task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public Deadline(String description, String deadline) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat(\"yyyy-mm-dd HH:mm\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        this.deadline \u003d format.parse(deadline, new ParsePosition(0));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat(\"MMM d yyyy HH:mm\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + format.format(deadline) + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NicholasCF": 36
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " * Represents a command to delete a task specified by"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " * its index in the task list."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Constructor for DeleteCommand that takes in the"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * index of the task to be deleted."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param index the index of the task to be deleted"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Deletes the task specified by the index from the task list,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * stores the new task list and calls the UI to show the deleted task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param tasks the task list to operate on"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param ui the user interface"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param storage the storage for the task list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        Task deletedTask \u003d tasks.deleteTask(index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        ui.showDeletedTask(deletedTask);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NicholasCF": 32
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " * Represents a chatbot, which takes in commands related to tasks and tracks a list of tasks."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Constructor for Duke that takes in the path to the file that"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * contains the saved task list from previous sessions."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param filePath path to the storage file"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "            tasks \u003d storage.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Starts the chatbot and continues executing commands until the"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * exit command is issued."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "            String fullCommand \u003d ui.getCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "            Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "            c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "            isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        new Duke(Paths.get(\"data\", \"duke.txt\").toString()).run();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NicholasCF": 44,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "import java.text.ParsePosition;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " * Represents an event with a description, start time and end time."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    Date startTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    Date endTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Constructor for Event that takes in a description of the event and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * a time range describing the start and end time."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param description the description of the event"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param timeRange String containing the start and end time, separated by \" to \","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     *                  in the \"yyyy-mm-dd HH:mm\" format"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public Event(String description, String timeRange) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat(\"yyyy-mm-dd HH:mm\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        String[] times \u003d timeRange.split(\" to \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        startTime \u003d format.parse(times[0], new ParsePosition(0));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        endTime \u003d format.parse(times[1], new ParsePosition(0));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat(\"MMM d yyyy HH:mm\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + format.format(startTime) + \" to \" + format.format(endTime) + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NicholasCF": 35
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " * Represents a command to stop the chatbot, to be executed later."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Calls the UI to show the closing message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param tasks the task list to operate on"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param ui the user interface"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param storage the storage for the task list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        ui.showBye();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NicholasCF": 20
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " * Represents a command to search for tasks containing a specified keyword,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " * to be executed later."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Constructor for FindCommand that takes in a search keyword."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param keyword the search keyword"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Finds the tasks containing the keyword, and calls the UI to display them."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param tasks the task list to operate on"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param ui the user interface"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param storage the storage for the task list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        TaskList lists \u003d tasks.getRelevantTasks(keyword);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        ui.showFoundTasks(lists);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NicholasCF": 27
    }
  },
  {
    "path": "src/main/java/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " * Represents an invalid command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Calls the UI  to alert the user of an invalid command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param tasks the task list to operate on"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param ui the user interface"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param storage the storage for the task list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        ui.showInvalidCommandMessage();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NicholasCF": 16
    }
  },
  {
    "path": "src/main/java/InvalidFormatCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " * Represents an improperly formatted command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "public class InvalidFormatCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Calls the UI to alert the user that the format of the command is wrong."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param tasks the task list to operate on"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param ui the user interface"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param storage the storage for the task list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        ui.showInvalidFormatMessage();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NicholasCF": 16
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " * Represents a parser that takes in user-typed commands and"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " * returns the equivalent Command object."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Returns a Command object based on the interpretation of the user-typed command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param command the user-typed command"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public static Command parse(String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "            String firstWord \u003d command.split(\" \")[0];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "            switch (firstWord) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "                return parseDeadline(getDetails(command, firstWord));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "                return parseDeleteTask(getDetails(command, firstWord));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "                return parseCompleteTask(getDetails(command, firstWord));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "                return parseEvent(getDetails(command, firstWord));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "                return new ShowTasksCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "                return parseTodo(getDetails(command, firstWord));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "                return parseFind(getDetails(command, firstWord));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "                return new InvalidCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "            return new InvalidFormatCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    private static Command parseDeadline(String details) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        String description \u003d details.split(\" /by \")[0];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        String deadline \u003d details.split(\" /by \")[1];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        return new AddDeadlineCommand(description, deadline);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    private static Command parseEvent(String details) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        String description \u003d details.split(\" /at \")[0];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        String time \u003d details.split(\" /at \")[1];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        return new AddEventCommand(description, time);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    private static Command parseTodo(String details) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        String description \u003d details;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        if (!description.isEmpty()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "            return new AddTodoCommand(description);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "            return new InvalidFormatCommand();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    private static Command parseDeleteTask(String details) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "            int index \u003d Integer.parseInt(details) - 1;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "            return new DeleteCommand(index);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "            return new InvalidFormatCommand();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    private static Command parseCompleteTask(String details) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "            int index \u003d Integer.parseInt(details) - 1;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "            return new CompleteTaskCommand(index);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "            return new InvalidFormatCommand();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    private static Command parseFind(String details) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        return new FindCommand(details);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    private static String getDetails(String command, String firstWord) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        return command.split(firstWord)[1].trim();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NicholasCF": 89
    }
  },
  {
    "path": "src/main/java/ShowTasksCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " * Represents a command to show the list of tasks, to be executed later."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "public class ShowTasksCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Passes the task list to the UI to be shown."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param tasks the task list to operate on"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param ui the user interface"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param storage the storage for the task list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        ui.showTasks(tasks);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NicholasCF": 16
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "import com.google.gson.Gson;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " * Represents the interface to data storage in memory."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " * Enables task list data to be save dto or loaded from a file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Path specifying the location of the storage file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * The parser that encodes and decodes between JSON and objects."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    Gson jsonParser \u003d new Gson();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Constructor for Storage that takes in the path to the intended storage file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param filePath the path to the storage file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Returns TaskList obtained from the file specified by filePath."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @return the TaskList loaded from the data"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @throws FileNotFoundException if the file does not exist"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public TaskList load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(new FileReader(getFile()));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        return jsonParser.fromJson(br, TaskList.class);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Saves the given TaskList as a JSON string to the file specified by filePath."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param tasks the TaskList to be saved"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public void save(TaskList tasks) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "            FileWriter fw \u003d new FileWriter(getFile());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "            fw.append(jsonParser.toJson(tasks));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "            getFile().getParentFile().mkdirs();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "            save(tasks);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    private File getFile() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        return new File(filePath);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NicholasCF": 67
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " * Represents a template for tasks, with a description and"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " * an indicator for whether it is completed."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * The description of the task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Constructor for Task that takes in the description of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Returns a status icon indicating the task completion status."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @return a check if the task is completed, or a cross if it is not completed"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Marks the task as completed."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public void tick() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public String encode() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NicholasCF": 44
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " * Represents a list of tasks, that can add or delete tasks."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    private TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Adds the given task to the list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param task the task to be added."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Deletes the task specified by the index."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param index the index of the task to be deleted."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @return the deleted task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public Task deleteTask(int index) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        return tasks.remove(index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Completes the task specified by the index."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param index the index of the task to be completed."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @return the completed task"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public Task completeTask(int index) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        task.tick();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public List\u003cTask\u003e getAllTasks() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Returns the number of tasks in the list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @return the number of tasks in the list"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public int getCount() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Returns a new list containing the tasks with the keyword in description."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param keyword the keyword to search for"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @return a new TaskList of matching tasks"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public TaskList getRelevantTasks(String keyword) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        List\u003cTask\u003e relevantTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "            if (task.description.contains(keyword)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "                relevantTasks.add(task);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        return new TaskList(relevantTasks);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "            result +\u003d i + \".\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "                    + tasks.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NicholasCF": 87
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " * Represents a normal task with only a description."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Constructor that takes in the description of the task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NicholasCF": 17
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " * Represents the user interface that interacts with the user and acts as a view."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * The input channel."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Displays a message indicating an error in loading the task list save file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        String message \u003d \"Cannot find save file.\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "                + \"Creating a new one, even if it\u0027s a bother\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        say(message);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Displays the list of tasks given."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param tasks the list of tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public void showTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        String message \u003d \"Here are your procrastinated tasks:\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "                + tasks;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        say(message);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Displays the deleted task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param task the deleted task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public void showDeletedTask(Task task) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        String message \u003d \"Giving up already? Removed this:\\n\\t\" + task;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        say(message);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Displays the task marked as completed."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param task the completed task"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public void showDonetask(Task task) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        String message \u003d \"Yay. You\u0027ve finally done this task:\\n\\t\" + task;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        say(message);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Displays the newly added task and the total number of tasks."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param task the added task"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param count the total number of tasks"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public void showAddedTask(Task task, int count) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        String message \u003d \"Another task? Oh well, here\u0027s the task:\\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "                + \"\\t\" + task + \"\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "                + \"Now you have \" + count + \" tasks in the list.\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        say(message);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Displays an error indicating improperly formatted command."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public void showInvalidFormatMessage() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        String message \u003d \"Your command is not even properly written. Try again properly.\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        say(message);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Displays a welcome message."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        String message \u003d \"Hello. I\u0027m Duke.\\n\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "                + \"Oh, it\u0027s you, can you please stop coming?\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        say(message);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Displays an error indicating an unknown command."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public void showInvalidCommandMessage() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        String message \u003d \"Unknown command. Program it yourself or get a dictionary.\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        say(message);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Displays a closing message."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public void showBye() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        String message \u003d \"Bye. Please don\u0027t come back again or I\u0027ll call the cops.\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        say(message);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Displays the list of tasks containing the given keyword."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @param tasks the task containing the given keyword"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public void showFoundTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        String message \u003d \"Here are your oh so hard to find tasks:\\n\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "                + tasks;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        say(message);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * Retrieves the user command from the interface."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     * @return the user command"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public String getCommand() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    private void say(String speech) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        String separator \u003d \"\\t\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        String[] lines \u003d speech.split(\"\\n\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        String indented \u003d \"\\t \" + String.join(\"\\n\\t \", lines) + \"\\n\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        String result \u003d separator + indented + separator;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        System.out.println(result);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NicholasCF": 132
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NicholasCF": 10
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public void requestListToParserTest() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        assertTrue(Parser.parse(\"list\") instanceof ShowTasksCommand);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NicholasCF": 9
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public void addTaskToTaskListTest() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        Task task \u003d new Task(\"Dummy\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        assertTrue(tasks.getAllTasks().contains(task));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        assertEquals(tasks.getCount(), 1);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    public void getTaskCounterTest() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        Task task \u003d new Task(\"Dummy\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        assertEquals(tasks.getCount(), 0);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "        assertEquals(tasks.getCount(), 1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NicholasCF": 26
    }
  },
  {
    "path": "text-ui-test/Expected.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t Hello. I\u0027m Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t Oh, it\u0027s you, can you please stop coming?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t Another task? Oh well, here\u0027s the task:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t \t[D][✘] CS2103 Project (by: Thursday 2359)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t Another task? Oh well, here\u0027s the task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t \t[E][✘] charITeach (at: 21 March 9am-6pm)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t Another task? Oh well, here\u0027s the task:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t \t[T][✘] go to therapist"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t Here are your procrastinated tasks:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t 1.[D][✘] CS2103 Project (by: Thursday 2359)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t 2.[E][✘] charITeach (at: 21 March 9am-6pm)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t 3.[T][✘] go to therapist"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t Your todo is as empty as your brain. Try again properly."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t Unknown command. Program it yourself or get a dictionary."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t Giving up already? Removed this:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t \t[E][✘] charITeach (at: 21 March 9am-6pm)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t Here are your procrastinated tasks:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t 1.[D][✘] CS2103 Project (by: Thursday 2359)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t 2.[T][✘] go to therapist"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t Bye. Please don\u0027t come back again or I\u0027ll call the cops."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "\t\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "NicholasCF": 53
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "deadline CS2103 Project /by Thursday 2359"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "event charITeach /at 21 March 9am-6pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "todo go to therapist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "todo"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "blah"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "NicholasCF": 9
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NicholasCF"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "NicholasCF": 34
    }
  }
]
