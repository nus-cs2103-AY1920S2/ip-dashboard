[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "test {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "TheElectricBlender": 28,
      "-": 21
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        dialog.setMinHeight(Region.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TheElectricBlender": 61
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import dukeexception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public Duke() throws IOException{"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        String filePath \u003d \"/Users/Simon/Desktop/Y2S2/CS2103T/duke/src/main/java/duke.txt\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            ui.displayLoadError();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        ui.displayIntro();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                String fullCommand \u003d ui.readInput();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                Command c \u003d Parser.parseCommand(fullCommand);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                ui.displayError(e.getMessage());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                ui.displaySaveError();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    protected String getResponse(String input) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        // Create stream to hold the output"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        PrintStream printStream \u003d new PrintStream(baos);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        // Saving old System.out"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        PrintStream old \u003d System.out;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        // Telling java to use special stream"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        System.setOut(printStream);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            Command c \u003d Parser.parseCommand(input);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            System.out.flush();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            System.setOut(old);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            ui.displayError(e.getMessage());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            ui.displaySaveError();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            return baos.toString();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public static void main(String[] args) throws IOException{"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "TheElectricBlender": 103,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TheElectricBlender": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import java.util.concurrent.TimeUnit;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public Main() throws IOException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public void stop() throws Exception {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        TimeUnit.MILLISECONDS.sleep(50);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TheElectricBlender": 38
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                DialogBox.getDukeDialog(ui.displayIntro(), dukeImage)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        );"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        );"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        if (response.equals(\"Bye nerd. Hope to see you again soon!\\n\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            new Thread(() -\u003e {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                    Thread.sleep(500);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                    ; // handling here"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                } finally {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                    Platform.exit();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            }).start();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TheElectricBlender": 67
    }
  },
  {
    "path": "src/main/java/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import storage.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import task.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import ui.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": " * Represents addition of task into the task list. A \u003ccode\u003eAddCommand\u003c/code\u003e object corresponds to when a task is"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": " * added e.g. \u003ccode\u003eTask\u003c/code\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    protected Task task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * Executes the command, adding the task to the task list and also updates UI and storage file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * If storage file invalid, exception thrown and error message is returned."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * @param taskList task list to be updated"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * @param ui User interface displayed"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * @param storage Save file to be updated"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * @throws IOException If storage file not found"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        ui.displayAddedTask(task, taskList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        storage.save(taskList);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * Returns whether it is an exit command"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * @return The result of whether this command causes an exit."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TheElectricBlender": 42
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import storage.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import task.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import ui.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": " * Represents the command that is to be executed. A \u003ccode\u003eCommand\u003c/code\u003e object corresponds to the"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": " * command that is to be executed."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * If storage file invalid, exception thrown and error message is returned."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * @param taskList task list to be updated"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * @param ui User interface displayed"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * @param storage Save file to be updated"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * @throws IOException If storage file not found"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws IOException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * Returns whether it is an exit command"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * @return The result of whether this command causes an exit."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TheElectricBlender": 29
    }
  },
  {
    "path": "src/main/java/command/DeleteAllCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "public class DeleteAllCommand extends Command{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public DeleteAllCommand() {}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        taskList.deleteAll();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        ui.displayDeleteAllTask();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        storage.save(taskList);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TheElectricBlender": 23
    }
  },
  {
    "path": "src/main/java/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import storage.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import task.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import ui.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": " * Represents a command where done is called which changes the boolean isCheck value. A \u003ccode\u003eDoneCommand\u003c/code\u003e corresponds"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": " * to when a task is complete with id of e.g. \u003ccode\u003e2\u003c/code\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    protected int id;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public DeleteCommand(int id) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * Executes the command, adding the task to the task list and also updates UI and storage file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * If storage file invalid, exception thrown and error message is returned."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * @param taskList task list to be updated"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * @param ui User interface displayed"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * @param storage Save file to be updated"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * @throws IOException If storage file not found"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        Task task \u003d taskList.get(id - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        taskList.delete(id - 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        ui.displayDeletedTask(task, taskList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        storage.save(taskList);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * Returns whether it is an exit command"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * @return The result of whether this command causes an exit."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TheElectricBlender": 44
    }
  },
  {
    "path": "src/main/java/command/DeleteSomeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "public class DeleteSomeCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    private ArrayList\u003cInteger\u003e idOfTaskListToBeDeleted;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public DeleteSomeCommand(ArrayList idOfTaskListToBeDeleted) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        this.idOfTaskListToBeDeleted \u003d idOfTaskListToBeDeleted;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        taskList.deleteSome(idOfTaskListToBeDeleted);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        ui.displayDeleteSomeTask(taskList, idOfTaskListToBeDeleted);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        storage.save(taskList);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TheElectricBlender": 28
    }
  },
  {
    "path": "src/main/java/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import storage.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import task.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import ui.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": " * Represents the command when delete is called with the id of task as argument. A \u003ccode\u003eDeleteCommand\u003c/code\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": " * object represents the command when deleting the task with id e.g. \u003ccode\u003e5\u003c/code\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    protected int id;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public DoneCommand(int id) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        this.id \u003d id;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * Executes the command, adding the task to the task list and also updates UI and storage file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * If storage file invalid, exception thrown and error message is returned."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * @param taskList task list to be updated"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * @param ui User interface displayed"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * @param storage Save file to be updated"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * @throws IOException If storage file not found"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        taskList.get(id - 1).setCheck();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        ui.displayDoneTask(taskList.get(id - 1));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        storage.save(taskList);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * Returns whether it is an exit command"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * @return The result of whether this command causes an exit."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TheElectricBlender": 42
    }
  },
  {
    "path": "src/main/java/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import storage.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import task.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import ui.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": " * Represents a command to exit the program. A \u003ccode\u003eExitCommand\u003c/code\u003e object corresponds to the command when"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": " * exiting the program."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * Returns whether it is an exit command"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * @return The result of whether this command causes an exit."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * Executes the command, exiting the program."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * If storage file invalid, exception thrown and error message is returned."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * @param taskList task list to be updated"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * @param ui User interface displayed"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * @param storage Save file to be updated"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * @throws IOException If storage file not found"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        ui.displayBye();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TheElectricBlender": 35
    }
  },
  {
    "path": "src/main/java/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    protected String keyword;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        ui.displayTasks(taskList.find(keyword));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TheElectricBlender": 25
    }
  },
  {
    "path": "src/main/java/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import storage.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import task.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import ui.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        ui.displayTasks(taskList);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TheElectricBlender": 19
    }
  },
  {
    "path": "src/main/java/dukeexception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "package dukeexception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TheElectricBlender": 8
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import command.DeleteAllCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import command.DeleteSomeCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import command.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import command.ExitCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import command.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import command.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import dukeexception.DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": " * Represents a Parser class which parses the command and makes sense of the input string into commands."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * Method to return if the string is actually an integer"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * @param string input string"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     * @return boolean to determine if string is numeric"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public static boolean isNumeric(String string) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        if (string \u003d\u003d null) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            int value \u003d Integer.parseInt(string);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public static Command parseCommand(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        String[] split \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        String first \u003d split[0];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        switch (first) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            int doneId \u003d Integer.parseInt(split[1]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            return new DoneCommand(doneId);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        // 3 cases, delete 2, delete all, delete 1 3 5 7"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            if (isNumeric(split[1])) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                int deleteId \u003d Integer.parseInt(split[1]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                return new DeleteCommand(deleteId);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            } else if (split[1].equals(\"all\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                return new DeleteAllCommand();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                ArrayList\u003cInteger\u003e idOfTaskListToBeDeleted \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                String stringOfNums \u003d split[1];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                String[] stringArrayOfNums \u003d stringOfNums.split(\" \");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                System.out.println(stringArrayOfNums.length);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                for (String s : stringArrayOfNums) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                    int num \u003d Integer.parseInt(s);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                    idOfTaskListToBeDeleted.add(num);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                // reverse order of deletion"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                Collections.sort(idOfTaskListToBeDeleted, Collections.reverseOrder());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                return new DeleteSomeCommand(idOfTaskListToBeDeleted);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        case \"event\": // event some meeting /at 2020-01-01"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            if (split.length \u003c 2) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                String[] splitTaskName \u003d split[1].split(\"/\"); // to obtain command when splitting"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                String eventDescription \u003d splitTaskName[0];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                String[] splitTaskName2 \u003d splitTaskName[1].split(\" \", 2); // to obtain date when splitting"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                String eventDate \u003d splitTaskName2[1];"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                return new AddCommand(new Event(eventDescription, eventDate));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            if (split.length \u003c 2) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                String[] splitTaskName3 \u003d split[1].split(\"/\"); // to obtain command when splitting"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                String deadlineDescription \u003d splitTaskName3[0];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                String[] splitTaskName4 \u003d splitTaskName3[1].split(\" \", 2); // to obtain date when splitting"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                String deadlineDate \u003d splitTaskName4[1];"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                return new AddCommand(new Deadline(deadlineDescription, deadlineDate));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            if (split.length \u003c 2) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                return new AddCommand(new Todo(split[1]));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            String keyword \u003d split[1];"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            return new FindCommand(keyword);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TheElectricBlender": 116
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    // copy file into TaskList"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws IOException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            String nextLine \u003d s.nextLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            String[] split \u003d nextLine.split(\"/\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            String indicator \u003d split[0];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            switch (indicator) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                Deadline deadline \u003d new Deadline(split[2], split[3]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                if (split[1].equals(\"Y\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                    deadline.setCheck();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                tasks.add(deadline);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                Event event \u003d new Event(split[2], split[3]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                if (split[1].equals(\"Y\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                    event.setCheck();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                tasks.add(event);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                Todo todo \u003d new Todo(split[2]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                if (split[1].equals(\"Y\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                    todo.setCheck();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                tasks.add(todo);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public void save(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        for (Task t : taskList.tasks) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            fw.write(t.toStringTxt() + System.lineSeparator());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TheElectricBlender": 72
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public Deadline(String command, String date) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        this.date \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    // e.g. D/Y/return book/June 5th"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public String toStringTxt() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        return \"D/\" + super.getIcon() + \"/\" + command + \"/\" + date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" +  date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TheElectricBlender": 23
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public Event(String command, String date) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        this.date \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public String toStringTxt() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        return \"E/\" + super.getIcon() + \"/\" + command + \"/\" + date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TheElectricBlender": 24
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    protected boolean check;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public Task(String command) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        this.check \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public String getIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        return (check ? \"Y\" : \"N\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public void setCheck() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        this.check \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public abstract String toStringTxt();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        return \"[\" + this.getIcon() + \"] \" + command;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TheElectricBlender": 26
    }
  },
  {
    "path": "src/main/java/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public Task get(int id) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        return tasks.get(id);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public void delete(int id) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        tasks.remove(id);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public void deleteAll() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        tasks.clear();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public void deleteSome(ArrayList\u003cInteger\u003e idOfTaskListToBeDeleted) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        for (int i : idOfTaskListToBeDeleted) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            tasks.remove(i - 1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public TaskList find(String keyword) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        ArrayList\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            if (t.command.contains(keyword)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                newList.add(t);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        return new TaskList(newList);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TheElectricBlender": 52
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public Todo(String command) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public String toStringTxt() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        return \"T/\" + super.getIcon() + \"/\" + command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TheElectricBlender": 18
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        System.out.println(\"______________________________________________________________\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public String displayIntro() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        String hi \u003d \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        return hi;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public String readInput() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public void displayError(String error) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        System.out.println(error);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public void displaySaveError() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        System.out.println(\"File not saved.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public void displayLoadError() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        System.out.println(\"File not found.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public void displayDoneTask(Task task) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + task.toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public void displayAddedTask(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        int size \u003d taskList.getSize();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        assert size \u003e 0 : \"Size cannot be less than 0!\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + task.toString() + \"\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                + \"Now you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public void displayDeletedTask(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        int size \u003d taskList.getSize();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        assert size \u003e 0 : \"Size cannot be less than 0!\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + task.toString() + \"\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                + \"Now you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public void displayDeleteAllTask() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve deleted all tasks. Don\u0027t come crying later!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public void displayDeleteSomeTask(TaskList taskList, ArrayList\u003cInteger\u003e idOfTaskListToBeDeleted) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        int size \u003d taskList.getSize();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        String string \u003d \"\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        for (int i : idOfTaskListToBeDeleted) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            string +\u003d (i + \", \");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed these tasks:\\n\" + string + \"\\n\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                + \"Now you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public void displayTasks(TaskList taskList) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        System.out.print(\"Here are your remaining tasks:\\n\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        for (Task t: taskList.tasks) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            int index \u003d taskList.tasks.indexOf(t) + 1;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            //assert index \u003c 0 : \"Index cannot be less than 0!\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            System.out.println(\"\" + index + \".\" + t.toString());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public void displayBye() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        System.out.print(\"Bye nerd. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TheElectricBlender": 88
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "TheElectricBlender": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "TheElectricBlender": 19
    }
  },
  {
    "path": "src/test/java/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public void testEvent() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        Task event \u003d new Event(\"IHG\", \"2020-02-02\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        String expectedText \u003d \"E/N/IHG/2020-02-02\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        String actualText \u003d event.toStringTxt();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        assertEquals(expectedText, actualText);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        String expectedText2 \u003d \"[E][N] IHG (at: Feb 2 2020)\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        String actualText2 \u003d event.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        assertEquals(expectedText2, actualText2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TheElectricBlender": 19
    }
  },
  {
    "path": "src/test/java/task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    public void testTodo() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        Task todo \u003d new Todo(\"Task\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        String expectedText \u003d \"[T][N] Task\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        String actualText \u003d todo.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        assertEquals(expectedText, actualText);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        String expectedText2 \u003d \"T/N/Task\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        String actualText2 \u003d todo.toStringTxt();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "        assertEquals(expectedText2, actualText2);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TheElectricBlender": 18
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "[T][N] borrow book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "[D][N] return book  (by: Jan 1 2020)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "[E][N] project meeting  (at: Jan 2 2020)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "Now you have 3 tasks in the list."
      }
    ],
    "authorContributionMap": {
      "TheElectricBlender": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "deadline return book /by 2020-01-01"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "event project meeting /at 2020-01-02"
      }
    ],
    "authorContributionMap": {
      "TheElectricBlender": 3
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TheElectricBlender"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "TheElectricBlender": 21
    }
  }
]
