[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "test {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Guofeng-Tang": 25,
      "-": 22
    }
  },
  {
    "path": "src/main/java/seedu/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * TODO."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * @param text TODO."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * @param img TODO."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * @return TODO."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * TODO."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * @param text TODO."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * @param img TODO."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * @return TODO."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Guofeng-Tang": 75
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.exception.DukeIoException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": " * A Personal Assistant Chatbot that helps a person to keep track of various things."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * Construct a chatbot instance with saved data at default path."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        String homeDirectory \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        Path storageFilePath \u003d Paths.get("
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                homeDirectory,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                \"code\","
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                \"duke\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                \"data\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                \"duke.txt\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        );"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        storage \u003d new Storage(storageFilePath);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        } catch (DukeIoException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            ui.print(\"can\u0027t load file.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * Main method that instantiate an instance and invoke run method."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * @param args CLI arguments"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * Read in user command until exit command is fed."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        //noinspection InfiniteLoopStatement"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                ui.print(e.getMessage());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            response \u003d String.join(\"\\n\", ui.getLastResponse());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            response \u003d e.getLocalizedMessage();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Guofeng-Tang": 80,
      "-": 2
    }
  },
  {
    "path": "src/main/java/seedu/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Guofeng-Tang": 9
    }
  },
  {
    "path": "src/main/java/seedu/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Guofeng-Tang": 31
    }
  },
  {
    "path": "src/main/java/seedu/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Guofeng-Tang": 52
    }
  },
  {
    "path": "src/main/java/seedu/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.exception.DukeEmptyDescriptionException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.exception.DukeNoKeywordException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.exception.DukeWrongCommandException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "class Parser {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        String[] splitInput \u003d fullCommand.split(Pattern.quote(\" \"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        // empty line would output string array of size 1, where the element is empty string"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        String commandString \u003d splitInput[0];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        int selectedTaskIndex;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        Command toReturn \u003d null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            switch (Command.Type.valueOf(commandString)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            case bye:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                toReturn \u003d new ExitCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            case list:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                toReturn \u003d new ListCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            case done:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                isSplitInputLengthLargerThanOne(splitInput);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                selectedTaskIndex \u003d Integer.parseInt(splitInput[1]) - 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                toReturn \u003d new DoneCommand(selectedTaskIndex);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            case delete:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                isSplitInputLengthLargerThanOne(splitInput);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                selectedTaskIndex \u003d Integer.parseInt(splitInput[1]) - 1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                toReturn \u003d new DeleteCommand(selectedTaskIndex);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            case todo:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                isSplitInputLengthLargerThanOne(splitInput);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                String taskDescription \u003d fullCommand.substring(Command.Type.todo.getCommand().length()).strip();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                toReturn \u003d new AddCommand(Command.Type.todo, taskDescription);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            case find:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                isSplitInputLengthLargerThanOne(splitInput);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                String[] keywords \u003d fullCommand"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                        .substring(Command.Type.find.getCommand().length())"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                        .strip()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                        .split(Pattern.quote(\" \"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                toReturn \u003d new FindCommand(keywords);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            case deadline:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            case event:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                isSplitInputLengthLargerThanOne(splitInput);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                toReturn \u003d createDeadLineOrEventCommand(fullCommand, commandString);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            throw new DukeWrongCommandException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        return toReturn;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    private static void isSplitInputLengthLargerThanOne(String[] splitInput) throws DukeEmptyDescriptionException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        if (splitInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            throw new DukeEmptyDescriptionException(\"OOPS!!! The description of a task cannot be empty.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    private static Command createDeadLineOrEventCommand(String fullCommand, String commandString)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            throws DukeNoKeywordException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        Command.Type type \u003d Command.Type.valueOf(commandString);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        Command.Type keyword \u003d type \u003d\u003d Command.Type.deadline"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                ? Command.Type.deadline_by"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                : Command.Type.event_at;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        int keywordIndex \u003d fullCommand.indexOf(keyword.getCommand());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        if (keywordIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            throw new DukeNoKeywordException(\"OOPS!!! The description must contain a keyword.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        String taskDescription \u003d fullCommand.substring(type.getCommand().length(), keywordIndex).strip();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        String deadlineOrTime \u003d fullCommand.substring(keywordIndex + keyword.getCommand().length()).strip();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(deadlineOrTime);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        return new AddCommand(type, taskDescription, date);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Guofeng-Tang": 97
    }
  },
  {
    "path": "src/main/java/seedu/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.exception.DukeIoException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": " * Storage class that handles saving and loading TaskList data as text file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    private final Path filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    Storage(Path filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    List\u003cString\u003e load() throws DukeIoException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        if (!Files.exists(filePath)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            throw new DukeIoException(\"Path does not exists.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            return Files.readAllLines(filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            throw new DukeIoException(e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * Save given TaskList object as text file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * @param tasks TaskList object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * @throws DukeIoException If can\u0027t create directory or text file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public void save(TaskList tasks) throws DukeIoException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            if (!Files.exists(filePath)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                Files.createDirectories(filePath.getParent());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            List\u003cString\u003e lines \u003d tasks"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                    .getTasks()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                    .stream()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                    .map(Task::toStringForSaving)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                    .collect(Collectors.toList());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            Files.write(filePath, lines);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            throw new DukeIoException(e.getMessage());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Guofeng-Tang": 57
    }
  },
  {
    "path": "src/main/java/seedu/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": " * TaskList class that contains the task list. Supports operations to add/delete tasks in the list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    private final List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * Instantiate an TaskList object with no task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * Instantiate an TaskList object with tasks decoded from text file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * @param lines List of strings read from text file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public TaskList(List\u003cString\u003e lines) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        tasks \u003d lines.stream().map(TaskList::decode).collect(Collectors.toList());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    private static Task decode(String str) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        String[] splitInput \u003d str.split(Pattern.quote(Task.SEPERATOR));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        String taskType \u003d splitInput[0];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        boolean isDone \u003d splitInput[1].equals(Task.TRUE_SYMBOL);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        String taskDescription \u003d splitInput[2];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        LocalDate date;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        Task toReturn \u003d null;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        case Todo.TYPE_SYMBOL:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            toReturn \u003d new Todo(taskDescription);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        case Deadline.TYPE_SYMBOL:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            date \u003d LocalDate.parse(splitInput[3]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            toReturn \u003d new Deadline(taskDescription, date);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        case Event.TYPE_SYMBOL:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            date \u003d LocalDate.parse(splitInput[3]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            toReturn \u003d new Event(taskDescription, date);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            System.out.println(\"Failed to decode. Unknown task type.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        if (isDone \u0026\u0026 toReturn !\u003d null) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            toReturn.markAsDone();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        return toReturn;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    boolean isEmpty() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        return tasks.isEmpty();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    int size() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * Returns a Task object at specified index position."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * @param taskIndex Task object index, starting from 0."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * @return Task object at specified index position."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public Task get(int taskIndex) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        return tasks.get(taskIndex);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * Add a task object to the back of the task list."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * @param newTask Task object to be added."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public void add(Task newTask) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * Deletes a Task object at specified index position."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * @param taskIndex Task object index, starting from 0."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public void remove(int taskIndex) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        tasks.remove(taskIndex);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * Returns a TaskList object, which contains the tasks that matches with the given keyword."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * @param keywords Keywords to match."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * @return Immutable TaskList object."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public TaskList find(String[] keywords) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        TaskList viewToReturn \u003d new TaskList();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        Set\u003cTask\u003e taskSet \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            for (String keyword : keywords) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                if (task.getTaskDescription().contains(keyword) \u0026\u0026 !taskSet.contains(task)) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                    taskSet.add(task);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                    viewToReturn.add(task);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        return viewToReturn;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Guofeng-Tang": 132
    }
  },
  {
    "path": "src/main/java/seedu/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": " * UI class that deals with interactions with the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": " * Supports reading in user command and outputting response."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    private static final Scanner SC \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    private static final String HORIZONTAL_LINE \u003d \"------------------------------------------------------------\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    private static final String OUTPUT_INDENTATION \u003d \"    \";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    private static final String FORMAT_STRING_FOR_H_LINE \u003d"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            OUTPUT_INDENTATION + \"|%-\" + HORIZONTAL_LINE.length() + \"s|\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    private static final String FORMAT_STRING_FOR_CONTENT \u003d"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            OUTPUT_INDENTATION + \"|  %-\" + (HORIZONTAL_LINE.length() - 2) + \"s|\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    List\u003cString\u003e lastResponse;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public List\u003cString\u003e getLastResponse() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        return lastResponse;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    void print(String s) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        List\u003cString\u003e temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        temp.add(s);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        print(temp);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    void print(String ... strings) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        List\u003cString\u003e temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        for (String s : strings) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            temp.add(s);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        print(temp);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    void print(List\u003cString\u003e stringList) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        lastResponse \u003d stringList;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        System.out.println(String.format(FORMAT_STRING_FOR_H_LINE, HORIZONTAL_LINE));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        for (String s : stringList) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            System.out.println(String.format(FORMAT_STRING_FOR_CONTENT, s));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        System.out.println(String.format(FORMAT_STRING_FOR_H_LINE, HORIZONTAL_LINE));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    void greet() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        print(\"Hello! I\u0027m Alfred!\", \"How may I help you today?\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * Prints goodbye message."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public void bye() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        print(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * Prints the list of task given a TaskList object."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * @param tasks TaskList object to be printed."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public void printList(TaskList tasks) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            print(\"List is empty\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        List\u003cString\u003e outputStreamBuffer \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            String str \u003d tasks.get(i).toString();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            String newStr \u003d String.format(\"%d.%s\", i + 1, str);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            outputStreamBuffer.add(newStr);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        print(outputStreamBuffer);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * Given a TaskList, print the list of tasks with matched message."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * @param tasks TaskList object to be printed."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public void printMatchedTaskList(TaskList tasks) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            print(\"No tasks found.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        List\u003cString\u003e outputStreamBuffer \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        outputStreamBuffer.add(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            String str \u003d tasks.get(i).toString();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            String newStr \u003d String.format(\"%d.%s\", i + 1, str);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            outputStreamBuffer.add(newStr);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        print(outputStreamBuffer);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    String readCommand() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        return SC.nextLine();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * Prints response message after marking a task as done."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * @param tasks TaskList object that contains the selected task."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * @param selectedTask Task to be marked as done."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public void printDoneMessage(TaskList tasks, Task selectedTask) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        print(\"Nice! I\u0027ve marked this task as done: \","
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                \"  \" + selectedTask,"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                String.format(\"Now you have %d tasks in the list.\", tasks.size())"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        );"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * Prints response message after deleting a task."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * @param tasks TaskList object that contains the selected task."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * @param selectedTask Task to be deleted."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public void printDeleteMessage(TaskList tasks, Task selectedTask) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        print(\"Noted. I\u0027ve removed this task: \","
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                \"  \" + selectedTask,"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                String.format(\"Now you have %d tasks in the list.\", tasks.size())"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        );"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * Prints response message after adding given task to task list."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * @param tasks TaskList object to which given Task object will be added."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * @param newTask Task object to be added."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public void printAddMessage(TaskList tasks, Task newTask) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        print(\"Got it. I\u0027ve added this task: \","
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                \"  \" + newTask,"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                String.format(\"Now you have %d tasks in the list.\", tasks.size())"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        );"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Guofeng-Tang": 152
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.exception.DukeIoException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.task.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    private final Command.Type taskType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    private final String taskDescription;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    private final LocalDate date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * Constructor for AddCommand that return new Task of specified type when execute."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * @param taskType Type of task to create."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * @param taskDescription Description of task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * @param date Date of task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public AddCommand(Command.Type taskType, String taskDescription, LocalDate date) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * Constructor for AddCommand return new To_do task when execute."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * @param taskType Type of task to create."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     * @param taskDescription Description of task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public AddCommand(Command.Type taskType, String taskDescription) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        // TODO: catch exception when type is deadline or event but date not given"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        this(taskType, taskDescription, null);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeIoException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        Task newTask \u003d null;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        case todo:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            newTask \u003d new Todo(taskDescription);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        case deadline:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            newTask \u003d new Deadline(taskDescription, date);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        case event:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            newTask \u003d new Event(taskDescription, date);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        ui.printAddMessage(tasks, newTask);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Guofeng-Tang": 66
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.exception.DukeIoException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeIoException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public enum Type {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        bye(\"bye\"),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        list(\"list\"),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        done(\"done\"),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        todo(\"todo\"),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        delete(\"delete\"),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        find(\"find\"),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        deadline(\"deadline\"),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        deadline_by(\"/by\"),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        event(\"event\"),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        event_at(\"/at\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        private final String command;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        Type(String command) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            this.command \u003d command;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        public String getCommand() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            return command;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Guofeng-Tang": 36
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.exception.DukeIoException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    private final int selectedTaskIndex;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public DeleteCommand(int selectedTaskIndex) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        this.selectedTaskIndex \u003d selectedTaskIndex;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeIoException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        Task selectedTask \u003d tasks.get(selectedTaskIndex);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        tasks.remove(selectedTaskIndex);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        ui.printDeleteMessage(tasks, selectedTask);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Guofeng-Tang": 24
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.exception.DukeIoException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    private final int selectedTaskIndex;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public DoneCommand(int selectedTaskIndex) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        this.selectedTaskIndex \u003d selectedTaskIndex;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeIoException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        Task selectedTask \u003d tasks.get(selectedTaskIndex);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        selectedTask.markAsDone();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        ui.printDoneMessage(tasks, selectedTask);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Guofeng-Tang": 24
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        ui.bye();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Guofeng-Tang": 13
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.exception.DukeIoException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    private final String[] keywords;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public FindCommand(String[] keywords) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        this.keywords \u003d keywords;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeIoException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        TaskList matchedTasks \u003d tasks.find(keywords);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        ui.printMatchedTaskList(matchedTasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Guofeng-Tang": 21
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import seedu.duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        ui.printList(tasks);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Guofeng-Tang": 13
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/DukeEmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "public class DukeEmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public DukeEmptyDescriptionException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Guofeng-Tang": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Guofeng-Tang": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/DukeIoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "public class DukeIoException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public DukeIoException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Guofeng-Tang": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/DukeNoKeywordException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "public class DukeNoKeywordException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public DukeNoKeywordException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Guofeng-Tang": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/exception/DukeWrongCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "package seedu.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "public class DukeWrongCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public DukeWrongCommandException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Guofeng-Tang": 8
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public static final String TYPE_SYMBOL \u003d \"D\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public Deadline(String taskDescription, LocalDate date) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        super(taskDescription);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public String toStringForSaving() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        return TYPE_SYMBOL + Task.SEPERATOR"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                + (isDone ? Task.TRUE_SYMBOL : Task.FALSE_SYMBOL) + Task.SEPERATOR"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                + taskDescription + Task.SEPERATOR"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                + date;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        return String.format(\"[%s]%s (by: %s)\","
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                TYPE_SYMBOL,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                super.toString(),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Guofeng-Tang": 31
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public static final String TYPE_SYMBOL \u003d \"E\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public Event(String taskDescription, LocalDate date) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        super(taskDescription);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public String toStringForSaving() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        return TYPE_SYMBOL + Task.SEPERATOR"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                + (isDone ? TRUE_SYMBOL : FALSE_SYMBOL) + Task.SEPERATOR"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                + taskDescription + Task.SEPERATOR"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                + date;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        return String.format(\"[%s]%s (at: %s)\","
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                TYPE_SYMBOL,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                super.toString(),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Guofeng-Tang": 31
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public static final String SEPERATOR \u003d \" | \";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public static final String TRUE_SYMBOL \u003d \"O\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    protected static final String FALSE_SYMBOL \u003d \"X\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    protected String taskDescription;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    Task(String taskDescription) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public String getTaskDescription() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        return taskDescription;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public abstract String toStringForSaving();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        return String.format(\"[%s] %s\", (isDone ? TRUE_SYMBOL : FALSE_SYMBOL), taskDescription);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Guofeng-Tang": 31
    }
  },
  {
    "path": "src/main/java/seedu/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "package seedu.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public static final String TYPE_SYMBOL \u003d \"T\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public Todo(String taskDescription) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        super(taskDescription);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public String toStringForSaving() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        return TYPE_SYMBOL + Task.SEPERATOR"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                + (isDone ? TRUE_SYMBOL : FALSE_SYMBOL) + Task.SEPERATOR"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                + taskDescription;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        return String.format(\"[%s]%s\", TYPE_SYMBOL, super.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Guofeng-Tang": 22
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Guofeng-Tang": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"seedu.duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Guofeng-Tang": 19
    }
  },
  {
    "path": "src/test/java/seedu/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    private List\u003cString\u003e list;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    void init() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        list.add(\"T | O | borrow book\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        list.add(\"D | X | return book | 2000-01-02\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        list.add(\"E | O | project meeting | 2001-02-03\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        list.add(\"D | X | do homework | 2002-03-04\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        taskList \u003d new TaskList(list);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    void isEmpty() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        assertFalse(taskList.isEmpty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        assertTrue(taskList.isEmpty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    void size() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        assertEquals(4, taskList.size());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        assertEquals(0, taskList.size());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    void remove() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        assertEquals(4, taskList.size());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        taskList.remove(0);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "        assertEquals(3, taskList.size());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Guofeng-Tang": 50
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |------------------------------------------------------------|"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |  Hello! I\u0027m Alfred!                                        |"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |  How may I help you today?                                 |"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |------------------------------------------------------------|"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |------------------------------------------------------------|"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |  1.[T][O] borrow book                                      |"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |  2.[D][X] return book (by: Jan 2 2000)                     |"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |  3.[E][O] project meeting (at: Feb 3 2001)                 |"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |  4.[D][X] do homework (by: Mar 4 2002)                     |"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |------------------------------------------------------------|"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |------------------------------------------------------------|"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |  Got it. I\u0027ve added this task:                             |"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |    [T][X] borrow book                                      |"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |  Now you have 5 tasks in the list.                         |"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |------------------------------------------------------------|"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |------------------------------------------------------------|"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |  1.[T][O] borrow book                                      |"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |  2.[D][X] return book (by: Jan 2 2000)                     |"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |  3.[E][O] project meeting (at: Feb 3 2001)                 |"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |  4.[D][X] do homework (by: Mar 4 2002)                     |"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |  5.[T][X] borrow book                                      |"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |------------------------------------------------------------|"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |------------------------------------------------------------|"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |  Got it. I\u0027ve added this task:                             |"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |    [D][X] return book (by: Jan 2 2000)                     |"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |  Now you have 6 tasks in the list.                         |"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |------------------------------------------------------------|"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |------------------------------------------------------------|"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |  Got it. I\u0027ve added this task:                             |"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |    [E][X] project meeting (at: Feb 3 2001)                 |"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |  Now you have 7 tasks in the list.                         |"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |------------------------------------------------------------|"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |------------------------------------------------------------|"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |  Got it. I\u0027ve added this task:                             |"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |    [D][X] do homework (by: Mar 4 2002)                     |"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |  Now you have 8 tasks in the list.                         |"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |------------------------------------------------------------|"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |------------------------------------------------------------|"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |  Nice! I\u0027ve marked this task as done:                      |"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |    [T][O] borrow book                                      |"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |  Now you have 8 tasks in the list.                         |"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |------------------------------------------------------------|"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |------------------------------------------------------------|"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |  Nice! I\u0027ve marked this task as done:                      |"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |    [E][O] project meeting (at: Feb 3 2001)                 |"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |  Now you have 8 tasks in the list.                         |"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |------------------------------------------------------------|"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |------------------------------------------------------------|"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |  OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(   |"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |------------------------------------------------------------|"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |------------------------------------------------------------|"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |  1.[T][O] borrow book                                      |"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |  2.[D][X] return book (by: Jan 2 2000)                     |"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |  3.[E][O] project meeting (at: Feb 3 2001)                 |"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |  4.[D][X] do homework (by: Mar 4 2002)                     |"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |  5.[T][X] borrow book                                      |"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |  6.[D][X] return book (by: Jan 2 2000)                     |"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |  7.[E][X] project meeting (at: Feb 3 2001)                 |"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |  8.[D][X] do homework (by: Mar 4 2002)                     |"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |------------------------------------------------------------|"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |------------------------------------------------------------|"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |  OOPS!!! The description of a task cannot be empty.        |"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |------------------------------------------------------------|"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |------------------------------------------------------------|"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |  OOPS!!! The description of a task cannot be empty.        |"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |------------------------------------------------------------|"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |------------------------------------------------------------|"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |  OOPS!!! The description of a task cannot be empty.        |"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |------------------------------------------------------------|"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |------------------------------------------------------------|"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |  OOPS!!! The description must contain a keyword.           |"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |------------------------------------------------------------|"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |------------------------------------------------------------|"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |  OOPS!!! The description must contain a keyword.           |"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |------------------------------------------------------------|"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |------------------------------------------------------------|"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |  Bye. Hope to see you again soon!                          |"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    |------------------------------------------------------------|"
      }
    ],
    "authorContributionMap": {
      "Guofeng-Tang": 78
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "deadline return book /by 2000-01-02"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "event project meeting /at 2001-02-03"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "deadline do homework /by 2002-03-04"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "blah blah"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "todo"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "event"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "event something something"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "deadline something something"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Guofeng-Tang": 16
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/seedu/duke/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "java -classpath ../bin seedu.duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Guofeng-Tang"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Guofeng-Tang": 34
    }
  }
]
