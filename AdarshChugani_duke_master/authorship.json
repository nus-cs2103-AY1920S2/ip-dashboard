[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.8\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 22,
      "-": 21
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "[T][N] learn java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "[D][Y] CS2103 quiz 2 (by: 26-01-2020 2359)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "[D][N] CS2103 project (by: 28-01-2020 2359)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "[E][N] Team Meeting (at: Monday 2-4pm)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "[E][Y] gathering (at: 25 Jan 2019 5pm)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "[D][N] read notes (by: 29-01-2020 1400)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "[D][Y] AI quiz (by: 27-01-2020 0000)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "[E][N] lunch (at: 13 Feb 2pm)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "[D][N] revise for CS2103 (by: 30-01-2020 0000)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "[D][N] revise for CS3243 (by: 27-01-2020 0910)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "[D][N] test bugs (by: 27-01-2020 2000)"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 11
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    protected LocalDate dueDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    protected LocalTime timing;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Constructor for Deadline Class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param description Deadline description."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param by          Due date for the deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        String[] info \u003d by.split(\" \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        this.dueDate \u003d LocalDate.parse(info[0]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        this.timing \u003d LocalTime.parse(\"0000\", DateTimeFormatter.ofPattern(\"HHmm\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        if (info.length \u003e 1) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            timing \u003d LocalTime.parse(info[1], DateTimeFormatter.ofPattern(\"HHmm\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + dueDate.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"))"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                + \" \" + timing.format(DateTimeFormatter.ofPattern(\"HHmm\")) + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 33
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            //this.setPadding(new Insets(100, 100, 100, 100));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        dialog.setMinHeight(Region.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Returns the User\u0027s Dialogbox."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param text User input."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param img visual representation of the User."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @return the dialogbox belonging to the User."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Returns the Duke\u0027s Dialogbox."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param text dialog spoken by the Duke."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param img image of the Duke."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @return the dialogbox beonging to Duke."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 77
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private Gui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Constructor for the Duke Class."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        String filepath \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        ui \u003d new Gui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        //ui.printStartUp();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            tasks \u003d new TaskList(storage.loadData());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /*public static void main(String[] args) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Runs the code for the Duke program."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String getResponse(String in) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        Parser parser \u003d new Parser(in);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        if (parser.getCommand().equals(\"bye\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            response \u003d (ui.terminateGui());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        } else if (parser.getCommand().equals(\"list\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            response \u003d (ui.printOutTasks(tasks));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        } else if (parser.getCommand().equals(\"delete\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                response \u003d ui.printOutDeleted(tasks, parser.getIndex() - 1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                tasks.removeTask(parser.getIndex() - 1);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                //return toReturn;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                response \u003d e.toString();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                storage.saveData(tasks);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                response +\u003d (\"\\nAn error occurred while saving, please try again!\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        } else if (parser.getCommand().equals(\"done\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                tasks.getTask(parser.getIndex() - 1).doTask();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                response \u003d (ui.printOutDoneTask(tasks, parser.getIndex() - 1));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                response \u003d e.toString();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                storage.saveData(tasks);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                response +\u003d (\"\\nAn error occurred while saving, please try again!\\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        } else if (parser.getCommand().equals(\"find\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                response \u003d (ui.printOutFound(tasks.getMatches(parser.getDescription())));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                response \u003d e.toString();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                if (!((parser.getCommand().equals(\"todo\")) || parser.getCommand().equals(\"deadline\")"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                        || parser.getCommand().equals(\"event\"))) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                    throw new DukeException(\"I\u0027m sorry, but I do not know what that means :-(\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                if (parser.getCommand().equals(\"event\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                    tasks.newEvent(parser.getDescription(), parser.getTiming());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                } else if (parser.getCommand().equals(\"deadline\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                        tasks.newDeadline(parser.getDescription(), parser.getTiming());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                    } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                        throw new DukeException(\"Invalid date format for deadline used! \""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                                + \"Please re-try using the date format \u0027yyyy-mm-dd HHMM\u0027\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                } else if (parser.getCommand().equals(\"todo\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                    tasks.newToDo(parser.getDescription());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                response \u003d (ui.printOutAdded(tasks));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                    storage.saveData(tasks);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                    response +\u003d (\"\\nAn error occurred while saving, please try again!\\n\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                response \u003d e.toString();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return (response);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 104,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    protected String error;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Constructor for the DukeException Class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param error Description of Error."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        this.error \u003d error;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return (\":( OOPS!!! \" + error);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 20
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    protected String timing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Constructor for the Event Class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param description Event description."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param timing      Timing at which the Event occurs."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public Event(String description, String timing) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + timing + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 19
    }
  },
  {
    "path": "src/main/java/Gui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "public class Gui {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Message displayed at startup of Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String printStartUp() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return (\"Hello, I\u0027m Duke\\nWhat can I do for you?\\n\\n\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Message displayed at termination of Duke."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String terminateGui() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return (\"Bye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Message displayed when file cannot be read."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String showLoadingError() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return (\"File could not be read!\\n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Prints out all tasks in the TaskList."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param listOfTasks List of all saved tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String printOutTasks(TaskList listOfTasks) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        String toReturn \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        for (Task task : listOfTasks.getTaskList()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            toReturn +\u003d String.format(\"%d.%s\\n\", i, task.toString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return toReturn;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Prints out updated message when a task is deleted from the TaskList."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param listOfTasks List of all saved tasks."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param deleteIndex Index at which the task is to be deleted."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @throws DukeException when index is out of bounds of the TaskList."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String printOutDeleted(TaskList listOfTasks, int deleteIndex) throws DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        if (deleteIndex \u003e\u003d listOfTasks.getNumOfTasks() || deleteIndex \u003c 0) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            throw new DukeException(\"Index out of bounds!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        String toReturn \u003d \"Noted. I\u0027ve removed this task:\\n \";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        toReturn +\u003d listOfTasks.getTask(deleteIndex);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        toReturn +\u003d String.format(\"\\nNow you have %s tasks in the list\\n\", listOfTasks.getNumOfTasks() - 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return toReturn;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Prints out updated message when task is marked as done in the TaskList."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param listOfTasks List of all saved tasks."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param index       Index at which the task is to be marked as done."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @throws DukeException when index is out of bounds of the TaskList."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String printOutDoneTask(TaskList listOfTasks, int index) throws DukeException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        if (index \u003e\u003d listOfTasks.getNumOfTasks() || index \u003c 0) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            throw new DukeException(\"Index out of bounds!\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        String toReturn \u003d \"Nice, I\u0027ve marked this task as done:\\n \";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        toReturn +\u003d (listOfTasks.getTask(index));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return toReturn;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Prints out updated message when a task is added to the TaskList."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param listOfTasks List of all saved tasks."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String printOutAdded(TaskList listOfTasks) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        String toReturn \u003d \"Got it, I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        if (listOfTasks.getNumOfTasks() \u003c 2) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            toReturn +\u003d \"Now you have 1 task in the list.\\n\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            toReturn +\u003d String.format(\"Now you have %d tasks in the list.\\n\", listOfTasks.getNumOfTasks());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return toReturn;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Prints out all the tasks which contain the specified keyword."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param listOfTasks ArrayList of tasks matching specified keyword."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @return listOfTasks."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String printOutFound(TaskList listOfTasks) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        String toReturn \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        for (Task task : listOfTasks.getTaskList()) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            toReturn +\u003d String.format(\"%d.%s\\n\", i, task);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return toReturn;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 107
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            stage.setTitle(\"Duke Application\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private Gui gui \u003d new Gui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(gui.printStartUp(), dukeImage));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 52
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private String[] inputs;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private String timing;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Constructor for Parser Class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public Parser(String input) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        this.inputs \u003d input.split(\" \");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        this.command \u003d inputs[0];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        this.description \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        this.timing \u003d \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        String splitter \u003d \" /\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            splitter \u003d \" /by \";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            splitter \u003d \" /at \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        String[] descriptionSplit;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        descriptionSplit \u003d input.split(splitter);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        if (descriptionSplit.length \u003e 1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            this.timing \u003d descriptionSplit[1];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        String splitterforDesc \u003d command;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        splitterforDesc +\u003d \" \";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        String[] finalDes \u003d descriptionSplit[0].split(splitterforDesc);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        if (finalDes.length \u003e 1) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            description \u003d finalDes[1];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Returns the command provided to the Parser."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @return command provided."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String getCommand() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Returns the description provided to the Parser."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @return description provided."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @throws DukeException when no description is provided."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String getDescription() throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            throw new DukeException(\"It appears that no description was provided for this \" + command + \"!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Returns the timing provided to the Parser."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @return timing provided in String format."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @throws DukeException when no timing is provided."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String getTiming() throws DukeException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        if (timing.equals(\"\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            throw new DukeException(\"It appears that no timing was provided for this \" + command + \"!\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return timing;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Returns the index number provided to the Parser."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @return Index number."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @throws DukeException when index number cannot be parsed as an integer."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public int getIndex() throws DukeException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            throw new DukeException(\"It appears that no index was provided for the command \" + command + \"!\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            return (Integer.parseInt(description));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            throw new DukeException(\"Index provided for command \" + command + \" is not an integer!\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 95
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private String path;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Constructor for the Storage class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param path Path to where the data is loaded from and stored to."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public Storage(String path) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Saves the information into the filepath location."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param listOfTasks List of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @throws IOException when file cannot be saved."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void saveData(TaskList listOfTasks) throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        FileWriter wr \u003d new FileWriter(path);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        wr.write(\"\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        wr.close();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        if (listOfTasks.getNumOfTasks() \u003c 1) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        FileWriter taskAdd \u003d new FileWriter(path, true);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        for (int i \u003d 0; i \u003c listOfTasks.getNumOfTasks(); i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                taskAdd.write(listOfTasks.getTask(i) + \"\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                System.out.println(\"Index out of bounds!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                //will never get triggered"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        taskAdd.close();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Loads the data from the filepath location."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @return ArrayList of tasks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @throws FileNotFoundException when the data cannot be read from the filepath."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public ArrayList\u003cTask\u003e loadData() throws FileNotFoundException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        File dataBank \u003d new File(path);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        Scanner reader \u003d new Scanner(dataBank);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        while (reader.hasNext()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            String task \u003d reader.nextLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            char initial \u003d task.charAt(1);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            char status \u003d task.charAt(4);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            String desc \u003d task.substring(7);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            if (initial \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                listOfTasks.add(new ToDo(desc));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            } else if (initial \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                String[] subStringy \u003d desc.split(\" \\\\(at: \");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                listOfTasks.add(new Event(subStringy[0], subStringy[1].substring(0, subStringy[1].length() - 1)));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            } else if (initial \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                String[] subStringy \u003d desc.split(\" \\\\(by: \");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                String day \u003d subStringy[1].substring(0, 2);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                String month \u003d subStringy[1].substring(3, 5);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                String year \u003d subStringy[1].substring(6, 10);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                String timing \u003d subStringy[1].substring(11, 15);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                String reString \u003d year + \"-\" + month + \"-\" + day + \" \" + timing;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                listOfTasks.add(new Deadline(subStringy[0], reString));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            if (status \u003d\u003d \u0027Y\u0027) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                listOfTasks.get(listOfTasks.size() - 1).doTask();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return listOfTasks;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 87
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Constructor for the Task class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Marks task as complete."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void doTask() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Returns status icon of task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @return Y if task is done, and N if not."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return (isDone ? \"Y\" : \"N\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Returns description of task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @return task description."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 45
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public ArrayList\u003cTask\u003e listOfTasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Constructor for TaskList class used for starting from an empty TaskList."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        this.listOfTasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Constructor for TaskList class used when loading from save."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param listOfTasks ArrayList of tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e listOfTasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        this.listOfTasks \u003d listOfTasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * returns TaskList size."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @return size of TaskList."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public int getNumOfTasks() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return listOfTasks.size();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Returns task in TaskList at index provided."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param index index number provided."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @return task at index."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @throws DukeException when index is out of bounds."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public Task getTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        if (index \u003e\u003d listOfTasks.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            throw new DukeException(\"Index out of bounds!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return listOfTasks.get(index);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Removes task from TaskList at index number provided."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param index index number provided."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void removeTask(int index) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        listOfTasks.remove(index);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Adds a todo task to the TaskList."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param desc description of todo provided."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void newToDo(String desc) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        listOfTasks.add(new ToDo(desc));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Adds an event task to the TaskList."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param desc   description of event provided."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param timing timing for the event provided."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void newEvent(String desc, String timing) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        listOfTasks.add(new Event(desc, timing));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Adds a deadline task to the TaskList."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param desc description of deadline provided."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param by   due date for the deadline."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void newDeadline(String desc, String by) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        listOfTasks.add(new Deadline(desc, by));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * returns the TaskList."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @return ArrayList of tasks."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return listOfTasks;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Returns an TaskList with all the tasks containing the keyword."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param keyword word specified by user to search all tasks for."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @return TaskList of all tasks containing the keyword."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public TaskList getMatches(String keyword) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        for (int i \u003d 0; i \u003c listOfTasks.size(); i++) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            String[] descSplit \u003d listOfTasks.get(i).getDescription().split(\" \");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            for (int j \u003d 0; j \u003c descSplit.length; j++) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                if (descSplit[j].equals(keyword)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                    matchingTasks.add(listOfTasks.get(i));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        TaskList tasks \u003d new TaskList(matchingTasks);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 113
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Constructor for the todo class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param description description of the todo task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 16
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Constructor for the Ui class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Message displayed at startup of Duke."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void printStartUp() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        System.out.println(\"Hello, I\u0027m Duke\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        System.out.println(\"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Message displayed at termination of Duke."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void terminateUi() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Message displayed when file cannot be read."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        System.out.println(\"File could not be read!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Prints out all tasks in the TaskList."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param listOfTasks List of all saved tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void printOutTasks(TaskList listOfTasks) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        for (Task task : listOfTasks.getTaskList()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            System.out.printf(\"%d.%s\\n\", i, task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Prints out updated message when a task is deleted from the TaskList."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param listOfTasks List of all saved tasks."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param deleteIndex Index at which the task is to be deleted."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @throws DukeException when index is out of bounds of the TaskList."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void printOutDeleted(TaskList listOfTasks, int deleteIndex) throws DukeException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        if (deleteIndex \u003e\u003d listOfTasks.getNumOfTasks() || deleteIndex \u003c 0) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            throw new DukeException(\"Index out of bounds!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        System.out.println(\" \" + listOfTasks.getTask(deleteIndex));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        System.out.printf(\"Now you have %s tasks in the list \\n\", listOfTasks.getNumOfTasks() - 1);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Prints out updated message when task is marked as done in the TaskList."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param listOfTasks List of all saved tasks."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param index       Index at which the task is to be marked as done."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @throws DukeException when index is out of bounds of the TaskList."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void printOutDoneTask(TaskList listOfTasks, int index) throws DukeException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        if (index \u003e\u003d listOfTasks.getNumOfTasks() || index \u003c 0) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            throw new DukeException(\"Index out of bounds!\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        System.out.println(\"Nice, I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        System.out.println(\" \" + listOfTasks.getTask(index));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Returns the input provided by user."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @return input provided."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String newInput() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return (sc.nextLine());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Prints out updated message when a task is added to the TaskList."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param listOfTasks List of all saved tasks."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void printOutAdded(TaskList listOfTasks) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        System.out.println(\"Got it, I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        if (listOfTasks.getNumOfTasks() \u003c 2) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            System.out.println(\"Now you have 1 task in the list.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            System.out.printf(\"Now you have %d tasks in the list.\\n\", listOfTasks.getNumOfTasks());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Prints out the list of tasks which match the keyword specified by user."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param listOfTasks Tasklist containing all the tasks that contain the keyword."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void printOutFound(TaskList listOfTasks) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        for (Task task : listOfTasks.getTaskList()) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            System.out.printf(\"%d.%s\\n\", i, task);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 119
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 19
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void getIndexTest() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        Parser p \u003d new Parser(\"done 2\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        Parser q \u003d new Parser(\"delete 3\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            Assertions.assertEquals(p.getIndex(), 2);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            Assertions.assertEquals(q.getIndex(), 3);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        catch (DukeException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            Assertions.fail();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void getCommandTest() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        Parser p \u003d new Parser(\"done 2\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        Parser q \u003d new Parser(\"delete 2\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        Parser r \u003d new Parser(\"deadline test /by 2020-01-28\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            Assertions.assertEquals(p.getCommand(), \"done\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            Assertions.assertEquals(q.getCommand(), \"delete\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            Assertions.assertEquals(r.getCommand(), \"deadline\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void getTimingTest() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        Parser p \u003d new Parser(\"deadline test /by 2020-01-28\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        Parser q \u003d new Parser(\"deadline test2 /by 2020-03-28 1800\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        Parser r \u003d new Parser(\"event test3 /at Monday 2pm\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            Assertions.assertEquals(p.getTiming(), \"2020-01-28\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            Assertions.assertEquals(q.getTiming(), \"2020-03-28 1800\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            Assertions.assertEquals(r.getTiming(), \"Monday 2pm\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        catch (DukeException e){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            Assertions.fail();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 46
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void getTaskListTest() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        ArrayList\u003cTask\u003e testList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        tasks.newToDo(\"Study for CS2103\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        tasks.newDeadline(\"Test1\", \"2020-09-17 0000\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        tasks.newEvent(\"Test 2\", \"today 2pm\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        testList.add(new ToDo(\"Study for CS2103\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        testList.add(new Deadline(\"Test1\", \"2020-09-17 0000\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        testList.add(new Event(\"Test 2\", \"today 2pm\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        Assertions.assertEquals(tasks.getTaskList().toString(), testList.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void sizeTest() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        tasks.newToDo(\"Study for CS2103\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        tasks.newDeadline(\"Test1\", \"2020-09-17 0000\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        tasks.newEvent(\"Test 2\", \"today 2pm\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        tasks.newToDo(\"test-3\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        Assertions.assertEquals(tasks.getNumOfTasks(), 4);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void getTaskTest() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        tasks.newToDo(\"Study for CS2103\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        tasks.newDeadline(\"Test1\", \"2020-09-17 0000\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        tasks.newEvent(\"Test 2\", \"today 2pm\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        tasks.newToDo(\"test-3\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        tasks.newDeadline(\"new deadline\", \"2020-01-28\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            Assertions.assertEquals(tasks.getTask(4).toString(), \"[D][N] new deadline (by: 28-01-2020 0000)\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        catch (DukeException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            Assertions.fail();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 49
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Hello, I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "  [T][N] Learn about Java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Now you have 1 task in the list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "  [D][N] Java quiz (by: Jan 26th)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "  [D][N] Individual project (by: Jan 23rd)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "  [E][N] CS2101 Tutorial (at: Thursday Jan 23rd 2-4pm)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "  [T][N] set up meeting for project"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "1.[T][N] Learn about Java"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "2.[D][N] Java quiz (by: Jan 26th)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "3.[D][N] Individual project (by: Jan 23rd)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "4.[E][N] CS2101 Tutorial (at: Thursday Jan 23rd 2-4pm)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "5.[T][N] set up meeting for project"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Nice, I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "  [T][Y] Learn about Java"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Nice, I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "  [D][Y] Individual project (by: Jan 23rd)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "1.[T][Y] Learn about Java"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "2.[D][N] Java quiz (by: Jan 26th)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "3.[D][Y] Individual project (by: Jan 23rd)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "4.[E][N] CS2101 Tutorial (at: Thursday Jan 23rd 2-4pm)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "5.[T][N] set up meeting for project"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "  [D][N] fix my life (by: ASAP!)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 38
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "todo Learn about Java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "deadline Java quiz /by Jan 26th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "deadline Individual project /by Jan 23rd"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "event CS2101 Tutorial /at Thursday Jan 23rd 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "todo set up meeting for project"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "deadline fix my life /by ASAP!"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 11
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "REM javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "dir /s /B ..\\src\\main\\java\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin @sources.txt"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ")"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 25
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "C:\\Users\\Adarsh\\Documents\\duke\\src\\main\\java\\Deadline.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "C:\\Users\\Adarsh\\Documents\\duke\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "C:\\Users\\Adarsh\\Documents\\duke\\src\\main\\java\\DukeException.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "C:\\Users\\Adarsh\\Documents\\duke\\src\\main\\java\\Event.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "C:\\Users\\Adarsh\\Documents\\duke\\src\\main\\java\\Task.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "C:\\Users\\Adarsh\\Documents\\duke\\src\\main\\java\\ToDo.java"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 6
    }
  }
]
