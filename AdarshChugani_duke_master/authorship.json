[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.8\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    archiveVersion \u003d \"0.5\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 30,
      "-": 21
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "[T][Y] learn java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "[D][N] CS2103 project (by: 01 Feb 2020 0000)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "[E][N] Team Meeting (at: now)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "[E][Y] gathering (at: 2020-01-09)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "[D][N] read notes (by: 29 Jan 2020 1400)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "[D][Y] AI quiz (by: 27 Jan 2020 0000)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "[E][N] lunch (at: 13 Feb 2pm)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "[D][Y] test bugs (by: 27 Jan 2020 2000)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "[E][N] Steamboat dinner (at: Bugis, 15 Mar 2020 8PM)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "[D][N] CS3243 Assignment (by: 16 Mar 2020 0000)"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 10
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "# User Guide for Duke Chatbot"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "## TABLE OF CONTENTS"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "1. [Introduction](#1-introduction)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "2. [Interacting with Duke](#2-interacting-with-duke)  "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    2.1. [General Guideline](#21-general-guideline)  "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    2.2. [Images](#22-images)  "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    2.3. [Sample Interaction with the Duke Application](#23-sample-interaction-with-the-duke-application)  "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "3. [Features](#3-features)  "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     3.1. [Add a todo task](#31-add-a-todo-task-todo)  "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     3.2. [Add an event task](#32-add-an-event-task-event)  "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     3.3. [Add a deadline task](#33-add-a-deadline-task-deadline)  "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     3.4. [List all tasks](#34-list-all-tasks-list)  "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     3.5. [Mark task as done](#35-mark-task-as-done-done)  "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     3.6. [Delete task](#36-delete-task-delete)  "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     3.7. [Find tasks using a keyword](#37-find-tasks-using-a-keyword-find)  "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     3.8. [Reschedule a deadline or event](#38-reschedule-a-deadline-or-event-snooze)  "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     3.9. [Exit Duke](#39-exit-duke-bye)  "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     3.10. [Storing Data](#310-storing-data)  "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "4. [Command Overview](#4-command-overview)  "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "5. [Acknowledgements](#5-acknowledgements)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Duke is a chatbot which assists in tracking tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "## 2. Interacting with Duke"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "### 2.1 General Guideline"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "When started up, Duke will introduce itself.  "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "After the introduction, the User may input any command, which Duke will try to execute.  "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Duke will then inform the User if their command was successfully executed.  "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Depending on whether or not the command was executed successfully, Duke will react differently."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "After informing the User if their command was successfully executed, Duke will wait for the User\u0027s next command.  "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Duke\u0027s image and dialog box are always on the left, while the User\u0027s image and dialog box are always on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "### 2.2 Images"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "As mentioned in Section 2.1, Duke will react differently based on whether or not the User\u0027s command was successfully executed. This is done by having a different image correspond to the various case.  "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Below are a list of possible images used in the Duke Application."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "#### Images used for the User:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "There is only one image used to represent the User.  "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "The image looks like this:  "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "\u003cimg src \u003d \"NewUser.png\" width \u003d \"100\"\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "#### Images used for the Duke:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "There are three possible images used to represent the Duke."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Firstly, there is a unique image that is only used during the first interaction with the User. It is used to introduce the Duke.  "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "The image looks like this:  "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "\u003cimg src \u003d \"IntroDuke.png\" width \u003d \"100\"\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Next, there is the image used when the Duke successfully carries out a command from the User.  "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "The image looks like this:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "\u003cimg src \u003d \"NewDuke.png\" width \u003d \"100\"\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Lastly, there is the image used when the Duke is unable to carry out a command from the User.  "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "The image looks like this:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "\u003cimg src \u003d \"Fail.png\" width \u003d \"100\"\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "### 2.3 Sample Interaction with the Duke Application"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Below is a sample interaction with the Duke Application.  "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "\u003cimg src \u003d \"Ui.png\" width \u003d \"350\"\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "## 3. Features"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "### 3.1 Add a todo task: `todo`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Adds a todo task to Duke."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Format: `todo DESCRIPTION`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "- `DESCRIPTION`: any sequence of ASCII printable characters (for reference, click [here](https://en.wikipedia.org/wiki/ASCII#Printable_characters))"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "**Example of usage:** "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "`todo CS2103 Quiz`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "```"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Got it, I\u0027ve added this task:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "[T][N] CS2103 Quiz"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Now you have 1 task in the list.  "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "```"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "### 3.2 Add an event task: `event`"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Adds an event task to Duke."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Format: `event DESCRIPTION /at DETAILS`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "- `DESCRIPTION`: any sequence of ASCII printable characters (for reference, click [here](https://en.wikipedia.org/wiki/ASCII#Printable_characters))"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "- `DETAILS`: any sequence of ASCII printable characters (for reference, click [here](https://en.wikipedia.org/wiki/ASCII#Printable_characters))"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "**Example of usage:** "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "`event Steamboat dinner /at Bugis, 15 Mar 2020 8PM`"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "```"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Got it, I\u0027ve added this task:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "[E][N] Steamboat dinner (at: Bugis, 15 Mar 2020 8PM)"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "```"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "### 3.3 Add a deadline task: `deadline`"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Adds a deadline task to Duke."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Format: `deadline DESCRIPTION /by DATE TIME`"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "- `DESCRIPTION`: any sequence of ASCII printable characters (for reference, click [here](https://en.wikipedia.org/wiki/ASCII#Printable_characters))"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "- `DATE`: yyyy-MM-dd"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "- `TIME`: HHmm (Time is optional. If no time is provided, it is assumed to be 0000)"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "**Example of usage:** "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "`deadline CS3243 Assigment /by 2020-02-19`"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "```"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Got it, I\u0027ve added this task:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "[D][N] CS3243 Assignment (by: 19 Feb 2020 0000)"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "```"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "### 3.4 List all tasks: `list`"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Lists out all the tasks saved in Duke."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "**Example of usage:** "
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "```"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "1. [T][N] CS2103 Quiz"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "2. [E][N] Steamboat dinner (at: Bugis, 15 Mar 2020 8PM)"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "3. [D][N] CS3243 Assignment (by: 19 Feb 2020 0000)"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "```"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "### 3.5 Mark task as done: `done`"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Marks a saved task as done. "
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Format: `done INDEX`"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "- `INDEX`: positive number corresponding to the desired task (can be obtained from the `list` command as seen [here](#34-list-all-tasks-list))"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "**Example of usage:** "
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "```"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Nice, I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "[T][Y] CS2103 Quiz"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "```"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "### 3.6 Delete task: `delete`"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Deletes saved task from Duke. "
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Format: `delete INDEX`"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "- `INDEX`: positive number corresponding to the desired task (can be obtained from the `list` command as seen [here](#34-list-all-tasks-list))"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "**Example of usage:** "
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "```"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "[T][Y] CS2103 Quiz"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "```"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "### 3.7 Find tasks using a keyword: `find`"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Lists out all tasks that contain a specific keyword.  "
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Note: keyword is case specific."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Format: `find KEYWORD`"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "- `KEYWORD`: any sequence of ASCII printable characters (for reference, click [here](https://en.wikipedia.org/wiki/ASCII#Printable_characters))"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "**Example of usage:** "
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "`find Assignment`"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "```"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "1. [D][N] CS3243 Assignment (by: 19 Feb 2020 0000) "
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "```"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "### 3.8 Reschedule a deadline or event: `snooze`"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Changes the date and timing for a deadline or the details for an event.  "
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Note: todo tasks cannot be snoozed."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Format: `snooze INDEX /to TASK_FORMAT`"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "- `INDEX`: positive number corresponding to the desired task (can be obtained from the `list` command as seen [here](#34-list-all-tasks-list))"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "- The format for `TASK_FORMAT` must be appropriate for the type of task being rescheduled."
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "  - Case 1: Rescheduled task is a deadline. "
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Format: `snooze INDEX /to DATE TIME`"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "(format details can be found [here](#32-add-an-event-task-event))"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    "
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "  - Case 2: Rescheduled task is an event. "
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Format: `snooze INDEX /to DETAILS` "
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "(format details can be found [here](#33-add-a-deadline-task-deadline))"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "**Example of usage:** "
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "`snooze 2 /to 2020-03-16`"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "```"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Got it, the updated deadline looks like:"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "[D][N] CS3243 Assignment (by: 16 Mar 2020 0000)"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "```"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "### 3.9 Exit Duke: `bye`"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Exits the Duke Application.  "
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "The Duke Application will close shortly after the command is entered.  "
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "The buffer betweeen the entering of the command and the closing of the program is approximately 1 second to ensure the User can see Duke\u0027s response."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "**Example of usage:**  "
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "**Expected outcome:**"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "```"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "```"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "### 3.10 Storing Data"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Data in duke is automatically saved onto the hard disk after the use of any command.  "
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "(Even when the command cannot be executed!) "
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "## 4. Command Overview"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "- Add a todo task: `todo DESCRIPTION`"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "- Add an event task: `event DESCRIPTION /at DETAILS`"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "- Add a deadline task: `deadline DESCRIPTION /by DATE TIME`"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "- List all tasks: `list`"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "- Mark task as done: `done INDEX`"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "- Delete task: `delete INDEX`"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "- Find: `find KEYWORD`"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "- Snooze: `snooze INDEX /to TASK_FORMAT` "
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "- Exit: `bye`"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "## 5. Acknowledgements"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Credit to:"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "- Egor Zhgun for creating Utya Duck (Used for all Duke and User images)"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 276,
      "-": 17
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "[T][N] learn java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "[E][N] Team Meeting (at: Monday 2-4pm)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "[D][N] read notes (by: 29-01-2020 1400)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "[E][Y] gathering (at: 25 Jan 2019 5pm)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "[D][Y] AI quiz (by: 27-01-2020 0000)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "[E][N] lunch (at: 13 Feb 2pm)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "[D][N] revise for CS3243 (by: 27-01-2020 0910)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "[D][Y] test bugs (by: 27-01-2020 2000)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "[T][N] make a new face"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "[D][N] die (by: 02-03-2020 0000)"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 10
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    protected LocalDate dueDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    protected LocalTime timing;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Constructor for Deadline Class."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param description Deadline description."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param by          Due date for the deadline."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        String[] info \u003d by.split(\" \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        this.dueDate \u003d LocalDate.parse(info[0]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        this.timing \u003d LocalTime.parse(\"0000\", DateTimeFormatter.ofPattern(\"HHmm\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        if (info.length \u003e 1) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            timing \u003d LocalTime.parse(info[1], DateTimeFormatter.ofPattern(\"HHmm\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void snooze(String by) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        String[] info \u003d by.split(\" \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            this.dueDate \u003d LocalDate.parse(info[0]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            this.timing \u003d LocalTime.parse(\"0000\", DateTimeFormatter.ofPattern(\"HHmm\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            throw new DukeException(\"Invalid date format for deadline used! \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                    + \"Please re-try using the date format \u0027yyyy-mm-dd HHMM\u0027\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        if (info.length \u003e 1) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            this.timing \u003d LocalTime.parse(info[1], DateTimeFormatter.ofPattern(\"HHmm\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        assert (dueDate !\u003d null) : \"There is no date provided for this deadline!\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        assert (timing !\u003d null) : \"This deadline has no timing assigned!\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + dueDate.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"))"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                + \" \" + timing.format(DateTimeFormatter.ofPattern(\"HHmm\")) + \")\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 52
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            //this.setPadding(new Insets(100, 100, 100, 100));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        dialog.setMinHeight(Region.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Returns the User\u0027s Dialogbox."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param text User input."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param img visual representation of the User."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @return the dialogbox belonging to the User."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Returns the Duke\u0027s Dialogbox."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param text dialog spoken by the Duke."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param img image of the Duke."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @return the dialogbox beonging to Duke."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 75
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private Gui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Constructor for the Duke Class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        String filepath \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        ui \u003d new Gui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        //ui.printStartUp();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            tasks \u003d new TaskList(storage.loadData());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        } catch (FileNotFoundException | ParseException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Runs the code for the Duke program."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String getResponse(String in) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        Parser parser \u003d new Parser(in);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        String toReturn \u003d parser.parseCommand(ui, tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            storage.saveData(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            toReturn +\u003d \"\\nAn error occurred while saving, please try again!\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        assert !(toReturn.equals(\"\")) : \"Duke\u0027s response is empty!\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return toReturn;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 39,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    protected String error;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Constructor for the DukeException Class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param error Description of Error."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        this.error \u003d error;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return (\":( OOPS!!! \" + error);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 20
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    protected String timing;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Constructor for the Event Class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param description Event description."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param timing      Timing at which the Event occurs."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public Event(String description, String timing) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void snooze(String by) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        this.timing \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        assert !(timing.equals(\"\")) : \"There is no timing provided for this event!\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + timing + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 25
    }
  },
  {
    "path": "src/main/java/Gui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "public class Gui {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Message displayed at startup of Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String printStartUp() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return (\"Hello, I\u0027m Duke\\nWhat can I do for you?\\n\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Message displayed at termination of Duke."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String terminateGui() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return (\"Bye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Message displayed when file cannot be read."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String showLoadingError() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return (\"File could not be read!\\n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Prints out all tasks in the TaskList."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param listOfTasks List of all saved tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String printOutTasks(TaskList listOfTasks) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        String toReturn \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        if (listOfTasks.getNumOfTasks() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            toReturn \u003d \"There are no tasks in your list!\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        for (Task task : listOfTasks.getTaskList()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            toReturn +\u003d String.format(\"%d. %s\\n\", i, task.toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return toReturn;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Prints out the task that has been snoozed."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param listOfTasks List of all saved tasks."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param index index number of snoozed task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param timing new timing of snoozed task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @return new task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @throws DukeException when new timing is incompatible with task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String printOutSnoozed(TaskList listOfTasks, int index, String timing) throws DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        String taskType \u003d \"deadline\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        if (listOfTasks.getTask(index) instanceof Event) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            taskType \u003d \"event\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        String toReturn \u003d \"Got it, The updated \";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        toReturn +\u003d taskType;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        toReturn +\u003d \" looks like:\\n\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        toReturn +\u003d listOfTasks.getTask(index);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return toReturn;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Prints out updated message when a task is deleted from the TaskList."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param listOfTasks List of all saved tasks."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param deleteIndex Index at which the task is to be deleted."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @throws DukeException when index is out of bounds of the TaskList."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String printOutDeleted(TaskList listOfTasks, int deleteIndex) throws DukeException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        if (deleteIndex \u003e\u003d listOfTasks.getNumOfTasks() || deleteIndex \u003c 0) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            throw new DukeException(\"Index out of bounds!\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        String toReturn \u003d \"Noted. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        toReturn +\u003d listOfTasks.getTask(deleteIndex);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        toReturn +\u003d String.format(\"\\nNow you have %s tasks in the list\\n\", listOfTasks.getNumOfTasks() - 1);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return toReturn;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Prints out updated message when task is marked as done in the TaskList."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param listOfTasks List of all saved tasks."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param index       Index at which the task is to be marked as done."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @throws DukeException when index is out of bounds of the TaskList."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String printOutDoneTask(TaskList listOfTasks, int index) throws DukeException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        if (index \u003e\u003d listOfTasks.getNumOfTasks() || index \u003c 0) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            throw new DukeException(\"Index out of bounds!\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        String toReturn \u003d \"Nice, I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        toReturn +\u003d (listOfTasks.getTask(index));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return toReturn;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Prints out updated message when a task is added to the TaskList."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param listOfTasks List of all saved tasks."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String printOutAdded(TaskList listOfTasks) throws DukeException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        String toReturn \u003d \"Got it, I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        int num \u003d listOfTasks.getNumOfTasks();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        toReturn +\u003d listOfTasks.getTask(num - 1);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        if (num \u003c 2) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            toReturn +\u003d \"\\nNow you have 1 task in the list.\\n\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            toReturn +\u003d String.format(\"\\nNow you have %d tasks in the list.\\n\", listOfTasks.getNumOfTasks());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return toReturn;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Prints out all the tasks which contain the specified keyword."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param listOfTasks ArrayList of tasks matching specified keyword."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @return listOfTasks."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String printOutFound(TaskList listOfTasks) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        String toReturn \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        if (listOfTasks.getNumOfTasks() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            toReturn \u003d \"There are no matching tasks in your list!\\n\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        for (Task task : listOfTasks.getTaskList()) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            toReturn +\u003d String.format(\"%d. %s\\n\", i, task);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return toReturn;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 137
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            stage.setTitle(\"Duke Application\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.util.Timer;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.util.TimerTask;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private Gui gui \u003d new Gui();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/NewUser.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/IntroDuke.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(gui.printStartUp(), dukeImage));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        if (response.substring(0, 2).equals(\":(\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Fail.png\"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/NewDuke.png\"));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        );"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        //@@author AdarshChugani-reused"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        //Reused from ElysiaTanZY with permission alongside some minor modifications"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        if (response.equals(\"Bye. Hope to see you again soon!\\n\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            new Timer().schedule(new TimerTask() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                public void run() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                    Platform.exit();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.exit(0);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            }, 1000);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        //@@author"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 62,
      "-": 11
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private String[] inputs;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private String timing;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Constructor for Parser Class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public Parser(String input) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        this.inputs \u003d input.split(\" \");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        this.command \u003d inputs[0];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        this.description \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        this.timing \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        String splitter \u003d \" /\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            splitter \u003d \" /by \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            splitter \u003d \" /at \";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        } else if (command.equals(\"snooze\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            splitter \u003d (\" /to \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        String[] descriptionSplit;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        descriptionSplit \u003d input.split(splitter);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        if (descriptionSplit.length \u003e 1) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            this.timing \u003d descriptionSplit[1];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        String splitterforDesc \u003d command;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        splitterforDesc +\u003d \" \";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        String[] finalDes \u003d descriptionSplit[0].split(splitterforDesc);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        if (finalDes.length \u003e 1) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            description \u003d finalDes[1];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Returns the command provided to the Parser."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @return command provided."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String getCommand() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Returns the description provided to the Parser."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @return description provided."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @throws DukeException when no description is provided."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String getDescription() throws DukeException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            throw new DukeException(\"It appears that no description was provided for this \" + command + \"!\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Returns the timing provided to the Parser."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @return timing provided in String format."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @throws DukeException when no timing is provided."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String getTiming() throws DukeException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        if (timing.equals(\"\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            throw new DukeException(\"It appears that no timing was provided for this \" + command + \"!\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return timing;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Returns the index number provided to the Parser."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @return Index number."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @throws DukeException when index number cannot be parsed as an integer."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public int getIndex() throws DukeException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            throw new DukeException(\"It appears that no index was provided for the command \" + command + \"!\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            return (Integer.parseInt(description));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            throw new DukeException(\"Index provided for command \" + command + \" is not an integer!\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * returns a String of the parsed command."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param ui    the GUI used."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param tasks the list of tasks provided."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @return a string of the parsed command."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String parseCommand(Gui ui, TaskList tasks) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        String toReturn \u003d \"\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                toReturn \u003d ui.terminateGui();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                toReturn \u003d ui.printOutTasks(tasks);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                toReturn \u003d ui.printOutDeleted(tasks, getIndex() - 1);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                tasks.removeTask(getIndex() - 1);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                tasks.getTask(getIndex() - 1).doTask();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                toReturn \u003d (ui.printOutDoneTask(tasks, getIndex() - 1));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                toReturn \u003d (ui.printOutFound(tasks.getMatches(getDescription())));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            case \"snooze\":"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                tasks.getTask(getIndex() - 1).snooze(timing);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                toReturn \u003d ui.printOutSnoozed(tasks, getIndex() - 1, timing);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                tasks.newEvent(getDescription(), getTiming());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                toReturn \u003d ui.printOutAdded(tasks);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                tasks.newToDo(getDescription());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                toReturn \u003d ui.printOutAdded(tasks);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                    tasks.newDeadline(getDescription(), getTiming());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                    toReturn \u003d ui.printOutAdded(tasks);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                    throw new DukeException(\"Invalid date format for deadline used! \""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                            + \"Please re-try using the date format \u0027yyyy-mm-dd HHMM\u0027\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                throw new DukeException(\"I\u0027m sorry, I do not understand what that means!\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            toReturn \u003d e.toString();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return toReturn;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 162
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private String path;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Constructor for the Storage class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param path Path to where the data is loaded from and stored to."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public Storage(String path) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        File storageFolder \u003d new File(\"./data\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        if (!(storageFolder.exists())) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            storageFolder.mkdir();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        this.path \u003d \"./data/\" + path;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Saves the information into the filepath location."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param listOfTasks List of tasks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @throws IOException when file cannot be saved."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void saveData(TaskList listOfTasks) throws IOException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        FileWriter wr \u003d new FileWriter(path);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        wr.write(\"\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        wr.close();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        //wr prevents the same task from being saved multiple times in the same instance."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        if (listOfTasks.getNumOfTasks() \u003c 1) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        FileWriter taskAdd \u003d new FileWriter(path, true);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        for (int i \u003d 0; i \u003c listOfTasks.getNumOfTasks(); i++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                taskAdd.write(listOfTasks.getTask(i) + \"\\n\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                System.out.println(\"Index out of bounds!\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                //will never get triggered"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        taskAdd.close();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Loads the data from the filepath location."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @return ArrayList of tasks."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @throws FileNotFoundException when the data cannot be read from the filepath."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public ArrayList\u003cTask\u003e loadData() throws FileNotFoundException, ParseException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        File dataBank \u003d new File(path);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        Scanner reader \u003d new Scanner(dataBank);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        while (reader.hasNext()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            String task \u003d reader.nextLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            char initial \u003d task.charAt(1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            char status \u003d task.charAt(4);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            String desc \u003d task.substring(7);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            if (initial \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                listOfTasks.add(new ToDo(desc));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            } else if (initial \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                String[] subStringy \u003d desc.split(\" \\\\(at: \");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                listOfTasks.add(new Event(subStringy[0], subStringy[1].substring(0, subStringy[1].length() - 1)));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            } else if (initial \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                String[] subStringy \u003d desc.split(\" \\\\(by: \");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                Date dueDate \u003d new SimpleDateFormat(\"dd MMM yyyy HHmm\").parse(subStringy[1]);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                DateFormat dateFormat \u003d new SimpleDateFormat(\"yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                String reString \u003d dateFormat.format(dueDate);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                listOfTasks.add(new Deadline(subStringy[0], reString));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            if (status \u003d\u003d \u0027Y\u0027) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                listOfTasks.get(listOfTasks.size() - 1).doTask();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return listOfTasks;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 96
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Constructor for the Task class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Marks task as complete."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void doTask() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Snoozes the task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param by String of new timing"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @throws DukeException if task cannot be snoozed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void snooze(String by) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Returns status icon of task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @return Y if task is done, and N if not."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return (isDone ? \"Y\" : \"N\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Returns description of task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @return task description."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 55
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public ArrayList\u003cTask\u003e listOfTasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Constructor for TaskList class used for starting from an empty TaskList."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        this.listOfTasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Constructor for TaskList class used when loading from save."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param listOfTasks ArrayList of tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e listOfTasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        this.listOfTasks \u003d listOfTasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * returns TaskList size."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @return size of TaskList."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public int getNumOfTasks() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return listOfTasks.size();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Returns task in TaskList at index provided."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param index index number provided."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @return task at index."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @throws DukeException when index is out of bounds."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public Task getTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        if (index \u003e\u003d listOfTasks.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            throw new DukeException(\"Index out of bounds!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return listOfTasks.get(index);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Removes task from TaskList at index number provided."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param index index number provided."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void removeTask(int index) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        listOfTasks.remove(index);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Adds a todo task to the TaskList."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param desc description of todo provided."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void newToDo(String desc) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        listOfTasks.add(new ToDo(desc));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Adds an event task to the TaskList."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param desc   description of event provided."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param timing timing for the event provided."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void newEvent(String desc, String timing) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        listOfTasks.add(new Event(desc, timing));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Adds a deadline task to the TaskList."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param desc description of deadline provided."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param by   due date for the deadline."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void newDeadline(String desc, String by) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        listOfTasks.add(new Deadline(desc, by));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * returns the TaskList."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @return ArrayList of tasks."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return listOfTasks;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Returns an TaskList with all the tasks containing the keyword."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param keyword word specified by user to search all tasks for."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @return TaskList of all tasks containing the keyword."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public TaskList getMatches(String keyword) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        for (int i \u003d 0; i \u003c listOfTasks.size(); i++) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            String[] descSplit \u003d listOfTasks.get(i).getDescription().split(\" \");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            for (int j \u003d 0; j \u003c descSplit.length; j++) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                if (descSplit[j].equals(keyword)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                    matchingTasks.add(listOfTasks.get(i));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        TaskList tasks \u003d new TaskList(matchingTasks);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 113
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Constructor for the todo class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param description description of the todo task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void snooze(String by) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        throw new DukeException(\"A todo does not have any timing, and therefore cannot be snoozed!\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 21
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Constructor for the Ui class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Message displayed at startup of Duke."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void printStartUp() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        System.out.println(\"Hello, I\u0027m Duke\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        System.out.println(\"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Message displayed at termination of Duke."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void terminateUi() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Message displayed when file cannot be read."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        System.out.println(\"File could not be read!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Prints out all tasks in the TaskList."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param listOfTasks List of all saved tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void printOutTasks(TaskList listOfTasks) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        for (Task task : listOfTasks.getTaskList()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            System.out.printf(\"  %d.%s\\n\", i, task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Prints out updated message when a task is deleted from the TaskList."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param listOfTasks List of all saved tasks."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param deleteIndex Index at which the task is to be deleted."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @throws DukeException when index is out of bounds of the TaskList."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void printOutDeleted(TaskList listOfTasks, int deleteIndex) throws DukeException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        if (deleteIndex \u003e\u003d listOfTasks.getNumOfTasks() || deleteIndex \u003c 0) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            throw new DukeException(\"Index out of bounds!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        System.out.println(\"  \" + listOfTasks.getTask(deleteIndex));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        System.out.printf(\"Now you have %s tasks in the list \\n\", listOfTasks.getNumOfTasks() - 1);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Prints out updated message when task is marked as done in the TaskList."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param listOfTasks List of all saved tasks."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param index       Index at which the task is to be marked as done."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @throws DukeException when index is out of bounds of the TaskList."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void printOutDoneTask(TaskList listOfTasks, int index) throws DukeException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        if (index \u003e\u003d listOfTasks.getNumOfTasks() || index \u003c 0) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            throw new DukeException(\"Index out of bounds!\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        System.out.println(\"Nice, I\u0027ve marked this task as done:\\n  \" + listOfTasks.getTask(index));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Returns the input provided by user."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @return input provided."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public String newInput() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        return (sc.nextLine());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Prints out updated message when a task is added to the TaskList."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param listOfTasks List of all saved tasks."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void printOutAdded(TaskList listOfTasks) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        System.out.println(\"Got it, I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        if (listOfTasks.getNumOfTasks() \u003c 2) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            System.out.println(\"Now you have 1 task in the list.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            System.out.printf(\"Now you have %d tasks in the list.\\n\", listOfTasks.getNumOfTasks());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * Prints out the list of tasks which match the keyword specified by user."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     * @param listOfTasks Tasklist containing all the tasks that contain the keyword."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void printOutFound(TaskList listOfTasks) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        for (Task task : listOfTasks.getTaskList()) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            System.out.printf(\"%d.%s\\n\", i, task);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 117
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "               style\u003d\"-fx-padding: 7 12; -fx-background-color: #FFD527; -fx-background-radius: 15\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "               wrapText\u003d\"true\" textFill\u003d\"black\"/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 18
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"700.0\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"658.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"658.0\" mnemonicParsing\u003d\"false\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"657.0\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                    vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"652.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 23
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void getIndexTest() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        Parser p \u003d new Parser(\"done 2\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        Parser q \u003d new Parser(\"delete 3\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            Assertions.assertEquals(p.getIndex(), 2);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            Assertions.assertEquals(q.getIndex(), 3);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        catch (DukeException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            Assertions.fail();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void getCommandTest() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        Parser p \u003d new Parser(\"done 2\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        Parser q \u003d new Parser(\"delete 2\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        Parser r \u003d new Parser(\"deadline test /by 2020-01-28\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            Assertions.assertEquals(p.getCommand(), \"done\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            Assertions.assertEquals(q.getCommand(), \"delete\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            Assertions.assertEquals(r.getCommand(), \"deadline\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void getTimingTest() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        Parser p \u003d new Parser(\"deadline test /by 2020-01-28\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        Parser q \u003d new Parser(\"deadline test2 /by 2020-03-28 1800\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        Parser r \u003d new Parser(\"event test3 /at Monday 2pm\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            Assertions.assertEquals(p.getTiming(), \"2020-01-28\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            Assertions.assertEquals(q.getTiming(), \"2020-03-28 1800\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            Assertions.assertEquals(r.getTiming(), \"Monday 2pm\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        catch (DukeException e){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            Assertions.fail();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 46
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void getTaskListTest() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        ArrayList\u003cTask\u003e testList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        tasks.newToDo(\"Study for CS2103\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        tasks.newDeadline(\"Test1\", \"2020-09-17 0000\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        tasks.newEvent(\"Test 2\", \"today 2pm\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        testList.add(new ToDo(\"Study for CS2103\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        testList.add(new Deadline(\"Test1\", \"2020-09-17 0000\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        testList.add(new Event(\"Test 2\", \"today 2pm\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        Assertions.assertEquals(tasks.getTaskList().toString(), testList.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void sizeTest() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        tasks.newToDo(\"Study for CS2103\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        tasks.newDeadline(\"Test1\", \"2020-09-17 0000\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        tasks.newEvent(\"Test 2\", \"today 2pm\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        tasks.newToDo(\"test-3\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        Assertions.assertEquals(tasks.getNumOfTasks(), 4);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    public void getTaskTest() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        tasks.newToDo(\"Study for CS2103\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        tasks.newDeadline(\"Test1\", \"2020-09-17 0000\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        tasks.newEvent(\"Test 2\", \"today 2pm\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        tasks.newToDo(\"test-3\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        tasks.newDeadline(\"new deadline\", \"2020-01-28\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            Assertions.assertEquals(tasks.getTask(4).toString(), \"[D][N] new deadline (by: 28-01-2020 0000)\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        catch (DukeException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "            Assertions.fail();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 49
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Hello, I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "  [T][N] Learn about Java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Now you have 1 task in the list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "  [D][N] Java quiz (by: Jan 26th)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "  [D][N] Individual project (by: Jan 23rd)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "  [E][N] CS2101 Tutorial (at: Thursday Jan 23rd 2-4pm)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "  [T][N] set up meeting for project"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "1.[T][N] Learn about Java"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "2.[D][N] Java quiz (by: Jan 26th)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "3.[D][N] Individual project (by: Jan 23rd)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "4.[E][N] CS2101 Tutorial (at: Thursday Jan 23rd 2-4pm)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "5.[T][N] set up meeting for project"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Nice, I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "  [T][Y] Learn about Java"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Nice, I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "  [D][Y] Individual project (by: Jan 23rd)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "1.[T][Y] Learn about Java"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "2.[D][N] Java quiz (by: Jan 26th)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "3.[D][Y] Individual project (by: Jan 23rd)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "4.[E][N] CS2101 Tutorial (at: Thursday Jan 23rd 2-4pm)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "5.[T][N] set up meeting for project"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "  [D][N] fix my life (by: ASAP!)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 38
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "todo Learn about Java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "deadline Java quiz /by Jan 26th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "deadline Individual project /by Jan 23rd"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "event CS2101 Tutorial /at Thursday Jan 23rd 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "todo set up meeting for project"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "deadline fix my life /by ASAP!"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 11
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "REM javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "dir /s /B ..\\src\\main\\java\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin @sources.txt"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ")"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 25
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "C:\\Users\\Adarsh\\Documents\\duke\\src\\main\\java\\Deadline.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "C:\\Users\\Adarsh\\Documents\\duke\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "C:\\Users\\Adarsh\\Documents\\duke\\src\\main\\java\\DukeException.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "C:\\Users\\Adarsh\\Documents\\duke\\src\\main\\java\\Event.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "C:\\Users\\Adarsh\\Documents\\duke\\src\\main\\java\\Task.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdarshChugani"
        },
        "content": "C:\\Users\\Adarsh\\Documents\\duke\\src\\main\\java\\ToDo.java"
      }
    ],
    "authorContributionMap": {
      "AdarshChugani": 6
    }
  }
]
