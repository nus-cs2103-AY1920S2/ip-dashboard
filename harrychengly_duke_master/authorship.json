[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "test {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "harrychengly": 19,
      "-": 19
    }
  },
  {
    "path": "out.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "[T][✓] hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "[T][✘] testing"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "[E][✓] ball (at: 2019-09-02)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "[T][✘] helloworld"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "[T][✘] run"
      }
    ],
    "authorContributionMap": {
      "harrychengly": 5
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    protected LocalDate formattedDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * Constructor for Deadline class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @param description Description for Deadline."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @param by          Date of Deadline"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @throws DukeException If date/description not specified."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        if (by.equalsIgnoreCase(\"\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "            throw new DukeException(\"No date\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        LocalDate deadlineDate \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        this.formattedDate \u003d deadlineDate;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        return \"[D]\" "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                + super.toString() "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                + \" (by: \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                + formattedDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * Same as toString."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @return Deadline toString."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public String saveToList() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        return \"[D]\" "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                + super.toString() "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                + \" (by: \" "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                + formattedDate "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                + \")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "harrychengly": 47
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    private SaveToFile saveToFile;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * Constructor for duke."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @param filePath File path for duke\u0027s task list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        saveToFile \u003d new SaveToFile();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        tasks \u003d new TaskList(saveToFile.loadList(filePath));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * Run duke."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "            String userInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "            String[] arrString \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                if (arrString[0].equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    ui.goodbyeMessage();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                } else if (arrString[0].equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    if (tasks.getTaskListSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                        ui.emptyList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                        ui.listCommand(tasks, sb);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                        saveToFile.usingFileWriter(sb.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                } else if (arrString[0].equalsIgnoreCase(\"done\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                        int taskNumber \u003d Integer.parseInt(arrString[1].strip()) - 1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                        if (taskNumber \u003e\u003d 0 \u0026\u0026 taskNumber \u003c tasks.getTaskListSize()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                            ui.doneTask(tasks, taskNumber);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                            ui.invalidTask();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                        throw new DukeException(ui.missingTaskNumber());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                } else if (arrString[0].equalsIgnoreCase(\"delete\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                        int taskNumber \u003d Integer.parseInt(arrString[1].strip()) - 1;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                        if (taskNumber \u003e\u003d 0 \u0026\u0026 taskNumber \u003c tasks.getTaskListSize()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                            ui.deletedTask(tasks, taskNumber);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                            ui.invalidTask();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                        throw new DukeException(ui.missingTaskNumber());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                } else if (arrString[0].equalsIgnoreCase(\"todo\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                        Todo todo \u003d new Todo(arrString[1]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                        tasks.addTask(todo);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                        ui.taskInList(tasks.getTaskListSize());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                        throw new DukeException(ui.incompleteCommand(\"Todo\"));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                } else if (arrString[0].equalsIgnoreCase(\"event\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                        String[] eventString \u003d arrString[1].split(\"/\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                        Event event \u003d new Event(eventString[0].strip(), eventString[1].substring(2).strip());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                        tasks.addTask(event);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                        ui.taskInList(tasks.getTaskListSize());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                        throw new DukeException(ui.incompleteCommand(\"Event\"));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                } else if (arrString[0].equalsIgnoreCase(\"deadline\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                        String[] deadlineString \u003d arrString[1].split(\"/\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                        Deadline deadline \u003d new Deadline(deadlineString[0].strip(),"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                                deadlineString[1].substring(2).strip());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                        tasks.addTask(deadline);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                        ui.taskInList(tasks.getTaskListSize());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                        throw new DukeException(ui.incompleteCommand(\"Deadline\"));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                } else if (arrString[0].equalsIgnoreCase(\"Find\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                        tasks.findTask(arrString[1]);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                        throw new DukeException(ui.incompleteCommand(\"Find\"));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    throw new DukeException(ui.invalidCommand());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "            } catch (Exception ex) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        new Duke(\"./out.txt\").run();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "harrychengly": 111,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "harrychengly": 7
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    protected LocalDate formattedDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * Constructor for Event class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @param description Description for event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @param at          Date of event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @throws DukeException If date/description not specified."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public Event(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        if (at.equalsIgnoreCase(\"\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "            throw new DukeException(\"No date\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        LocalDate eventDate \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        this.formattedDate \u003d eventDate;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        return \"[E]\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                + super.toString() "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                + \" (at: \" "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                + formattedDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * Same as toString."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @return Event toString."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public String saveToList() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        return \"[E]\" "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                + super.toString() "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                + \" (at: \" "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                + formattedDate "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                + \")\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "harrychengly": 48
    }
  },
  {
    "path": "src/main/java/SaveToFile.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "public class SaveToFile {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * Saves tasks to out.txt."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @param list TaskList to write to out.txt."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @throws IOException If file not available."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public static void usingFileWriter(String list) throws IOException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(\"./out.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        fileWriter.write(list);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * Loads saved TaskList to Duke."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @param filePath File path for duke\u0027s task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @return ArrayList of saved TaskList if not new ArrayList would be returned."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public ArrayList\u003cTask\u003e loadList(String filePath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "            Scanner s \u003d new Scanner(new File(filePath));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                String fileInput \u003d s.nextLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                String[] fileStringArr \u003d fileInput.split(\"\\\\[\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                if (fileStringArr[1].equalsIgnoreCase(\"T]\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    String[] todoSplit \u003d fileStringArr[2].split(\" \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    Todo readTodo \u003d new Todo(todoSplit[1]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    readTodo.isDone(todoSplit[0]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    arr.add(readTodo);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                } else if (fileStringArr[1].equalsIgnoreCase(\"D]\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    String[] deadlineSplit \u003d fileStringArr[2].split(\"\\\\(\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    String checkIsDone \u003d deadlineSplit[0].substring(0, 2);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    String deadlineDescription \u003d deadlineSplit[0].substring(3).strip();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    String deadlineDate \u003d deadlineSplit[1].substring(4, deadlineSplit[1].length() - 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    Deadline readDeadline \u003d new Deadline(deadlineDescription, deadlineDate);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    readDeadline.isDone(checkIsDone);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    arr.add(readDeadline);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                } else if (fileStringArr[1].equalsIgnoreCase(\"E]\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    String[] eventSplit \u003d fileStringArr[2].split(\"\\\\(\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    String checkIsDone \u003d eventSplit[0].substring(0, 2);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    String eventDescription \u003d eventSplit[0].substring(3).strip();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    String eventDate \u003d eventSplit[1].substring(4, eventSplit[1].length() - 1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    Event readEvent \u003d new Event(eventDescription, eventDate);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    readEvent.isDone(checkIsDone);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                    arr.add(readEvent);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "            s.close();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        } catch (FileNotFoundException | DukeException ex) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        return arr;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "harrychengly": 65
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * Constructor for Task class."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @param description Description for task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @throws DukeException If description is not specified."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public Task(String description) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        if (description.strip().equalsIgnoreCase(\"\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "            throw new DukeException(\"Invalid description\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * Returns tick icon or cross icon."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @return tick icon || cross icon."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        return (isDone"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                ? \"\\u2713\" //return ✓ symbol."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                : \"\\u2718\"); //return X symbol."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * Sets done status of a task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @param doneStatus Done status of a task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public void isDone(String doneStatus) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        if (doneStatus.equalsIgnoreCase(\"\\u2713]\")) { //check if doneStatus \u003d ✓ symbol."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "            this.isDone \u003d false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * Set task to be done."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public void doneTask() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * Same as toString."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @return Task toString."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public String saveToList() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "harrychengly": 63
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public ArrayList\u003cTask\u003e tasks \u003d (ArrayList\u003cTask\u003e)new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * Constructor for TaskList."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @param tasks ArrayList for TaskList."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public TaskList(ArrayList tasks) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * Adds task to TaskList."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @param task Task to be added to TaskList."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        Ui.addedCommand();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        System.out.println(task.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * Get number of tasks in TaskList."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @return Number of tasks in TaskList."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public int getTaskListSize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * Get specified task in TaskList."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @param taskNumber Task number in TaskList ."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @return Task specified."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public Task getTask(int taskNumber) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        return tasks.get(taskNumber);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * Deletes specified task in TaskList."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @param taskNumber Task number in TaskList."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public void deleteTask(int taskNumber) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        tasks.remove(taskNumber);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * Finds specified task in TaskList based on description."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @param description Task description to find task in TaskList."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public void findTask(String description) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        ArrayList\u003cTask\u003e foundTasks \u003d (ArrayList\u003cTask\u003e)new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "            if (task.description.contains(description)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                foundTasks.add(task);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        if (foundTasks.size() !\u003d 0) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "            System.out.println(\"Found your matching tasks in your list:\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "            for (int i \u003d 0; i \u003c foundTasks.size(); i++) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "                System.out.println(i + 1 + \". \" + foundTasks.get(i).toString());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "            System.out.println(\"There are no matching tasks in your list\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "harrychengly": 82
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * Constructor for Todo class."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @param description Description for Todo task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @throws DukeException If description is missing."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public Todo(String description) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * Same as toString."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @return Todo toString"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public String saveToList() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "harrychengly": 28
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    static String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    static String welcomeMessage \u003d \"Hello from\\n\" + logo + \"\\n I am at your service\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    //    System.out.println(\"Hello from\\n\" + logo + \"\\n I am at your service\\n\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    static String botReplyLine \u003d \"----------------------------------------------\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * Welcome message."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public static void showWelcome() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo + \"\\n I am at your service\\n\" + botReplyLine);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * Goodbye message."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public static void goodbyeMessage() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        System.out.println(botReplyLine + \"\\n Duke: I\u0027ll say goodnight now \\n\" + botReplyLine);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * Shows ---------------------."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public static void showLine() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        System.out.println(botReplyLine);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * Message when TaskList is empty."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public static void emptyList() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        System.out.println(\"You currently do not have anything in your list\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * Done task command."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @param taskList   Current TaskList"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @param taskNumber Specified task number in TaskList"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public static void doneTask(TaskList taskList, int taskNumber) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        System.out.println(\"Consider it done.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        taskList.getTask(taskNumber).doneTask();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        System.out.println(taskList.getTask(taskNumber).toString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * Message when invalid task number specified."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public static void invalidTask() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        System.out.println(\"Invalid task number.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * Deletes task command."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @param taskList   Current TaskList."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @param taskNumber Task number to be deleted from Task List."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public void deletedTask(TaskList taskList, int taskNumber) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        System.out.println(\"Consider it deleted.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        System.out.println(taskList.getTask(taskNumber).toString());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        taskList.deleteTask(taskNumber);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        taskInList(taskList.getTaskListSize());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * Message when task number is not specified."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @return Message of missing task number."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public static String missingTaskNumber() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        return botReplyLine + \"\\n Missing task number \\n\" + botReplyLine;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * Message when command is incomplete."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @param str todo, deadline or event."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @return Message of incomplete command."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public static String incompleteCommand(String str) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        return botReplyLine + \"\\n\" + str + \" not complete \\n\" + botReplyLine;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * Message when command is invalid."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @return Message of invalid command."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public static String invalidCommand() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        return botReplyLine + \" \\n Sorry I do not understand. \\n\" + botReplyLine;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * Message when task is added."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public static void addedCommand() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        System.out.println(\"Duke: added your command. \\n\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * Message to show number of tasks in TaskList."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @param listSize number of tasks in TaskList"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public static void taskInList(int listSize) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        System.out.println(\"You have \" + listSize + \" task(s) in your list.\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * Message to show when list command activated."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @param taskList TaskList provided."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     * @param sb       StringBuilder object."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public static void listCommand(TaskList taskList, StringBuilder sb) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getTaskListSize(); i++) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "            System.out.println(i + 1 + \". \" + taskList.getTask(i).toString());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "            sb.append(taskList.getTask(i).saveToList() + \"\\n\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "harrychengly": 144
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public void todoTask() throws DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        Todo taskTest \u003d new Todo(\"testing\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        assertEquals(\"[T][✘] testing\", taskTest.toString());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    public void uiTest() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "        assertEquals(\"----------------------------------------------\", ui.botReplyLine);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "harrychengly": 17
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "harrychengly"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "harrychengly"
        },
        "content": " I am at your service"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "----------------------------------------------"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "harrychengly"
        },
        "content": " Duke: added your command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "----------------------------------------------"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "[T][✘] read book"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "----------------------------------------------"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "harrychengly"
        },
        "content": " Duke: added your command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "----------------------------------------------"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "[E][✘] meeeting  (at: 5pm)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "----------------------------------------------"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "harrychengly"
        },
        "content": " Duke: added your command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "----------------------------------------------"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "[D][✘] project  (by: Sunday)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "----------------------------------------------"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "1. [T][✘] read book"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "2. [E][✘] meeeting  (at: 5pm)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "3. [D][✘] project  (by: Sunday)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "----------------------------------------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "----------------------------------------------"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "Consider it done."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "[E][✓] meeeting  (at: 5pm)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "----------------------------------------------"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "----------------------------------------------"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "harrychengly"
        },
        "content": " Duke: I\u0027ll say goodnight now "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "----------------------------------------------"
      }
    ],
    "authorContributionMap": {
      "harrychengly": 33
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "event meeeting /at 5pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "deadline project /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "harrychengly": 6
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "harrychengly"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "harrychengly"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "harrychengly": 34
    }
  }
]
