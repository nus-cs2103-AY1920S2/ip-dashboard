[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    //to create jar file:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    archiveVersion \u003d \"v0.1\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "test {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ziyingli": 40,
      "-": 20
    }
  },
  {
    "path": "myfile.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "T | 1 | drink"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "T | 0 | eat"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "T | 0 | sleep"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "T | 0 | eat drink sleep"
      }
    ],
    "authorContributionMap": {
      "ziyingli": 4
    }
  },
  {
    "path": "src/main/java/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ziyingli"
        },
        "content": " * Represents a task with a deadline."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ziyingli"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    LocalDate by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    public DeadlineTask(String desc, LocalDate by) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by:\" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    @Override "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    public int compareTo(Task other) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        return this.by.compareTo(((DeadlineTask) other).by);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ziyingli": 24
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ziyingli"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ziyingli"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ziyingli"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ziyingli"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ziyingli": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ziyingli"
        },
        "content": " * Represents the entire Duke program, basically an interactive To-do List."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ziyingli"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * Handles the input and produces the response to be displayed back to the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * @param input User input"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * @return Response to user input in String format"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * @throws IOException Handles IO exceptions"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    public String getResponse(String input) throws IOException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        String[] split \u003d input.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        String command \u003d split[0];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        int numOfTask;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        String tasks \u003d storage.readFromFile();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        TaskList taskList \u003d Parser.storageToTaskList(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            return (\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            return (taskList.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            int index \u003d Integer.parseInt(split[1]) - 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            Task done \u003d taskList.list.get(index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            done.markAsDone();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            tasks \u003d storage.readFromFile();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            storage.changeToDone(tasks, index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            return (\"Nice! I\u0027ve marked this task as done: \\n\" + done);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            int index \u003d Integer.parseInt(split[1]) - 1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            Task remove \u003d taskList.list.remove(index);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            numOfTask \u003d taskList.list.size();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            tasks \u003d storage.readFromFile();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            storage.removeLine(tasks, index);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            return (\"Noted. I\u0027ve removed this task: \\n\" + remove + \"\\nNow you have \" + numOfTask"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                    + \" task(s) in the list\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        } else if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            if (split.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                return (\"OOPS!!!\" + \" The description of a todo cannot be empty. \\n\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            String desc \u003d input.replace(\"todo \", \"\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            Task t \u003d new ToDoTask(desc);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            taskList.list.add(t);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            numOfTask \u003d taskList.list.size();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            storage.writeToFile(\"T | 0 | \" + desc);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            return (\"Got it. I\u0027ve added this task: \\n\" + t + \"\\nNow you have \" + numOfTask + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            String[] arr \u003d input.split(\" /by \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            String desc \u003d arr[0].replace(\"deadline \", \"\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            String time \u003d arr[1];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            Task t \u003d new DeadlineTask(desc, LocalDate.parse(time));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            taskList.list.add(t);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            storage.writeToFile(\"D | 0 | \" + desc + \" | \" + time);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            numOfTask \u003d taskList.list.size();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            return (\"Got it. I\u0027ve added this task: \\n\" + t + \"\\nNow you have \" + numOfTask + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            String[] arr \u003d input.split(\" /at \");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            String desc \u003d arr[0].replace(\"event \", \"\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            String time \u003d arr[1];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            Task t \u003d new EventTask(desc, LocalDate.parse(time));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            taskList.list.add(t);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            numOfTask \u003d taskList.list.size();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            storage.writeToFile(\"E | 0 | \" + desc + \" | \" + time);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            return (\"Got it. I\u0027ve added this task: \\n\" + t + \"\\nNow you have \" + numOfTask + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        } else if (command.equals(\"find\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            String keyword \u003d split[1];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            tasks \u003d storage.readFromFile();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            String found \u003d storage.findTask(tasks, keyword);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            TaskList foundList \u003d Parser.storageToTaskList(found);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            return (\"Here are the matching tasks in your list: \\n\" + foundList.toString());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        } else if (command.equals(\"sort\")) { "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            if (split[1].equals(\"deadlines\")) { // sort deadlines chronologically"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                TaskList sortedList \u003d taskList.sortDeadlineTask();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                return (\"Here are your deadlines sorted chronologically: \\n\" + sortedList.toString());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            } else if (split[1].equals(\"events\")) { // sort events chronologically"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                TaskList sortedList \u003d taskList.sortEventTask();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                return (\"Here are your events sorted chronologically: \\n\" + sortedList.toString());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            } else { // sort todos by description"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                TaskList sortedList \u003d taskList.sortTodoTask();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                return (\"Here are your todos sorted by description: \\n\" + sortedList.toString());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-( \\n\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ziyingli": 104,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    public DukeException(String errMsg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        super(errMsg);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ziyingli": 5
    }
  },
  {
    "path": "src/main/java/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ziyingli"
        },
        "content": " * Represents a task with an event."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ziyingli"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    LocalDate at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    public EventTask(String desc, LocalDate at) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at:\" + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    @Override "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    public int compareTo(Task other) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        return this.at.compareTo(((EventTask) other).at);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ziyingli": 24
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ziyingli"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ziyingli"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ziyingli": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ziyingli"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ziyingli"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ziyingli": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ziyingli"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ziyingli"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                DialogBox.getDukeDialog(\"Welcome to Duke! How can I help you?\", dukeImage)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        );"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * Duke\u0027s reply and then appends them to the dialog container. Clears the user"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * input after processing."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    private void handleUserInput() throws IOException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        );"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ziyingli": 63
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ziyingli"
        },
        "content": " * Parses a String object to TaskList of Tasks."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ziyingli"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * Converts String of tasks read from storage to TaskList."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * @param s String object of tasks read from memory on disk."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * @return TaskList of tasks corresponding to the String object s."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    public static TaskList storageToTaskList(String s) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        TaskList tl \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        String[] lines \u003d s.split(\"\\\\r?\\\\n\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        for (String line : lines) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            String[] arr \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            if (arr[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                Task todo \u003d new ToDoTask(arr[2]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                if (Integer.parseInt(arr[1]) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                    todo.markAsDone();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                tl.list.add(todo);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            } else if (arr[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                Task deadline \u003d new DeadlineTask(arr[2], LocalDate.parse(arr[3]));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                if (Integer.parseInt(arr[1]) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                    deadline.markAsDone();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                tl.list.add(deadline);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            } else if (arr[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                Task event \u003d new EventTask(arr[2], LocalDate.parse(arr[3]));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                if (Integer.parseInt(arr[1]) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                    event.markAsDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                tl.list.add(event);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        return tl;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ziyingli": 44
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ziyingli"
        },
        "content": " * Handles the writing and reading to file on disk, also handles deletion of"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ziyingli"
        },
        "content": " * tasks and marking tasks as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ziyingli"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * Writes task to the file myfile.txt."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * @param s String object to be written to file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * @throws IOException Handles errors if file is not found."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    public void writeToFile(String s) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            // assert assumption that string exists:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            assert s !\u003d null : \"Empty string\"; "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            File file \u003d new File(\"./myfile.txt\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file, true));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            writer.write(s); "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            writer.newLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * Reads from storage and returns tasks as a String."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * @return String object after reading the text file of saved tasks from disk."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * @throws IOException Handles errors if file is not found."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    public String readFromFile() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            File file \u003d new File(\"./myfile.txt\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            StringBuilder content \u003d new StringBuilder();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            while ((line \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                content.append(line);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                content.append(System.lineSeparator());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            reader.close();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            return content.toString();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * Removes a line in storage file when user deletes a task."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * @param tasks String of tasks."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * @param index Index of task to be removed."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * @throws IOException Handles errors if file is not found."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    public void removeLine(String tasks, int index) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            // assert assumption that at least one task exists:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            assert tasks !\u003d null : \"No tasks\"; "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            File file \u003d new File(\"./myfile.txt\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file, false));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            String[] lines \u003d tasks.split(\"\\\\r?\\\\n\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            for (int i \u003d 0; i \u003c lines.length; i++) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                if (i \u003d\u003d index) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                    // do nth"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                    writer.write(lines[i]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                    writer.newLine();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * Changes task from undone to done when user marks a tasks as done."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * @param tasks String of tasks."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * @param index Index of task to be marked as done."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * @throws IOException Handles errors if file is not found."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    public void changeToDone(String tasks, int index) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            // assert assumption that at least one task exists:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            assert tasks !\u003d null : \"No tasks\"; "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                    "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            File file \u003d new File(\"./myfile.txt\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file, false));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            String[] lines \u003d tasks.split(\"\\\\r?\\\\n\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            for (int i \u003d 0; i \u003c lines.length; i++) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                if (i \u003d\u003d index) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                    writer.write(lines[i].replaceFirst(\"0\", \"1\"));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                    writer.write(lines[i]);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                writer.newLine();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        }  "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * Finds list of tasks that contain the keyword."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * @param tasks   String of tasks."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * @param keyword Required keyword to find."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     * @return String object of tasks that contain keyword."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    public String findTask(String tasks, String keyword) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        String found \u003d \"\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        String[] lines \u003d tasks.split(\"\\\\r?\\\\n\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        for (String line : lines) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            if (line.contains(keyword)) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                found +\u003d \"\\n\" + line;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        return found;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ziyingli": 142
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ziyingli"
        },
        "content": " * Represents a task that users can input."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ziyingli"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    String desc;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    public Task(String desc) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    public abstract int compareTo(Task task);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        String symbol \u003d isDone ? \"[\\u2713] \" : \"[\\u2718] \";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        return symbol + desc;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ziyingli": 24
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ziyingli"
        },
        "content": " * This represents a list of Tasks."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ziyingli"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    public TaskList sortDeadlineTask() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        ArrayList\u003cTask\u003e deadlines \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        for (Task task : this.list) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            if (task instanceof DeadlineTask) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                deadlines.add(task);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        Collections.sort(deadlines, (task1, task2) -\u003e task1.compareTo(task2));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        return new TaskList(deadlines);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    public TaskList sortEventTask() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        ArrayList\u003cTask\u003e events \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        for (Task task : this.list) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            if (task instanceof EventTask) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                events.add(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        Collections.sort(events, (task1, task2) -\u003e task1.compareTo(task2));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        return new TaskList(events);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    public TaskList sortTodoTask() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        ArrayList\u003cTask\u003e todos \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        for (Task task : this.list) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            if (task instanceof ToDoTask) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "                todos.add(task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        Collections.sort(todos, (task1, task2) -\u003e task1.compareTo(task2));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        return new TaskList(todos);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        for (Task t : list) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            output +\u003d (index + \". \" + t.toString() + \"\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ziyingli": 57
    }
  },
  {
    "path": "src/main/java/ToDoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ziyingli"
        },
        "content": " * Represents a task with an event."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ziyingli"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "public class ToDoTask extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    public ToDoTask(String desc) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    @Override "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    public int compareTo(Task other) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        return this.desc.compareTo(other.desc);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ziyingli": 18
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ziyingli"
        },
        "content": " * Prints and formats Duke\u0027s response to user input."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ziyingli"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    public void print(String toPrint) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        String line \u003d \"\\n______________________________________ \\n\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        System.out.println(line + toPrint + line);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ziyingli": 9
    }
  },
  {
    "path": "src/main/java/myfile.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "D | 0 | return book | 2019-10-10"
      }
    ],
    "authorContributionMap": {
      "ziyingli": 1
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "  \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "  \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "ziyingli": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "      \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "      \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "ziyingli": 19
    }
  },
  {
    "path": "src/test/java/DeadlineTaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "public class DeadlineTaskTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    @Test "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        assertEquals(\"[D][\\u2718] return book (by:Oct 10 2019)\", new DeadlineTask(\"return book\", LocalDate.parse(\"2019-10-10\")).toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ziyingli": 14
    }
  },
  {
    "path": "src/test/java/EventTaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "public class EventTaskTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    @Test "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        assertEquals(\"[E][\\u2718] team meeting (at:Oct 10 2019)\", new EventTask(\"team meeting\", LocalDate.parse(\"2019-10-10\")).toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ziyingli": 14
    }
  },
  {
    "path": "src/test/java/ToDoTaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "public class ToDoTaskTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "        assertEquals(\"[T][\\u2718] sleep\", new ToDoTask(\"sleep\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ziyingli": 12
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "______________________________________ "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "Hello! I\u0027m Duke "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "______________________________________ "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "______________________________________ "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "[T][✘] borrow book"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "Now you have 1 task(s) in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "______________________________________ "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "______________________________________ "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "[E][✘] meeting  (at: whenever)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "Now you have 2 task(s) in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "______________________________________ "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "______________________________________ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "[D][✘] task  (by: tmr)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "Now you have 3 task(s) in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "______________________________________ "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "______________________________________ "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "[T][✘] eat"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "Now you have 4 task(s) in the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "______________________________________ "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "______________________________________ "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "1. [T][✘] borrow book"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "2. [E][✘] meeting  (at: whenever)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "3. [D][✘] task  (by: tmr)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "4. [T][✘] eat"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "______________________________________ "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "______________________________________ "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "[E][✓] meeting  (at: whenever)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "______________________________________ "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "______________________________________ "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "1. [T][✘] borrow book"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "2. [E][✓] meeting  (at: whenever)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "3. [D][✘] task  (by: tmr)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "4. [T][✘] eat"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "______________________________________ "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "______________________________________ "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "Noted. I\u0027ve removed this task: "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "[E][✓] meeting  (at: whenever)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "Now you have 3 task(s) in the list"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "______________________________________ "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "______________________________________ "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "☹ OOPS!!! The description of a todo cannot be empty. "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "______________________________________ "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "______________________________________ "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-( "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "______________________________________ "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "______________________________________ "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "______________________________________ "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "ziyingli": 82
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "event meeting /at whenever"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "deadline task /by tmr"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "todo eat"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "todo"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "jjjkk"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ziyingli": 11
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ziyingli"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ziyingli"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "ziyingli": 34
    }
  }
]
