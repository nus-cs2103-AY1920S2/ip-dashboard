[
  {
    "path": "saved-tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "1 || todo || abc"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "0 || deadline || sleep || 2020-01-31 2200"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "0 || event || lecture || 2020-03-01 1300"
      }
    ],
    "authorContributionMap": {
      "helloImHai": 3
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "/** Class representing a Deadline */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /** Time that task must be completed by. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    protected LocalDateTime time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * Creates a Deadline object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @param task String containing what to do."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @param time LocalDateTime object representing time that task must be completed by."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    Deadline(String task, LocalDateTime time) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * Returns a String representation of the Deadline object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @return String representation of the deadline to print."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        String timeStr \u003d this.time.format(DateTimeFormatter.ofPattern(\"HH:mm, MMM d yyyy\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), timeStr);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * Returns a String representation of the Deadline object to save."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @return String representation of the deadline to save."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        String timeStr \u003d this.time.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                \"%s || deadline || %s || %s\", super.toSaveString(), this.task, timeStr);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "helloImHai": 44
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "import duke.exception.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "/** Class Duke, the driver class of the program. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /** Duke object creation, initiate Ui, Parser, TaskList, and Storage. */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        storage \u003d new Storage(\".//saved-tasks.txt\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * Driver function of the whole program."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * \u003cp\u003eInitiates greeting. Enter a while loop waiting for commands and call respective handlers."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * Exits when a \"bye\" command is given."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @throws IOException If Exception is raised during loading and saving."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        storage.loadBaby(taskList, parser);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        ui.greeting();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        ui.showList(taskList.getTaskList(), \"Tasks loaded from disk:\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        ui.initPrompt();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                String longCommand \u003d ui.getCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                String[] keywords \u003d parser.parseCommand(longCommand);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                switch (keywords[0]) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                    isExit \u003d true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                    ui.showList(taskList.getTaskList(), \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                case \"search\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                    if (keywords.length \u003d\u003d 1) throw new MissingParameterException(\"Search\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                    handleSearch(keywords[1]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                    if (keywords.length \u003d\u003d 1) throw new MissingParameterException(\"Done\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                    handleDone(keywords[1]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                    if (keywords.length \u003d\u003d 1) throw new MissingParameterException(\"Delete\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                    handleDelete(keywords[1]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                    if (keywords.length \u003d\u003d 1) throw new MissingParameterException(\"Todo\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                    handleTodo(keywords[1]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                    if (keywords.length \u003d\u003d 1) throw new MissingParameterException(\"Event\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                    handleEvent(keywords[1]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                    if (keywords.length \u003d\u003d 1) throw new MissingParameterException(\"Deadline\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                    handleDeadline(keywords[1]);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                    throw new UnknownCommandException(keywords[0]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                storage.saveBaby(taskList.getTaskList());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "            } catch (MissingParameterException"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                    | MissingTimeException"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                    | UnknownCommandException"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                    | TimeFormatException"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                    | InvalidIndexException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                ui.showException(e);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                ui.showUnknownException(e);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        ui.bye();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * Handles the searching for key in the task list"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @param key String that we want to look for in the task."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public void handleSearch(String key) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        ArrayList\u003cTask\u003e tasksWithKey \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        for (Task t : taskList.getTaskList()) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "            if (t.toString().contains(key)) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                tasksWithKey.add(t);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        ui.showList(tasksWithKey, \"Here are the tasks that contains \u0027\" + key + \"\u0027 in your list:\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * Marks task as done and call Ui to display task."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @param indexStr A string representing the index of the task from list we want to mark as"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     *     done."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public void handleDone(String indexStr) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "            int index \u003d Integer.parseInt(indexStr) - 1;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "            Task task \u003d taskList.getTaskList().get(index);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "            task.done();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "            ui.showDone(task);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "            throw new InvalidIndexException(indexStr);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * Deletes tasks from task list and call Ui to display deleted task."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @param indexStr A string representing the index of the task from list we want to delete."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public void handleDelete(String indexStr) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "            int index \u003d Integer.parseInt(indexStr) - 1;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "            Task task \u003d taskList.getTaskList().get(index);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "            taskList.getTaskList().remove(task);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "            ui.showDelete(task, taskList.getTaskList());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "            throw new InvalidIndexException(indexStr);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * Handles the event command"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @param description String containing both the name and time of the task."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public void handleEvent(String description) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        String[] strArr \u003d description.split(\" /at \", 2);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        if (strArr.length \u003d\u003d 1) throw new MissingTimeException(\"Event\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        String todo \u003d strArr[0];"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        String time \u003d strArr[1];"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        Event task \u003d new Event(todo, parser.stringToTime(time));"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        taskList.addTask(task);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        ui.showAdd(task, taskList.getTaskList());"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * Handles the todo command"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @param description String containing the task name."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public void handleTodo(String description) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        Todo task \u003d new Todo(description);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        taskList.addTask(task);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        ui.showAdd(task, taskList.getTaskList());"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * Handles the deadline command"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @param description String containing both the name and time of the task."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public void handleDeadline(String description) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        String[] strArr \u003d description.split(\" /by \", 2);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        if (strArr.length \u003d\u003d 1) throw new MissingTimeException(\"Deadline\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        String todo \u003d strArr[0];"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        String time \u003d strArr[1];"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        Deadline task \u003d new Deadline(todo, parser.stringToTime(time));"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        taskList.addTask(task);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        ui.showAdd(task, taskList.getTaskList());"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "helloImHai": 182,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "/** Class representing an Event. */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    protected LocalDateTime time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * Creates Event object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @param task String representing the task that needs to be done"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @param time LocalDateTime representing the time event is at."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    Event(String task, LocalDateTime time) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * Returns String representation of the event object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @return String representation of the event to print."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        String timeStr \u003d this.time.format(DateTimeFormatter.ofPattern(\"HH:mm, MMM d yyyy\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), timeStr);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * Returns String representation of the event object to be saved."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @return String representation of the event to save."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public java.lang.String toSaveString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        String timeStr \u003d this.time.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        return String.format(\"%s || event || %s || %s\", super.toSaveString(), this.task, timeStr);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "helloImHai": 41
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "import duke.exception.TimeFormatException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "/** Class representing the parser with methods to parse strings. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * Parses initial command to String array."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @param longCommand String representation of the whole command typed in by user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @return String array, position 0 is the command type, position 1 is the description."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public String[] parseCommand(String longCommand) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        return longCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * Parses time String to LocalDateTime object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @param str String of the time input of the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @return LocalDateTime representation of that time format."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public LocalDateTime stringToTime(String str) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "            return LocalDateTime.parse(str, formatter);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "            throw new TimeFormatException();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "helloImHai": 34
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "/** Class representing a Store, to save and load from file. */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    String path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * Creates a Storage object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @param path path of file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public Storage(String path) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * Saves the task list to the file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @param taskList list of tasks to save to file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @throws IOException If there is a error when writing to file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public void saveBaby(ArrayList\u003cTask\u003e taskList) throws IOException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        BufferedWriter taskWriter \u003d new BufferedWriter(new FileWriter(path));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        StringBuilder tasks \u003d new StringBuilder();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "            tasks.append(task.toSaveString()).append(\"\\n\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        taskWriter.write(tasks.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        taskWriter.close();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * Loads saved tasks from file to task list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @param taskList list of tasks to save to file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @param parser parser object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @throws IOException If there is a error when reading from file."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public void loadBaby(TaskList taskList, Parser parser) throws IOException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        File file \u003d new File(path);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        if (file.createNewFile()) return;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        BufferedReader taskLoader \u003d new BufferedReader(new FileReader(path));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        String longCommand \u003d taskLoader.readLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        while (longCommand !\u003d null) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "            String[] keywords \u003d longCommand.split(\" \\\\|\\\\| \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "            Task cur \u003d null;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "            switch (keywords[1]) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                    cur \u003d new Todo(keywords[2]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                    taskList.getTaskList().add(cur);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                    cur \u003d new Deadline(keywords[2], parser.stringToTime(keywords[3]));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                    taskList.getTaskList().add(cur);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                    cur \u003d new Event(keywords[2], parser.stringToTime(keywords[3]));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                    taskList.getTaskList().add(cur);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                    System.out.println(\"error\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "            if (keywords[0].equals(\"1\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                assert cur !\u003d null;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "                cur.done();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "            longCommand \u003d taskLoader.readLine();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        taskLoader.close();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "helloImHai": 75
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "/** Class representation of Task. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    protected String task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    protected Boolean done \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * Creates Task object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @param task String describing what to do."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    Task(String task) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /** Sets this task as done. */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public void done() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * Returns the String representation of the task to print."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @return String representation of the task to print."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        if (done) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "            return \"[✓] \" + this.task;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "            return \"[✗] \" + this.task;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * Returns the String representation of the task to save."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @return String representation of the task to save."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        if (done) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "            return \"1\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "            return \"0\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "helloImHai": 49
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "/** Class representing task list */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * Creates a TaskList object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * Adds the task to list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @param task task to add"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * Gets the task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @return task list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "helloImHai": 33
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "/** Class representing todo task. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * Creates a Todo object"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @param task String containing what to do."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    Todo(String task) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * Returns String representation of Todo object to print."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @return String representation of the todo task to print."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * Returns String representation of Todo object to save."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @return String representation of the todo task to save."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public java.lang.String toSaveString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        return String.format(\"%s || todo || %s\", super.toSaveString(), this.task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "helloImHai": 33
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    Scanner io;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /** Initialises the Ui object with a Scanner object. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    Ui() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        this.io \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * Asks the user for input"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @return String representation of said input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public String getCommand() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        return io.nextLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /** Prints the Greeting. */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public void greeting() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        System.out.println(\"----------------------------\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        System.out.println(\"Hello I\u0027m your task manager!\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        System.out.println(\"----------------------------\\n\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /** Prints the Initial Prompt. */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public void initPrompt() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        System.out.println(\"\\n----------------------------\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        System.out.println(\"What tasks do you have dude?\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        System.out.println(\"----------------------------\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /** Prints a small line */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public void printSmallLine() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        System.out.println(\"    -----\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /** Prints bye message. */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public void bye() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        printSmallLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        System.out.println(\"    Bye bye friend!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        printSmallLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * Prints the task list"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @param tasks the task list"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public void showList(ArrayList\u003cTask\u003e tasks, String str) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        printSmallLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        System.out.println(\"    \" + str);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "            System.out.println(\"    \" + i + \". \" + tasks.get(i - 1));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        printSmallLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * Prints the task marked as done."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @param task task that is marked as done"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public void showDone(Task task) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        printSmallLine();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        System.out.println(\"    Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        System.out.println(\"    \" + task);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        printSmallLine();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * Prints the task deleted along with current task list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @param task task that is deleted"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @param tasks the task list"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public void showDelete(Task task, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        printSmallLine();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        System.out.println(\"    Nice! I\u0027ve deleted this task:\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        System.out.println(\"    \" + task);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        System.out.println(\"    Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        printSmallLine();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * Prints the task added to list."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @param task task that is added"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @param tasks task list"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public void showAdd(Task task, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        printSmallLine();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        System.out.println(\"    Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        System.out.printf(\"    %s\\n\", task);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        System.out.printf(\"    Now you have %d tasks in the list.\\n\", tasks.size());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        printSmallLine();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * Prints the Exception."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @param e Exception thrown."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public void showException(Exception e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        printSmallLine();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        System.out.println(\"    \" + e);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        printSmallLine();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * Prints the Exception."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     * @param e Exception that is not explicitly caught by our catches."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public void showUnknownException(Exception e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        printSmallLine();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        System.out.printf(\"    I don\u0027t know this error homie, take a look:\\n    %s\\n\", e);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        printSmallLine();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "helloImHai": 124
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "/** Exception to throw when the index given for done and delete is not valid. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "public class InvalidIndexException extends RuntimeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public InvalidIndexException(String key) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        super(\"\u0027\" + key + \"\u0027 is an invalid index!\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "helloImHai": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingParameterException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "/** Exception to throw when the params of commands are missing. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "public class MissingParameterException extends RuntimeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public MissingParameterException(String type) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        super(\"Missing parameters for \" + type);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "helloImHai": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "/** Exception to throw when deadline and event does not specify a time. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "public class MissingTimeException extends RuntimeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public MissingTimeException(String type) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        super(type + \" is missing time!\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "helloImHai": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/TimeFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "/** Exception to throw when the user input time format is wrong. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "public class TimeFormatException extends RuntimeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public TimeFormatException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        super(\"Please enter date in the format yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "helloImHai": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "/** Exception to throw when the command is not known. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "public class UnknownCommandException extends RuntimeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public UnknownCommandException(String command) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        super(\"Sorry my guy, I don\u0027t know the command: \u0027\" + command + \"\u0027\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "helloImHai": 8
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "import duke.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "import duke.exception.MissingTimeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "import duke.exception.TimeFormatException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public void handleDone_exceptionThrown() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        assertThrows(InvalidIndexException.class, () -\u003e duke.handleDone(\"abc\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    public void handleEvent_exceptionThrown() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        assertThrows(MissingTimeException.class, () -\u003e duke.handleEvent(\"my event\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "        assertThrows(TimeFormatException.class, () -\u003e duke.handleEvent(\"my event /at 1998/03/01 13\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "helloImHai": 28
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "  public void stringToTimeTest() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    assertEquals(parser.stringToTime(\"1998-03-15 1530\"), LocalDateTime.parse(\"1998-03-15 1530\", formatter));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "  }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "helloImHai": 17
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "event read book no time"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "deadline dead line no time"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "blah"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "event"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "deadline return book /by 2020-03-15 1530"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "event project meeting /at 2020-07-07 0707"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "done a"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "todo your butt"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "search book"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "search"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "search"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "helloImHai": 32
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/exception/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "helloImHai"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "helloImHai": 34
    }
  },
  {
    "path": "text-ui-test/saved-tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "1 || deadline || return book || 2020-03-15 1530"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "0 || event || project meeting || 2020-07-07 0707"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "helloImHai"
        },
        "content": "0 || todo || your butt"
      }
    ],
    "authorContributionMap": {
      "helloImHai": 3
    }
  }
]
