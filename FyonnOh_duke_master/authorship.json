[
  {
    "path": "Data/Duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "D  | 0 | math homework | 2020-09-09T09:00"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "E  | 1 | join club | 2020-09-04T09:00"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "D  | 0 | Science Howework | 2022-05-03T23:59"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "T  | 0 | make dinner"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "E  | 0 | ip  | 2020-07-09T09:00"
      }
    ],
    "authorContributionMap": {
      "FyonnOh": 5
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    id \u0027com.github.sherter.google-java-format\u0027 version \u00270.8\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "test {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "// group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FyonnOh": 44,
      "-": 15
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "# User Guide for Nyanko Duke-San"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "![Image of cat](./Ui.png)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "### Never forgets! "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "Edits on data from previous sessions are stored"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "### Different types of Tasks"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "Todo, Event and Deadline!"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "### Varying formats of date and time"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "DateTime entered maybe not necessarily be in the format of dd/mm/yyyy hhmm"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "### `list` - Prints out the list of current tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "### `delete` {task index} - Deletes task "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "### `todo` {task name} - Creates task of type \"todo\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "### `event` {task name /at date time} - Creates task of type \"event\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "`event ip /at 09/07/2020 0900`"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "Got it! I have added this task:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " [E][✓] ip (at: jul 9 2020, 9:00 am)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " Now you have 5 tasks in the list! [^._.^]ﾉ"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " ### `deadline` {task name /by date time} - Creates task of type \"deadline\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " ### `edit` {task index date time} - Edits the date time of task"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " ### `done` {task index} - Mark task as done"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " ### `bye` - Exits program :yum:"
      }
    ],
    "authorContributionMap": {
      "FyonnOh": 29,
      "-": 14
    }
  },
  {
    "path": "src/main/java/DeadLine.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " * \u003ch1\u003e Deadline \u003c/h1\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " * The DeadLine class extends the Task Class. The DeadLine class is associated with Tasks that have a deadline."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " * Hence, the LocalDateTime attribute of this class is derived from what comes after \"/by\" in the user\u0027s command"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " * \u003cp\u003eThe Deadline class contains a LocalDateTime object\u003c/p\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    protected LocalDateTime dateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public Deadline(String description, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), this.dateTime.format(DateTimeFormatter.ofPattern(\"\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "                + \"MMM d yyyy, h:mm a\")));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        return \"D \" + super.toFileString() + \" | \" + this.dateTime;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public String getType(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        return \"deadline\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public void edit(LocalDateTime dt) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        this.dateTime \u003d dt;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FyonnOh": 37
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " * \u003ch1\u003e DialogBox \u003c/h1\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    private Text dialog;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FyonnOh": 57
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    private Boolean hasEnded \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    private static Path filePath \u003d Paths.get(\"Data\", \"Duke.txt\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    private static Storage storage \u003d new Storage(filePath.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        this.taskList \u003d new TaskList(this.storage.load());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        this.parser \u003d new Parser();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        System.out.println(duke.ui.printIntro());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        while(!duke.ui.hasEnded()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            String input \u003d duke.ui.getInput();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "                System.out.println(duke.start(input));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "                duke.ui.printErr(e);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author BransonNg -reused"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    //heavily referenced to BransonNg\u0027s code"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    private String start(String input) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        switch (input) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"List\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                return this.ui.printList(this.taskList);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                return this.ui.printList(this.taskList);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                this.hasEnded \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                return this.ui.printBye();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                if (this.parser.isDoneOrDelete(input)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                    int taskIndex \u003d this.parser.getTaskIndex(input) - 1;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (taskIndex \u003e\u003d this.taskList.size()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                        throw new DukeException(\"task index out of range!\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (input.contains(\"done\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.taskList.markDone(taskIndex);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                            this.storage.save(taskList);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                        } catch (IOException err) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                            System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                        return this.ui.printMarkedTask(this.taskList.get(taskIndex));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                        Task removedTask \u003d this.taskList.removeTask(taskIndex);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                            this.storage.save(taskList);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                        } catch (IOException err) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                            System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                        return this.ui.printRemovedTask(removedTask, taskList.size());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                } else if (this.parser.isFind(input)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                    String searchTerm \u003d this.parser.getSearchTerm(input);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                    String searchResults \u003d"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                            taskList.search(searchTerm)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                                    .stream()"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                                    .collect(Collectors.joining(String.format(\"%n\")));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (searchResults.isEmpty()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                        return \"No matching tasks!\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                    return this.ui.printSearchResult(searchResults);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                } else if (this.parser.isEdit(input)) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                    int editTaskIndex \u003d Integer.parseInt(input.split(\"\\\\s+\")[1]) - 1;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                    Task t \u003d this.taskList.get(editTaskIndex);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (t.getType().equals(\"todo\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                        throw new DukeException(\"Todo tasks do not have date and time! Only Events and Deadline \" +"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                                \"tasks can be edited!\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (input.split(\"\\\\s+\").length \u003c 4) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                        throw new DukeException(\"Please provide Date and Time\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                    String taskDesc \u003d this.parser.getDescription(input);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                    String dateTime \u003d this.parser.getDateTime(taskDesc, \"\\\\d+\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                    LocalDate date \u003d this.parser.getDate(dateTime);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                    LocalTime time \u003d this.parser.getTime(dateTime);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                    LocalDateTime dT\u003d LocalDateTime.of(date, time);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                    t.edit(dT);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                    return this.ui.printEdited(this.taskList);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (input.split(\"\\\\s+\").length \u003c 2) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "                        throw new DukeException(\"Command not recognised!\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "                    String taskType \u003d this.parser.getType(input);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "                    String taskDesc \u003d this.parser.getDescription(input);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                    switch (taskType) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                        case \"todo\":"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                            ToDo todo \u003d new ToDo(taskDesc);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                            this.taskList.addTask(todo);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                                this.storage.save(taskList);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                            } catch (IOException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                            return this.ui.printTaskAdded(todo, this.taskList.size());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                        case \"event\":"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                            String taskName \u003d this.parser.getTaskName(taskDesc, \"/at\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                            String dT \u003d this.parser.getDateTime(taskDesc, \"/at\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                            LocalDate date \u003d this.parser.getDate(dT);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                            LocalTime time \u003d this.parser.getTime(dT);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                            LocalDateTime dateTime \u003d LocalDateTime.of(date, time);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                            Event event \u003d new Event(taskName, dateTime);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                            this.taskList.addTask(event);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                                this.storage.save(taskList);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                            } catch (IOException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "                                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "                            return this.ui.printTaskAdded(event, this.taskList.size());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                        case \"deadline\":"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "                            String taskNamee \u003d this.parser.getTaskName(taskDesc, \"/by\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "                            String dTT \u003d this.parser.getDateTime(taskDesc, \"/by\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                            LocalDate datee \u003d this.parser.getDate(dTT);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "                            LocalTime timee \u003d this.parser.getTime(dTT);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "                            LocalDateTime dateTimee \u003d LocalDateTime.of(datee, timee);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "                            Deadline t \u003d new Deadline(taskNamee, dateTimee);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "                            this.taskList.addTask(t);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "                                this.storage.save(taskList);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "                            } catch (IOException e) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "                                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "                            return this.ui.printTaskAdded(t, this.taskList.size());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "                        default:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "                            throw new DukeException(\"Task not recognised!\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            String output \u003d start(input);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        } catch (DukeException err ) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            return err.getMessage();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public boolean hasEnded() {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        return this.hasEnded;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FyonnOh": 48,
      "-": 119
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " * \u003ch1\u003e DukeException \u003c/h1\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " * DukeException is thrown whenever there is an error when executing the duke program"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        String msg \u003d this.getMessage();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        String str \u003d \"\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        switch (msg) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            str \u003d \"Sorry~ The description of a todo cannot be empty desu!! \u003e:(\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            str \u003d \"Sorry~ The description of a deadline cannot be empty desu!! \u003e:(\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            str \u003d \"Sorry~ The description of a event cannot be empty desu!! \u003e:(\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            str \u003d \"Sorry~ The task number is invalid!! \u003e:(\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        case \"invalid\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            str \u003d \"Sorry~ I don\u0027t know what this means \u003e.\u003c\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            str \u003d \"Sorry~ The task number is invalid!! \u003e:(\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        case \"timing\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            str \u003d \"Sorry~ There needs to be a timing!\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            str \u003d msg;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FyonnOh": 41
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " * \u003ch1\u003e Event \u003c/h1\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " * The Event class extends the Task Class. The Event class is associated with Tasks that occurs at a"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " * designated time and date."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " * Hence, the LocalDateTime attribute of this class is derived from what comes after \"at\" in the user\u0027s command"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " * \u003cp\u003eThe Event class contains a LocalDateTime object\u003c/p\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    protected LocalDateTime dateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public Event(String description, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "                this.dateTime.format(DateTimeFormatter.ofPattern(\"\" + \"MMM d yyyy, h:mm a\")));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        return \"E \" + super.toFileString() + \" | \" + this.dateTime;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        return \"event\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public void edit(LocalDateTime dt) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        this.dateTime \u003d dt;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FyonnOh": 38
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " * \u003ch1\u003e Launcher \u003c/h1\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FyonnOh": 11
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FyonnOh": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " * \u003ch1\u003e MainWindow \u003c/h1\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpg\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        this.duke \u003d d;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        dialogContainer"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "                .getChildren()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "                .addAll("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "                    DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "                    DialogBox.getDukeDialog(response, dukeImage));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FyonnOh": 53
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " * \u003ch1\u003e Parser \u003c/h1\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " * Parser deals with making sense of the user command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    private static String[] timeRegexes \u003d {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            \"H:m\", \"Hmm\", \"H.m\", \"h.m a\", \"h.m a\", \"h:m a\", \"h:m a\", \"hmm a\", \"hmma\", \"h a\", \"ha\", \"H\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    };"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    private static String[] dateRegexes \u003d {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            \"ddMMyyyy\", \"yyyyMMdd\", \"d-M-yyyy\", \"d/M/yyyy\", \"yyyy-M-d\", \"yyyy/M/d\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    };"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "     * This method determines whether the user command is a \"Done\" or \"Delete\" command"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "     * @param input User command string"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "     * @return a boolean value of whether it is a Done or Detele command"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "     * @throws DukeException if there is any error in the user command"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author BransonNg - reused"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    // Previously written code by me did not abide single responsibility principle. Thus, referred to BransonNg\u0027s code"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    //for how to re-write it and also how to implement regex."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isDoneOrDelete(String input) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        String doneRegex \u003d"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                \"(^(done|delete)\\\\s+.*|.*\\\\s+(done|delete)$)\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        String actionWithNumRegex \u003d \"^(done|delete)\\\\s+\\\\d+$\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        String actionAtFrontRegex \u003d  \"^(done|delete)\\\\s+.*\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        if(Pattern.matches(doneRegex, input)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            if(!Pattern.matches(actionAtFrontRegex, input)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new DukeException(\"Command should be placed at the front!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (!Pattern.matches(actionWithNumRegex, input)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new DukeException(\"Please provided the task number!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "     * This method determines whether the user command is a \"Find\" command"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param input User command string"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return a boolean value of whether it is a \"Find\" command"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DukeException if there is any error in the user command"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isFind(String input) throws DukeException{"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        String findRegex \u003d"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                \"(^(find)\\\\s+.*|.*\\\\s+(find)$|^(find))\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        String withSearchTermRegex \u003d \"^(find)\\\\s+.*\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        if(Pattern.matches(findRegex, input)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            if(!Pattern.matches(withSearchTermRegex, input)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new DukeException(\"Search term must be provided!\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isEdit(String input) throws DukeException{"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        String editRegex \u003d"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                \"(^(edit)\\\\s+.*|.*\\\\s+(find)$|^(edit))\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        String withEditTerm \u003d \"^(edit)\\\\s+.*\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        if(Pattern.matches(editRegex, input)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            if(!Pattern.matches(withEditTerm,input)) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                throw new DukeException(\"Desired Task number should be provided!\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     * This method returns the task index in a user command string"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param input user command string"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Task index integer"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    public int getTaskIndex(String input) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] splitInput \u003d input.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        return Integer.parseInt(splitInput[splitInput.length - 1]);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "     * This method returns the type of the user command"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param input user command string"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return type string"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getType(String input) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        return input.split(\"\\\\s+\")[0];"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "     * returns the description (including time and date) provided by user for the task"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param input user command string"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return task description string"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDescription(String input) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        int len \u003d input.split(\"\\\\s+\")[0].length();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        return input.substring(len).trim();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "     * returns the name of the task"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param input user command string"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param regex regex depending on the type of task"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return name of task string"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getTaskName(String input, String regex) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        return input.split(regex)[0];"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "     * returns the search term of a \"Find\" command"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param input User command string"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return search term string"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getSearchTerm(String input) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        return input.substring(5).trim();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "     * returns date in LocalDate of user command"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param dateTime string containing both the date and time"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return date in type LocalDate"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DukeException if there is any error in the format of input"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    public static LocalDate getDate(String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        String date \u003d dateTime.split(\" \")[0].trim();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String pattern : Parser.dateRegexes) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "                return LocalDate.parse(date, DateTimeFormatter.ofPattern(pattern));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (Exception err) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        throw new DukeException("
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "                        \"Missing time/date information %n please provide date then time separated by a space\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "     * returns time in LocalTime of user command"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param dateTime string containing both the date and time"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return time in type LocalTime"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DukeException if there is any error in the format of input"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    public static LocalTime getTime(String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        String time;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            String[] split \u003d dateTime.split(\" \");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "            time \u003d String.join(\" \", Arrays.copyOfRange(split, 1, split.length))"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "                    .trim()"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "                    .toUpperCase();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new DukeException("
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "                    String.format("
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "                            \"Missing time/date information %n please provide date then time separated by a space\"));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String pattern : Parser.timeRegexes) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "                return LocalTime.parse(time, DateTimeFormatter.ofPattern(pattern));"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (Exception err) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        throw new DukeException(\"Time input is formatted poorly\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "     * returns a string of the date and time information from the user command"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param description description of task provided by user"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param regex regex depending on task type"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return string containing date and time information"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws DukeException if there is any error in the format of user command"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String getDateTime(String description, String regex) throws DukeException {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        Matcher matcher \u003d Pattern.compile(regex).matcher(description);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        int index \u003d matcher.find() ? matcher.start() : -1;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new DukeException(String.format(\"Please provide %s for this event type\", regex));"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        String dateTime \u003d description.substring(index + regex.length()).trim();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        if (dateTime.length() \u003d\u003d 0) throw new DukeException(\"Please provide a time\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        return dateTime;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FyonnOh": 29,
      "-": 173
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " * \u003ch1\u003e Storage \u003c/h1\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " * The Storage class handles the loading of tasks from the disk and saving tasks to the disk."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " * This class has two methods: load() and save()."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " * \u003cp\u003e Storage contains a String attribute \"filePath\" which contains the filepath of the file that stores the data\u003c/p\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "     * this method loads the data from the storage file and returns an arraylist containing the details of the tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "     * stored"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "     * @return ArrayList of the stored tasks"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            File file \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "                String str \u003d sc.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "                String[] splitStr \u003d str.split(\"\\\\s+\" + \"\\\\|\" + \"\\\\s+\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "                String taskType \u003d splitStr[0];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "                String taskStatus \u003d splitStr[1];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "                if (taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "                    ToDo t \u003d new ToDo(splitStr[2]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "                    tasks.add(t);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "                } else if (taskType.equals(\"E\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "                    LocalDateTime dateTime \u003d LocalDateTime.parse(splitStr[3].trim());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "                    Event t \u003d new Event(splitStr[2], dateTime);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "                    tasks.add(t);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "                } else if (taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "                    LocalDateTime dateTime \u003d LocalDateTime.parse(splitStr[3].trim());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "                    Deadline t \u003d new Deadline(splitStr[2], dateTime);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "                    tasks.add(t);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "                if (taskStatus.equals(\"1\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "                    tasks.get(tasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "     * this method rewrites the storage file with the latest list of tasks"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "     * @param taskList the latest tasklist"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "     * @throws IOException thrown when there is an error with the file"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public void save(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        FileWriter fw \u003d new FileWriter(this.filePath);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            Task t \u003d taskList.get(i);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            fw.write(t.toFileString() + \"\\n\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FyonnOh": 73
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " * \u003ch1\u003e Task \u003c/h1\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " * The Task class represents the task the user inputs into the Duke program."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " * Its attributes contain a boolean value, which tracks whether the task has been completed."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " * And a String object, which contains the description of the task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "     * The getStatusIcon returns a string that contains the icon depending on the value of the \"isDone\" attribute."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "     * @return String the icon representing the \"isDone\" boolean value"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "     * The markAsDone method changes the boolean value of the \"isDone\" attribute to True."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        String icon \u003d (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        return \"[\" + icon + \"]\" + \" \" + this.description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public boolean contains(String keyWord) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        return this.description.contains(keyWord);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        int status \u003d (isDone ? 1 : 0);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        return \" | \" + status + \" | \" + this.description;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public String getType() {return \"\";};"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public void edit(LocalDateTime dt){};"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FyonnOh": 50
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " * \u003ch1\u003e TaskList \u003c/h1\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " * TaskList keeps track of the current tasks involved in the program"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public void markDone(int index) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        Task t \u003d tasks.get(index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        t.markAsDone();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public Task removeTask(int index) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        return this.tasks.remove(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public ArrayList\u003cString\u003e search(String searchTerm) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        ArrayList\u003cString\u003e taskString \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            Task curr \u003d this.tasks.get(i);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            if (curr.contains(searchTerm)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "                taskString.add(String.format(\"%d.%s\", i + 1, this.tasks.get(i)));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        return taskString;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FyonnOh": 50
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " * \u003ch1\u003e ToDo \u003c/h1\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " * The ToDo class extends the Task Class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        return \"T \" + super.toFileString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        return \"todo\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public void edit(LocalDateTime dt) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FyonnOh": 32
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " * \u003ch1\u003e Ui \u003c/h1\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " * The Ui class deals with the interaction with the User"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    private String logo \u003d \" ____        _        \\n\" + \"|  _ \\\\ _   _| | _____ \\n\" + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\" + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    private final String separator \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    private final String indent1 \u003d \" \".repeat(4);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    private final String indent2 \u003d \" \".repeat(5);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    private final String indent3 \u003d \" \".repeat(7);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    private boolean hasExited \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public String printList(TaskList tasks) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        String str \u003d \"Here are the tasks in your list! \\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        str +\u003d (separator + \"\\n\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            str +\u003d (String.format(\"%d.%s\", i + 1, tasks.get(i)) + \"\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        str +\u003d (separator + \"\\n\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public String printIntro() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        return String.format(\"Hello from %n%s%nKonnichiwa! I am Duke the cat! What can I do for you? meow~ (^.___.^)\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "                logo);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        String input \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        if(input.toLowerCase().equals(\"bye\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            this.close();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            return \"bye\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public void close() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        this.hasExited \u003d true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        this.sc.close();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public boolean hasEnded() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        return this.hasExited;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public String printBye() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        return \"Sayonara~ \\n\" + \" (_＼ヽ\\n\" + \"　 ＼＼ .Λ＿Λ.\\n\" + \"　　 ＼(　ˇωˇ)　\\n\" + \"　　　 \u003e　⌒ヽ\\n\" + \"　　　/ 　 へ＼\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "                + \"　　 /　　/　＼＼\\n\" + \"　　 ﾚ　ノ　　 ヽ_つ\\n\" + \"　　/　/\\n\" + \"　 /　/|\\n\" + \"　(　(ヽ\\n\" + \"　|　|、＼\\n\" + \"　| 丿 ＼ ⌒)\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "                + \"　| |　　) /\\n\" + \"`ノ ) 　 Lﾉ\\n\" + \"(_／\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public String printMarkedTask(Task t) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        return String.format(\"%s%nGood job! I have marked the task as done! meow~%n\",separator)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "                + String.format(\"%s%s%n%s\", indent1, t, separator);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public String printRemovedTask(Task t, int size) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        return String.format(\"%s%n\", separator) + String.format("
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "                \"Noted. I\u0027ve removed this task:%n%s%nNow you have %d tasks in the list![^._.^]ﾉ%n%s\", t, size, separator);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public String printTaskAdded(Task t, int size) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        return String.format(\"%s%nGot it! I have added this task:%n%s%s%n\", separator, indent1, t)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "                + String.format(\"Now you have %d tasks in the list! [^._.^]ﾉ %n%s\", size, separator);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public void printErr(DukeException err) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        System.out.println(err);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public String printSearchResult(String str) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        return String.format(\"%s%n%s%n%s\", separator, str, separator);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public String printAskForDateTime() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        return String.format(\"Please enter new date and time![^._.^]ﾉ\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public String printEdited(TaskList tasks) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        return String.format(\"Your task has been edited!%n%s\", this.printList(tasks));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FyonnOh": 91
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "\u003c?import javafx.scene.text.Text?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        \u003cText fx:id\u003d\"dialog\" text\u003d\"Label\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "FyonnOh": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "FyonnOh": 19
    }
  },
  {
    "path": "src/test/java/Duke/DeadLineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "public class DeadLineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public void testDeadlineObject() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        DeadLine deadline \u003d new DeadLine(\"return library books\", LocalDateTime.parse(\"2019-02-05T20:00\"));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        Assertions.assertEquals(\"[D][\" + \"\\u2718\" + \"]\"+  \" return library books (by: Feb 5 2019, 8:00 pm)\", deadline.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public void testDeadlinePrint() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        DeadLine deadline \u003d new DeadLine(\"return library books\", LocalDateTime.parse(\"2019-02-05T20:00\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        Assertions.assertEquals(\"D  | 0 | return library books | 2019-02-05T20:00\", deadline.toFileString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FyonnOh": 19
    }
  },
  {
    "path": "src/test/java/Duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public void testTaskListAddTask() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        tasks.addTask(new ToDo(\"Borrow book\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        Assertions.assertEquals(tasks.get(0).toString(), \"[T][\" + \"\\u2718\" + \"] Borrow book\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    public void testTaskListDeleteTask() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        tasks.addTask(new ToDo(\"Borrow book\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        tasks.addTask(new Event(\"sister birthday\", LocalDateTime.parse(\"2010-02-01T18:00\")));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        tasks.deleteTask(1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "        Assertions.assertEquals(tasks.size(), 1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "FyonnOh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "FyonnOh": 24
    }
  }
]
