[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "beatricetay": 2
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "version \u00272.0.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    mainClassName \u003d \"Launcher\" //seedu.duke.Duke\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    archiveVersion \u003d \"2.0\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "test {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "beatricetay": 28
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "T , X , swim"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "T , O , search coral"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "D , O , find nemo , 2020-02-10"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "E , X , fish and meet , 2020-02-03"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "D , X , eat , 2020-02-11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "T , X , shark"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 6
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 commandType could be found in your PATH."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "@rem Get commandType-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "@rem Slurp the commandType line arguments."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "@rem Setup the commandType line"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "-": 80,
      "beatricetay": 4
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.interact.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.interact.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Creates a new Duke object which initializes the TaskList, Ui and Storage."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        String homeDir \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        String fileName \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        Path path  \u003d Paths.get(homeDir, \"duke\", \"data\", fileName);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            storage \u003d new Storage(path);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            tasks \u003d storage.load();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            ui \u003d new Ui(parser);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        } catch (DukeException error) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            System.out.println(error);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        assert tasks !\u003d null : \"TaskList should be instantiated.\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Returns the output from the program."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param input String the user inputted."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @return String reply from the program."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        String output \u003d ui.getOutput(input, tasks, storage);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        assert !output.isEmpty() : \"The output should not be empty.\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 1,
      "beatricetay": 46
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.window.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * A GUI for duke.Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 33
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.exception.DukeExceptionLoad;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.exception.DukeExceptionSave;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * Loads and Stores the TaskList to Path."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private Path path;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public Storage(Path path) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Loads the tasks from Path into TaskList."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @return Updated TaskList"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @throws DukeException Error resulting from loading Tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public TaskList load() throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            List\u003cString\u003e lines \u003d Files.readAllLines(path);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            for (String curLine : lines) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                String[] components \u003d curLine.split(\" , \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                if (components.length \u003c 3) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                String commandType \u003d components[0];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                Task newTask;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                switch (commandType) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    newTask \u003d new ToDo(\" \" + components[2]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    newTask.setStatus(components[1]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    tasks.addTask(newTask);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    newTask \u003d new Deadline(\" \" + components[2], LocalDate.parse(components[3]));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    newTask.setStatus(components[1]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    tasks.addTask(newTask);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    newTask \u003d new Event(\" \" + components[2], LocalDate.parse(components[3]));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    newTask.setStatus(components[1]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    tasks.addTask(newTask);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    throw new DukeExceptionLoad(\"format\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        } catch (IOException error) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            throw new DukeExceptionLoad(\"filetype\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Saves the current TaskList into Path."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param tasks Current TaskList."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @throws DukeException Error from saving Tasks."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public void save(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            String savedString \u003d tasks.saveFormat();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            BufferedWriter writer \u003d Files.newBufferedWriter(path);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            writer.write(savedString);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            writer.flush();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        } catch (IOException error) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            throw new DukeExceptionSave();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 93
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * Stores and maintains the list of tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private int size;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        size \u003d 0;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Formats the current tasks into a String to be saved into a txt file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @return A String of all the current tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public String saveFormat() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            Task t \u003d tasks.get(i);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            output.append(t.writeToFile()).append(\"\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        size++;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Removes the Task at index from the List."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param index int index of the Task to be removed."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public void remTask(int index) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        assert index \u003e 0 : \"Invalid index is used.\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        size--;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public void markDone(int index) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        tasks.get(index).markDone();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return size;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 59
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    void execute(TaskList tasks, Storage storage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    String output();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 11
    }
  },
  {
    "path": "src/main/java/duke/command/CommandAdd.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.interact.UiDesign;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * Represents an command that adds a new Task to the TaskList."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class CommandAdd implements Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private StringBuilder appendedText;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    Task taskToBeAdded;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Remembers the Task to be added in execute."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param taskToBeAdded Task to be added."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public CommandAdd(Task taskToBeAdded) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        this.taskToBeAdded \u003d taskToBeAdded;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Adds the Task to the TaskList and generates the StringBuilder for output."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param tasks TaskList to store the Task in."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param storage Storage to save data."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @throws DukeException Exception thrown if saving fails."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public void execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        int numTasks \u003d tasks.getSize() + 1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        appendedText \u003d new StringBuilder(UiDesign.ADD_TOP_PART.getString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        appendedText.append(taskToBeAdded)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                .append(\"\\n\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                .append(\"Now you have \").append(numTasks).append(\" tasks in the list.\\n\")"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                .append(UiDesign.BORDER.getString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        tasks.addTask(taskToBeAdded);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public String output() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return appendedText.toString();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 47
    }
  },
  {
    "path": "src/main/java/duke/command/CommandBye.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.interact.UiDesign;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * Represents a bye command where the program will shut down."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class CommandBye implements Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Saves the TaskList into Storage."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param tasks TaskList to be stored."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param storage Storage where the TaskList will be saved in."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @throws DukeException Exception thrown if saving fails."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public void execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public String output() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return UiDesign.BYE.getString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 30
    }
  },
  {
    "path": "src/main/java/duke/command/CommandDel.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.interact.UiDesign;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class CommandDel implements Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private StringBuilder appendedText;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Saves the index in the TaskList to be deleted in execute."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param index Index of task to be deleted."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public CommandDel(int index) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Deletes the Task from the TaskList and generates the StringBuilder for output."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param tasks TaskList where Task will be deleted from."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param storage Storage to save TaskList."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @throws DukeException Exception thrown if TaskList failed to save."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public void execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        int numTasks \u003d tasks.getSize() - 1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        appendedText \u003d new StringBuilder(UiDesign.REMOVE_TOP_PART.getString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        appendedText.append(tasks.getTask(index))"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                .append(\"\\n\")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                .append(\"Now you have \").append(numTasks).append(\" tasks in the list.\\n\")"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                .append(UiDesign.BORDER.getString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        tasks.remTask(index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public String output() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return appendedText.toString();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 43
    }
  },
  {
    "path": "src/main/java/duke/command/CommandDone.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.interact.UiDesign;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * Represents the done command where the task will be marked done."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class CommandDone implements Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private StringBuilder appendedText;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Saves the index of the Task that will be marked done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param index Index of Task that will be marked done."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public CommandDone(int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Marks the Task at index as done and generates the StringBuilder for output."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param tasks TaskList where the Task that will be marked done is from."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param storage Storage to save data."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @throws DukeException Exception thrown if saving fails."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public void execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        tasks.markDone(index);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        appendedText \u003d new StringBuilder(UiDesign.DONE_TOP_PART.getString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        appendedText.append(tasks.getTask(index))"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                .append(\"\\n\")"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                .append(UiDesign.BORDER.getString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public String output() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return appendedText.toString();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 45
    }
  },
  {
    "path": "src/main/java/duke/command/CommandFind.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.interact.UiDesign;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * Represents the find command where the tasks that possess the keyword(s) given by the user will be listed."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class CommandFind implements Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private StringBuilder appendedText;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Remembers the keyword(s) that the user input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param keyword String of the keyword(s)."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public CommandFind(String keyword) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Appends the Tasks that contains the keyword(s) into appendedText for the output."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param tasks TaskList where the Tasks will be searched from."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param storage Storage to save data."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @throws DukeException Exception thrown if saving fails."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public void execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        appendedText \u003d new StringBuilder(UiDesign.FIND_TOP_PART.getString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            Task task \u003d tasks.getTask(i - 1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            if (task.getDetails().contains(keyword)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                appendedText.append(i).append(\".\").append(task).append(\"\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        appendedText.append(UiDesign.BORDER.getString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public String output() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return appendedText.toString();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 49
    }
  },
  {
    "path": "src/main/java/duke/command/CommandList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.interact.UiDesign;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * Represents the list command where all current tasks will be listed."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class CommandList implements Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private StringBuilder appendedText;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Appends the Tasks into the StringBuilder for the output."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param tasks TaskList to be listed."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param storage Storage to save data."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public void execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        appendedText \u003d new StringBuilder(UiDesign.LIST_TOP_PART.getString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            appendedText.append(i).append(\".\")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    .append(tasks.getTask(i - 1)).append(\"\\n\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        appendedText.append(UiDesign.BORDER.getString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public String output() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return appendedText.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 33
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * Generates an error message for incorrect user input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class DukeException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    protected String errorMsg \u003d \"\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        assert !errorMsg.isEmpty() : \"Error message should not be empty.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return \"                    -~~o~~-\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                + errorMsg + \"\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                + \"                    -~~o~~-\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 17
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeExceptionCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * Generates an error message for the situation where user input cant be decoded."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class DukeExceptionCommand extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public DukeExceptionCommand() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        super.errorMsg \u003d \"Instruction unclear. Fin stuck in microwave.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeExceptionDate.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * Generates an error message for the situation where a date was not given for a Deadline or Event Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class DukeExceptionDate extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public DukeExceptionDate(String task) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        super.errorMsg \u003d \"I need a date for \" + task + \". Did you specify one with the tag?\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeExceptionDateFormat.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * Generates an error message for the situation where a date was not given in the yyyy-mm-dd format."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class DukeExceptionDateFormat extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public DukeExceptionDateFormat() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        super.errorMsg \u003d \"The dates need to be in yyyy-mm-dd format.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeExceptionDescription.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * Generates an error message for the situation where the description of the task was not given."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class DukeExceptionDescription extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public DukeExceptionDescription(String task) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        super.errorMsg \u003d \"More details for the \" + task + \" please?\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeExceptionIndex.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * Generates an error message for the situation where the given index for Remove or Done command is not suitable."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class DukeExceptionIndex extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Generates the appropriate error message."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param task Task that the Exception was made at."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public DukeExceptionIndex(String task) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        String msg;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        if (task.equals(\"delete\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            msg \u003d \"I need a valid index to delete them.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            msg \u003d \"I need a valid index to find which item to mark as done.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        super.errorMsg \u003d msg;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 20
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeExceptionLoad.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * Generates an error message for the situation where the txt file cannot be read from."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class DukeExceptionLoad extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Generates the correct error message for each load error."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public DukeExceptionLoad(String type) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        case \"filetype\":"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            super.errorMsg \u003d \"... What were the tasks? I cant seem to recall them.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        case \"path\":"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            super.errorMsg \u003d \"Hmmm... I cant seem to locate where I have written the tasks at.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        case \"format\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            super.errorMsg \u003d \"My memory was formatted in the wrong manner.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            super.errorMsg \u003d \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 29
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeExceptionSave.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * Generates an error message for the situation where the txt file cannot be written to."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class DukeExceptionSave extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public DukeExceptionSave() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        super.errorMsg \u003d \"I... cant remember the tasks on the list...\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 11
    }
  },
  {
    "path": "src/main/java/duke/interact/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "package duke.interact;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.command.CommandAdd;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.command.CommandBye;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.command.CommandDel;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.command.CommandDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.command.CommandFind;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.command.CommandList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.exception.DukeExceptionCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.exception.DukeExceptionDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.exception.DukeExceptionDateFormat;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.exception.DukeExceptionDescription;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.exception.DukeExceptionIndex;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * Parses user input and checks whether the user has given wrongly formatted input."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Returns a Command representing the user input."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param line String input by user."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param tasks Current TaskList."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @return Command representing user input."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @throws DukeException Exception thrown if user input is wrongly formatted."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public Command parse(String line, TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        int size \u003d tasks.getSize();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        switch (line) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            return new CommandBye();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            return new CommandList();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            String[] comArs \u003d line.split(\"\\\\s\", 2);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            String inputCommand \u003d comArs[0];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            int index;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            String details;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            String[] msgAndDate;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            switch (inputCommand) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                if (comArs.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    throw new DukeExceptionIndex(\"done\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                index \u003d Integer.parseInt(comArs[1]) - 1;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                if (index \u003e size - 1) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    throw new DukeExceptionIndex(\"done\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                assert index \u003e\u003d 0 : \"Index should be greater than 0.\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                return new CommandDone(index);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                if (comArs.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    throw new DukeExceptionIndex(\"delete\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                index \u003d Integer.parseInt(comArs[1]) - 1;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                if (index \u003e size - 1) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    throw new DukeExceptionIndex(\"delete\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                assert index \u003e\u003d 0 : \"Index should be greater than 0.\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                return new CommandDel(index);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                details \u003d line.substring(4);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                if (details.isBlank()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    throw new DukeExceptionDescription(\"todo\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                return new CommandAdd(new ToDo(details));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                details \u003d line.substring(5);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                if (details.isBlank()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    throw new DukeExceptionDescription(\"event\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                msgAndDate \u003d details.split(\" /at \", 2);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                if (msgAndDate.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    throw new DukeExceptionDate(\"event\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    LocalDate date \u003d LocalDate.parse(msgAndDate[1]);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    return new CommandAdd(new Event(msgAndDate[0], date));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    throw new DukeExceptionDateFormat();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                details \u003d line.substring(8);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                if (details.isBlank()) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    throw new DukeExceptionDescription(\"deadline\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                msgAndDate \u003d details.split(\" /by \", 2);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                if (msgAndDate.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    throw new DukeExceptionDate(\"deadline\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    LocalDate date \u003d LocalDate.parse(msgAndDate[1]);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    return new CommandAdd(new Deadline(msgAndDate[0], date));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    throw new DukeExceptionDateFormat();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                return new CommandFind(line.substring(4));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                throw new DukeExceptionCommand();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 128
    }
  },
  {
    "path": "src/main/java/duke/interact/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "package duke.interact;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * Deals with interactions with the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public Ui(Parser parser) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        this.parser \u003d parser;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Gets the output for the user input, including wrongly formatted user input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param input String input by the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @return String response from the program."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public String getOutput(String input, TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            Command c \u003d parser.parse(input, tasks);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            c.execute(tasks, storage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            return c.output();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            return e.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 33
    }
  },
  {
    "path": "src/main/java/duke/interact/UiDesign.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "package duke.interact;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * Consists of designs that will be used to respond to user input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public enum UiDesign {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    BORDER(\"                    -~~o~~- \\n\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    BYE(\"Bye! See you soon. \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            + BORDER.getString()),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    GREET(\"Hello, I\u0027m Dory!\\nWhat do you want to do today? \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            + BORDER.getString()),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    DONE_TOP_PART(\"Great job! I\u0027ve marked it as done: \\n\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    REMOVE_TOP_PART(\"I\u0027ve removed it: \\n\"),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    LIST_TOP_PART(\"Just keep swimming, swimming, swimming... \\n\"),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    ADD_TOP_PART(\"I will try to remember it: \\n\"),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    FIND_TOP_PART(\"Here\u0027s what I\u0027ve found amongst all the marine litter: \\n\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private final String text;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    UiDesign(final String text) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        this.text \u003d text;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public String getString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 28
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * Creates a Deadline Task with date."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Creates a Deadline Task with date."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param msg Details of the Deadline Task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param date LocalDate that the Deadline needs to be done by."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public Deadline(String msg, LocalDate date) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        super.type \u003d \"D\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        super.time \u003d date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return super.writeToFile() + \" , \" + super.time;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return super.toString() + \" (by: \" + super.time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 30
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * Creates an Event Task with date."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Creates an Event Task with LocalDate."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param msg Details of the Event Task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param date Date that the Event will be done at."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public Event(String msg, LocalDate date) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        super.type \u003d \"E\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        super.time \u003d date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return super.writeToFile() + \" , \" + super.time;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return super.toString() + \" (at: \" + super.time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 32
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    protected String msg;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    protected String status;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    protected LocalDate time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Creates a Task with the details of the task kept in msg."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Status of the Task is instantiated to X."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param msg Details of the Task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public Task(String msg) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        this.msg \u003d msg;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        status \u003d \"X\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        status \u003d \"O\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public String getDetails() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public void setStatus(String status) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        this.status \u003d status;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        assert (type.equals(\"T\") | type.equals(\"D\") | type.equals(\"E\")) : \"Type should either be T, D or E.\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return type + \" , \" + status + \" ,\" + msg;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        assert (type.equals(\"T\") | type.equals(\"D\") | type.equals(\"E\")) : \"Type should either be T, D or E.\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return \"[\" + type + \"][\" + status + \"]\" + msg;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 43
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * Creates a todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public ToDo(String msg) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        super.type \u003d \"T\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 11
    }
  },
  {
    "path": "src/main/java/duke/window/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "package duke.window;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        dialog.setMinHeight(Region.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        dialog.setWrapText(true);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Creates a dialog box for the User."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param text String to be displayed"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param img Image representing User."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @return DialogBox to be displayed."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        DialogBox userDiaBox \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        userDiaBox.setSpacing(10);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return userDiaBox;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Creates a dialog box for Duke."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param text String to be displayed"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param img Image representing Duke."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @return DialogBox to be displayed."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        db.setSpacing(15);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 80
    }
  },
  {
    "path": "src/main/java/duke/window/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "package duke.window;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.interact.UiDesign;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * Controller for duke.window.MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/nemo.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private Image homeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/dory.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(UiDesign.GREET.getString(), homeImage));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                DialogBox.getDukeDialog(response, homeImage)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        );"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 55
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.window.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 19
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.interact.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public void newDeadlineTask_noDetails_DukeExceptionThrown() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            assertEquals(0, new Parser().parse(\"deadline\", new TaskList()));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            assertEquals(\"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    + \"     ☹ OOPS!!! The description of a deadline cannot be empty.\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    + \"    ____________________________________________________________\\n\", e.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 19
    }
  },
  {
    "path": "src/test/java/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        assertEquals(\"[T][✗] read book\", new ToDo(\" read book\").toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        assertEquals(\"[T][✗] join club\", new ToDo(\" join club\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "beatricetay": 14
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "      ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     Hello! I\u0027m duke.Duke"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "       [T][✗] borrow book "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "       [D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "       [E][✗] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "       [D][✗] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     1.[T][✗] borrow book "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     2.[D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     3.[E][✗] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     4.[D][✗] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "       [D][✓] return book (by: Sunday)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 51
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "java -classpath C:\\Users\\ACER\\duke\\bin duke\\duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 21
    }
  }
]
