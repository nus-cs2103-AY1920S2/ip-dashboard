[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    mainClassName \u003d \"Duke\" //seedu.duke.Duke\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    archiveVersion \u003d \"0.1\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "test {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "beatricetay": 21
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "T , âœ— , read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "E , âœ— , daydream , 2020-01-30"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "D , âœ“ , pop quiz , 2020-02-05"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "T , âœ— , send email"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "D , âœ“ , return book , 2020-06-06"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 5
    }
  },
  {
    "path": "src/main/java/Commands.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * Consists of the 5 possible user input commands."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public enum Commands {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    NEW_TASK, DEL_TASK, LIST_TASKS, BYE, DONE, FIND;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 6
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * Creates a Deadline Task with date."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Creates a Deadline Task with date."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param msg Details of the Deadline Task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param date LocalDate that the Deadline needs to be done by."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public Deadline(String msg, LocalDate date) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        super.type \u003d \"D\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        super.time \u003d date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return \"D , \" + super.status + \" ,\" + super.msg + \" , \" + super.time;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return \"[D]\" + \"[\" + super.status + \"]\" + super.msg + \" (by: \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                + super.time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 29
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Loads the tasks from Path."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param filePath Path containing the text file to be read from."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public Duke(Path filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            tasks \u003d storage.load();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            System.out.println(\"File loading error\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Starts the program."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        tasks \u003d ui.takeInput(tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            System.out.println(\"File saving error\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Main method."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param args Main method."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        String homeDir \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        String fileName \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        Path path \u003d Paths.get(homeDir, \"duke\", \"data\", fileName);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        new Duke(path).run();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "beatricetay": 47
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * Generates an error message for improper user input."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class DukeException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    protected String errorMsg \u003d \"\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        String text \u003d \"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                + \"     \" + errorMsg + \"\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                + \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 15
    }
  },
  {
    "path": "src/main/java/DukeExceptionCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * Generates an error message for the situation where user input cant be decoded."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class DukeExceptionCommand extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public DukeExceptionCommand() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        super.errorMsg \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 8
    }
  },
  {
    "path": "src/main/java/DukeExceptionDate.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * Generates an error message for the situation where a date was not given for a Deadline or Event Task."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class DukeExceptionDate extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public DukeExceptionDate(String task) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        super.errorMsg \u003d \"☹ OOPS!!! I\u0027m sorry, but a date is required for a \" + task + \".\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 9
    }
  },
  {
    "path": "src/main/java/DukeExceptionDateFormat.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * Generates an error message for the situation where a date was not given in the yyyy-mm-dd format."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class DukeExceptionDateFormat extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public DukeExceptionDateFormat() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        super.errorMsg \u003d \"☹ OOPS!!! The date must be in the format yyyy-mm-dd\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 9
    }
  },
  {
    "path": "src/main/java/DukeExceptionDescription.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class DukeExceptionDescription extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public DukeExceptionDescription(String task) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        super.errorMsg \u003d \"☹ OOPS!!! The description of a \" + task + \" cannot be empty.\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 5
    }
  },
  {
    "path": "src/main/java/DukeExceptionIndex.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * Generates an error message for the situation where the given index for Remove or Done command is not suitable."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class DukeExceptionIndex extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Generates the appropriate error message."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param task Task that the Exception was made at."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public DukeExceptionIndex(String task) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        String msg;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        if (task.equals(\"delete\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            msg \u003d \"☹ OOPS!!! I\u0027m sorry, but a suitable index is required to delete a task.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            msg \u003d \"☹ OOPS!!! I\u0027m sorry, but a suitable index is required to mark a task as complete.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        super.errorMsg \u003d msg;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 18
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * Creates an Event Task with date."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Creates an Event Task with LocalDate."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param msg Details of the Event Task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param date Date that the Event will be done at."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public Event(String msg, LocalDate date) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        super.type \u003d \"E\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        super.time \u003d date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return \"E , \" + super.status + \" ,\" + super.msg + \" , \" + super.time;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return \"[E]\" + \"[\" + super.status + \"]\" + super.msg + \" (by: \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                + super.time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 31
    }
  },
  {
    "path": "src/main/java/META-INF/MANIFEST.MF",
    "fileType": "MF",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "Manifest-Version: 1.0"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "Main-Class: Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "beatricetay": 3
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * Parses user input."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private Commands com;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private int indexOfTaskAffected \u003d -1;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private Task newTask;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Decodes user input and generates a Parser object that is easier to understand."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * com saves the type of Command that the user input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * indexOfTaskAffected saves the index for commands that require indexes."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * newTask saves a Task for commands that create a new task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param line String to be decoded."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param size Current number of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @throws DukeException If there was an invalid user input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public Parser(String line, int size) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        if (line.equals(\"bye\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            com \u003d Commands.BYE;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        } else if (line.equals(\"list\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            com \u003d Commands.LIST_TASKS;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            String[] comArs \u003d line.split(\"\\\\s\", 2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            if (comArs[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                if (comArs.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    throw new DukeExceptionIndex(\"done\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                int index \u003d Integer.parseInt(comArs[1]) - 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                if (index \u003e size - 1) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    throw new DukeExceptionIndex(\"done\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                com \u003d Commands.DONE;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                indexOfTaskAffected \u003d index;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            } else if (comArs[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                if (comArs.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    throw new DukeExceptionIndex(\"delete\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                int index \u003d Integer.parseInt(comArs[1]) - 1;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                if (index \u003e size - 1) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    throw new DukeExceptionIndex(\"delete\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                com \u003d Commands.DEL_TASK;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                indexOfTaskAffected \u003d index;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                if (comArs[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    String details \u003d line.substring(4, line.length());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    if (details.isBlank()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                        throw new DukeExceptionDescription(\"todo\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    com \u003d Commands.NEW_TASK;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    newTask \u003d new ToDo(details);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                } else if (comArs[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    String details \u003d line.substring(5, line.length());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    if (details.isBlank()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                        throw new DukeExceptionDescription(\"event\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    String[] msgDate \u003d details.split(\" /at \", 2);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    if (msgDate.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                        throw new DukeExceptionDate(\"event\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                        LocalDate date \u003d LocalDate.parse(msgDate[1]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                        com \u003d Commands.NEW_TASK;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                        newTask \u003d new Event(msgDate[0], date);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                        throw new DukeExceptionDateFormat();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                } else if (comArs[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    String details \u003d line.substring(8, line.length());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    if (details.isBlank()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                        throw new DukeExceptionDescription(\"deadline\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    String[] msgDate \u003d details.split(\" /by \", 2);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    if (msgDate.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                        throw new DukeExceptionDate(\"deadline\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                        LocalDate date \u003d LocalDate.parse(msgDate[1]);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                        com \u003d Commands.NEW_TASK;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                        newTask \u003d new Deadline(msgDate[0], date);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                        throw new DukeExceptionDateFormat();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                } else if (comArs[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    com \u003d Commands.FIND;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    keyword \u003d line.substring(4, line.length());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    throw new DukeExceptionCommand();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public Task getTask() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public String getKeyWord() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return keyword;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public Commands getCommand() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return com;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public int getIndexAffected() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return indexOfTaskAffected;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 128
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * Loads and Stores the TaskList to Path."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private Path path;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public Storage(Path path) throws IOException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Loads the tasks from Path into TaskList."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @return Updated TaskList."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @throws IOException If Path is not accessible."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public TaskList load() throws IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        List\u003cString\u003e lines \u003d Files.readAllLines(path);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        for (int i \u003d 0; i \u003c lines.size(); i++) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            String curLine \u003d lines.get(i);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            String[] components \u003d curLine.split(\" , \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            if (components.length \u003c 3) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            if (components[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                Task t \u003d new ToDo(\" \" + components[2]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                t.setStatus(components[1]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                tasks.addTask(t);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            } else if (components[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                Task t \u003d new Deadline(\" \" + components[2], LocalDate.parse(components[3]));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                t.setStatus(components[1]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                tasks.addTask(t);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            } else if (components[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                Task t \u003d new Event(\" \" + components[2], LocalDate.parse(components[3]));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                t.setStatus(components[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                tasks.addTask(t);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                System.err.print(\"Wrong File Structure\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Saves the current TaskList into Path."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param tasks Current TaskList."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @throws IOException If Path is not accessible."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public void save(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        String savedString \u003d tasks.tasksToString();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        BufferedWriter writer \u003d Files.newBufferedWriter(path);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        writer.write(savedString);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        writer.flush();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 66
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    protected String msg;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    protected String status;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    protected LocalDate time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Creates a Task with the details of the task kept in msg."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Status of the Task is instantiated to X."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param msg Details of the Task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public Task(String msg) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        this.msg \u003d msg;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        this.type \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        status \u003d \"✗\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        status \u003d \"✓\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public String getDetails() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public void setStatus(String status) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        this.status \u003d status;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return type + \" , \" + status + \" ,\" + msg;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return \"[\" + type + \"][\" + status + \"]\" + msg;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 40
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * Stores and maintains the list of tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private int size;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        size \u003d 0;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Formats the current tasks into a String to be saved into a txt file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @return A String of all the current tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public String tasksToString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            Task t \u003d tasks.get(i);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            output +\u003d t.writeToFile() + \"\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Prints the tasks that contains the String sequence."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param sequence String that the tasks will be searched for."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public void printTasksContaining(String sequence) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d size; i++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            Task task \u003d tasks.get(i - 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            if (task.getDetails().contains(sequence)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                System.out.println(\"     \" + i + \".\" + task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        size++;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public void remTask(int index) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        size--;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public void markDone(int index) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        tasks.get(index).markDone();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Prints the tasks in the task list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public void printTaskList() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d size; i++) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            String item \u003d \"     \" + i + \".\" + tasks.get(i - 1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            System.out.println(item);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return size;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 77
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * Creates a todoo task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public ToDo(String msg) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        super.type \u003d \"T\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 9
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * Deals with interactions with the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * Takes in user input and Prints responses to the system."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @param tasks Current TaskList."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     * @return Updated TaskList to Duke, to be saved."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public TaskList takeInput(TaskList tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        System.out.println(UiDesign.GREET.getString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        int numTasks \u003d tasks.getSize();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                Parser decoded \u003d new Parser(line, numTasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                Commands com \u003d decoded.getCommand();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                int index \u003d decoded.getIndexAffected();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                if (com \u003d\u003d Commands.BYE) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    System.out.println(UiDesign.BYE.getString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    return tasks;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                } else if (com \u003d\u003d Commands.LIST_TASKS) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    System.out.print(UiDesign.LIST_TOP_PART.getString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    tasks.printTaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    System.out.println(UiDesign.BORDER.getString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                } else if (com \u003d\u003d Commands.DONE) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    tasks.markDone(index);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    System.out.println(UiDesign.DONE_TOP_PART.getString()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                            + \"       \" + tasks.getTask(index) + \"\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                            + UiDesign.BORDER.getString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                } else if (com \u003d\u003d Commands.DEL_TASK) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    numTasks--;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    System.out.println(UiDesign.REMOVE_TOP_PART.getString()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                            + \"       \" + tasks.getTask(index) + \"\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                            + \"     Now you have \" + numTasks + \" tasks in the list.\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                            + UiDesign.BORDER.getString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    tasks.remTask(index);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                } else if (com \u003d\u003d Commands.NEW_TASK) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    Task newTask \u003d decoded.getTask();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    tasks.addTask(newTask);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    numTasks++;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    System.out.println(UiDesign.ADD_TOP_PART.getString()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                            + \"       \" + newTask + \"\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                            + \"     Now you have \" + numTasks + \" tasks in the list.\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                            + UiDesign.BORDER.getString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                } else {    // com \u003d\u003d FIND"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    String keyword \u003d decoded.getKeyWord();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    System.out.print(UiDesign.FIND_TOP_PART.getString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    tasks.printTasksContaining(keyword);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    System.out.println(UiDesign.BORDER.getString());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return new TaskList();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 71
    }
  },
  {
    "path": "src/main/java/UiDesign.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " * Consists of designs that will be used to respond to user input."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public enum UiDesign {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    BORDER(\"    ____________________________________________________________\\n\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    LOGO(\"      ____        _        \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            + \"     |  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            + \"     | | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            + \"     | |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            + \"     |____/ \\\\__,_|_|\\\\_\\\\___|\\n\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    BYE(\"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            + \"     Bye. Hope to see you again soon!\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            + \"    ____________________________________________________________\\n\"),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    GREET(\"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            + LOGO.getString()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            + \"\\n     Hello! I\u0027m Duke\\n     What can I do for you?\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            + \"    ____________________________________________________________\\n\"),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    DONE_TOP_PART(\"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            + \"     Nice! I\u0027ve marked this task as done: \\n\"),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    REMOVE_TOP_PART(\"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            + \"     Noted. I\u0027ve removed this task: \\n\"),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    LIST_TOP_PART(\"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            + \"     Here are the tasks in your list: \\n\"),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    ADD_TOP_PART(\"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            + \"     Got it. I\u0027ve added this task: \\n\"),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    FIND_TOP_PART(\"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            + \"     Here are the matching tasks in your list:\\n\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    ;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    private final String text;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    UiDesign(final String text) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        this.text \u003d text;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public String getString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 40
    }
  },
  {
    "path": "src/main/resources/META-INF/MANIFEST.MF",
    "fileType": "MF",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "Manifest-Version: 1.0"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "Main-Class: Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "beatricetay": 3
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public void testCommandDetected() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        assertEquals(Commands.LIST_TASKS, new Parser(\"list\", 0).getCommand());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        assertEquals(Commands.BYE, new Parser(\"bye\", 0).getCommand());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        assertEquals(Commands.DONE, new Parser(\"done 1\", 1).getCommand());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        assertEquals(Commands.DEL_TASK, new Parser(\"delete 1\", 1).getCommand());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        assertEquals(Commands.NEW_TASK, new Parser(\"todo help\", 0).getCommand());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public void newDeadlineTask_noDetails_DukeExceptionThrown() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            assertEquals(0, new Parser(\"deadline\", 0));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "            assertEquals(\"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    + \"     ☹ OOPS!!! The description of a deadline cannot be empty.\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "                    + \"    ____________________________________________________________\\n\", e.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 25
    }
  },
  {
    "path": "src/test/java/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        assertEquals(\"[T][✗] read book\", new ToDo(\" read book\").toString());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "        assertEquals(\"[T][✗] join club\", new ToDo(\" join club\").toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "beatricetay": 13
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "      ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "       [T][✗] borrow book "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "       [D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "       [E][✗] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "       [D][✗] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     1.[T][✗] borrow book "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     2.[D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     3.[E][✗] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     4.[D][✗] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "       [D][✓] return book (by: Sunday)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 51
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "java -classpath C:\\Users\\ACER\\duke\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "beatricetay"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "beatricetay"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "beatricetay": 21
    }
  }
]
