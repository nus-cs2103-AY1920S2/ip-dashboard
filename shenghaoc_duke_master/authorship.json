[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    mainClassName \u003d \"duke.gui.Launcher\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "test {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    archiveVersion \u003d \"0.2\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shenghaoc": 36,
      "-": 20
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "1. [E][âœ˜] project meeting (at: Mon 2-4pm)"
      }
    ],
    "authorContributionMap": {
      "shenghaoc": 1
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": " * The main entry point for the chat bot containing the main method"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    private static final String FILE_PATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    Ui naruto \u003d new Ui(\"Naruto\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    Storage storage \u003d new Storage(FILE_PATH);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            int taskNumber;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            StringBuilder message;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            switch (parser.parse(input)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            case BYE:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                return naruto.say(\"See you later!\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            case LIST:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                return naruto.list(taskList.getUpdatedTasks());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            case DONE:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                taskNumber \u003d Integer.parseInt(input.substring(\"done\".length() + 1)) - 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                taskList.addDone(taskNumber);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                // Ensure that status icon is now a tick"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                assert taskList.getStatusIcon(taskNumber).equals(\"\\u2713\") : \"duke.task.Task status not done!\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                message \u003d new StringBuilder(naruto.say(\"All right, consider it done\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                message.append(naruto.format(\"[\" + taskList.getStatusIcon(taskNumber) + \"] \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                        + taskList.getDescription(taskNumber)));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                storage.save(taskList.getUpdatedTasks());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                return message.toString();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                    taskNumber \u003d taskList.addToDo(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                    message \u003d new StringBuilder(naruto.taskAddedMessage(taskList.getTask(taskNumber).toString(), taskNumber));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                    storage.save(taskList.getUpdatedTasks());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                    return message.toString();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                } catch (DukeException dE) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                    return naruto.say(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                taskNumber \u003d taskList.addDeadline(input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                message \u003d new StringBuilder(naruto.taskAddedMessage(taskList.getTask(taskNumber).toString(), taskNumber));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                storage.save(taskList.getUpdatedTasks());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                return message.toString();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                taskNumber \u003d taskList.addEvent(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                message \u003d new StringBuilder(naruto.taskAddedMessage(taskList.getTask(taskNumber).toString(), taskNumber));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                storage.save(taskList.getUpdatedTasks());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                return message.toString();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            case DELETE:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                int originalTaskCount \u003d taskList.getTaskCount();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                taskNumber \u003d Integer.parseInt(input.substring(\"delete\".length() + 1)) - 1;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                message \u003d new StringBuilder(naruto.say(\"Noted. I\u0027ve removed this duke.task\"));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                message.append(naruto.format(\"[\" + taskList.getTaskIcon(taskNumber) + \"][\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                        + taskList.getStatusIcon(taskNumber) + \"] \" + taskList.getDescription(taskNumber)));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                taskList.delete(taskNumber);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                message.append(naruto.say(\"Now you have \" + taskList.getTaskCount() + \" tasks in the list\"));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                // Ensure number of tasks falls by 1"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                assert taskList.getTaskCount() \u003d\u003d originalTaskCount - 1 : \"Number of events unchanged!\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                storage.save(taskList.getUpdatedTasks());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                return message.toString();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            case FIND:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                return naruto.matchingItems(taskList.getUpdatedTasks(), input.substring(\"find\".length() + 1));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        } catch (DukeException dE) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            return naruto.say(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        return \"duke.Duke heard: \" + input;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shenghaoc": 78,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": " * Class to process user input"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * Processes user input to determine type of command, represented by an anum"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * @param input text entered by user"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * @return An enum for the command type"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    protected Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            return Command.BYE;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            return Command.LIST;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        } else if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            return Command.DONE;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        } else if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            return Command.TODO;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        } else if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            return Command.DEADLINE;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        } else if (input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            return Command.EVENT;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        } else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            return Command.DELETE;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        } else if (input.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            return Command.FIND;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        throw new DukeException();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shenghaoc": 38
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": " * Class to store list of tasks"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    Storage(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * Save list of tasks to hard disk"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * @param tasks list of tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    protected void save(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                fw.write((i + 1) + \". \" + tasks.get(i).toString() + System.lineSeparator());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shenghaoc": 34
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": " * Class to represent a list of tasks"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * Returns current list of tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * @return current list of tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    protected ArrayList\u003cTask\u003e getUpdatedTasks() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * Calls function to get description for specific duke.task in list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * @param index of specific duke.task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * @return description of specific duke.task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    public String getDescription(int index) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        return tasks.get(index).getDescription();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * Calls function to get status icon for specific duke.task in list"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * @param index of specific duke.task"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * @return status icon of specific duke.task"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    public String getStatusIcon(int index) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        return tasks.get(index).getStatusIcon();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * Calls function to get duke.task icon for specific duke.task in list"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * @param index of specific duke.task"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * @return duke.task icon of specific duke.task"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    public String getTaskIcon(int index) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        return tasks.get(index).getTaskIcon();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * Add new to do to list and return its index"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * @param input text entered by user"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * @return index of new deadline"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    protected int addToDo(String input) throws DukeException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        if (input.length() \u003c\u003d (\"todo\".length() + 1)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        tasks.add(new ToDo(input.substring(\"todo\".length() + 1)));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        return tasks.size() - 1;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * Add new deadline to list and return its index"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * @param input text entered by user"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * @return index of new deadline"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    protected int addDeadline(String input) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        int trigger \u003d input.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        tasks.add(new Deadline(input.substring(\"deadline\".length() + 1, trigger - 1),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                input.substring(trigger + \"/by \".length())));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        return tasks.size() - 1;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * Add new event to list and return its index"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * @param input text entered by user"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * @return index of new event"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    protected int addEvent(String input) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        int trigger \u003d input.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        tasks.add(new Event(input.substring(\"event\".length() + 1, trigger - 1),"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                input.substring(trigger + \"/at \".length())));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        return tasks.size() - 1;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * Calls function for specific duke.task to mark itself as done"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * @param taskNumber Index for duke.task to be marked as done"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    protected void addDone(int taskNumber) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        tasks.get(taskNumber).markAsDone();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * Deletes specific duke.task at index from list"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * @param taskNumber index of duke.task to be deleted"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    protected void delete(int taskNumber) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        tasks.remove(taskNumber);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * Returns current number of tasks"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * @return number of tasks"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    protected int getTaskCount() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    protected Task getTask(int index) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shenghaoc": 127
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": " * Class to represent the user interface"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    private static final String LINE \u003d \"______________________________\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    private static final String INDENT \u003d \"    \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    Ui(String name) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        say(\"Hi! I\u0027m \" + name);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        say(\"How may I help you?\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * Prints text from chat bot"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * @param message Text to be said"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    protected String say(String message) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        return indent(name + \": \" + message) + System.lineSeparator();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * Adds duke.task to list and prints message to indicate success"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * @param message Information about added duke.task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * @param taskNumber Number of tasks in list - 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    protected String taskAddedMessage(String message, int taskNumber) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        return say(\"Got it. I\u0027ve added this duke.task\") + format(message)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                + say(\"Now you have \" + (taskNumber + 1) + \" tasks in the list\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * Prints message between two horizontal bars"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * @param message Message to be printed"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    protected String format(String message) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        return bar() + indent(message) +System.lineSeparator()+ bar() + System.lineSeparator();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * Prints a horizontal bar"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    protected String bar() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        return indent(LINE) + System.lineSeparator();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * Prints the message with indentation of four spaces"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * @param message Message to be printed"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    protected String indent(String message) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        return INDENT + message;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * Prints list of tasks"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    protected String list(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        StringBuilder message \u003d new StringBuilder(say(\"Here you go\"));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        message.append(bar());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            message.append(indent((i + 1) + \". \" + tasks.get(i).toString())).append(System.lineSeparator());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        return message.append(bar()).toString();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    protected String matchingItems(ArrayList\u003cTask\u003e tasks, String keyword) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        StringBuilder message \u003d new StringBuilder(say(\"Here are the matching tasks in your list\"));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        message.append(bar());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            if (tasks.get(i).getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                message.append(indent((i + 1) + \". \" + tasks.get(i).toString())).append(System.lineSeparator());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        return message.append(bar()).toString();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shenghaoc": 86
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "public enum Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    BYE, LIST, DONE, TODO, DEADLINE, EVENT, DELETE, FIND"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shenghaoc": 5
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": " * Exception specific to duke.Duke"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shenghaoc": 8
    }
  },
  {
    "path": "src/main/java/duke/gui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shenghaoc": 61
    }
  },
  {
    "path": "src/main/java/duke/gui/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shenghaoc": 12
    }
  },
  {
    "path": "src/main/java/duke/gui/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": " * A GUI for duke.Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shenghaoc": 32
    }
  },
  {
    "path": "src/main/java/duke/gui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": " * Controller for duke.gui.MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing duke.Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shenghaoc": 52
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    private boolean dateProcessed \u003d true;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    public Deadline(String description, String time) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            processedTime \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            dateProcessed \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    public String getTaskIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    public boolean hasTime() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        return dateProcessed"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                ? processedTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                : time;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        return \"[D][\" + getStatusIcon() + \"] \" + description + (hasTime() ? \" (by: \" + time + \")\" : \"\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shenghaoc": 39
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    public String getTaskIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    public boolean hasTime() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        return \"[E][\" + getStatusIcon() + \"] \" + description + (hasTime() ? \" (at: \" + time + \")\": \"\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shenghaoc": 22
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": " * Class to represent a duke.task.Task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    protected String time \u003d \"-1\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    protected LocalDate processedTime \u003d LocalDate.MIN;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * Returns type of duke.task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * @return type of duke.task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * Returns the status icon, i.e. a tick or a cross"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * @return the status icon"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * Mark a duke.task as done"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * Returns the initial letter of the type of duke.task, eg D for duke.task.Deadline"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * @return the duke.task icon"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    public String getTaskIcon() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        return \"0\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * Returns time of occurrence for event depending on type"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * @return time by or at which event is to be completed"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * Returns true if event is associated with time, false otherwise"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     * @return whether event associated with time"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    public boolean hasTime() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shenghaoc": 66
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    public String getTaskIcon() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        return \"[T][\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shenghaoc": 17
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "shenghaoc": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "shenghaoc": 19
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    void getTaskIcon() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        assertEquals(\"D\", new Deadline(\"Homework\", \"2012-11-11\").getTaskIcon());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    void hasTime() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        assertTrue(new Deadline(\"Homework\", \"2012-11-11\").hasTime());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shenghaoc": 17
    }
  },
  {
    "path": "src/test/java/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "class ToDoTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    void getTaskIcon() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "        assertEquals(\"T\", new ToDo(\"\").getTaskIcon());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shenghaoc": 12
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "Hi! I\u0027m Naruto"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "How may I help you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    Naruto: Got it. I\u0027ve added this task"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    [T][âœ˜] read book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    Naruto: Now you have 1 tasks in the list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    Naruto: Got it. I\u0027ve added this task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    [D][âœ˜] return book (by: June 6th)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    Naruto: Now you have 2 tasks in the list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    Naruto: Got it. I\u0027ve added this task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    [E][âœ˜] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    Naruto: Now you have 3 tasks in the list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    Naruto: Got it. I\u0027ve added this task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    [T][âœ˜] join sports club"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    Naruto: Now you have 4 tasks in the list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    Naruto: Got it. I\u0027ve added this task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    [T][âœ˜] borrow book"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    Naruto: Now you have 5 tasks in the list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    Naruto: Got it. I\u0027ve added this task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    [D][âœ˜] return book (by: Sunday)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    Naruto: Now you have 6 tasks in the list"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    Naruto: Got it. I\u0027ve added this task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    [E][âœ˜] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    Naruto: Now you have 7 tasks in the list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    Naruto: See you later!"
      }
    ],
    "authorContributionMap": {
      "shenghaoc": 38
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "shenghaoc": 8
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shenghaoc"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "shenghaoc": 34
    }
  }
]
