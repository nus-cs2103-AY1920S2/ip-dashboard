[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "duke.duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for duke.duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "mikhailfaiz": 2,
      "-": 37
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mikhailfaiz": 22,
      "-": 19
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "T , N , take drug"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "D , N , 2103T iP , 2020-02-21"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "D , N , death , 2020-10-12"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "D , N , 2101 reflection , 2020-02-23"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "D , N , go home , 2020-02-21"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "E , N , party , 2020-05-14"
      }
    ],
    "authorContributionMap": {
      "mikhailfaiz": 6
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "     * Constructs a new Duke object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "     * Initialises execution of Duke application."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        ui.welcome();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            String entry \u003d ui.input();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            if (entry.equals(\"bye\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "                ui.bye();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            tasks.run(entry);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mikhailfaiz": 37,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    protected LocalDate ld;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        ld \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    public String toSaveForm() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        return \"D , \" + super.getStatusIcon() + \" , \" + description + \" , \" + ld.toString() + \"\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + ld.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mikhailfaiz": 23
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    protected LocalDate ld;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    //at is given in \"d-MM-yyyy time\" format"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        ld \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    public String toSaveForm() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        return \"E , \" + super.getStatusIcon() + \" , \" + description + \" , \" + ld.toString() + \"\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + ld.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mikhailfaiz": 24
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        return (isDone ? \"Y\" : \"N\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    public void makeDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mikhailfaiz": 29
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    private String linedivider \u003d \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    private Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "     * Contructs a taskList object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "     * @param t arrayList of tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e t) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        tasks \u003d t;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "     * Executes instructions based on user input from CLI."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "     * @param s String that is input by the user"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    public void run(String s) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        if (s.equals(\"list\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            list();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        } else if (s.length() \u003e 5 \u0026\u0026 s.substring(0,4).equals(\"done\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            done(Integer.parseInt(s.substring(5)));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        } else if (s.length() \u003e 6 \u0026\u0026 s.substring(0,6).equals(\"delete\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            delete(Integer.parseInt(s.substring(7)));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        } else if (s.length() \u003e 4 \u0026\u0026 s.substring(0,4).equals(\"find\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            find(s);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        } else if (s.length() \u003c 5 || !s.contains(\" \") || s.stripTrailing().length() \u003c 9) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            error(s);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            add(s);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "     * Prints out current list of tasks."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    public void list() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        System.out.println(linedivider + \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        int entryno \u003d 1;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        for (Task ls : tasks) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            System.out.println(entryno + \". \" + ls);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            entryno++;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        System.out.println(linedivider);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "     * Adds a task to the current taskList."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "     * @param s String that is input by the user"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    public void add(String s) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        int whitespaceidx \u003d s.indexOf(\" \");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        String taskType \u003d s.substring(0, whitespaceidx);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        if (taskType.equals(\"todo\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            String theTask \u003d s.substring(whitespaceidx + 1);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            Todo t \u003d new Todo(theTask);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            tasks.add(t);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            System.out.println(linedivider + \"Got it. I\u0027ve added this task:\\n \" + t"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "                    + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\\n\" + linedivider);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            int taskIdx \u003d s.indexOf(\"/\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            String theTask \u003d s.substring(whitespaceidx + 1, taskIdx - 1);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            String date \u003d s.substring(taskIdx + 1);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            if (taskType.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "                Deadline t \u003d new Deadline(theTask, date);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "                tasks.add(t);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "                System.out.println(linedivider + \"Got it. I\u0027ve added this task:\\n \" + t"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "                        + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\\n\" + linedivider);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            } else if (taskType.equals(\"event\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "                Event t \u003d new Event(theTask, date);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "                tasks.add(t);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "                System.out.println(linedivider + \"Got it. I\u0027ve added this task:\\n \" + t"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "                        + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\\n\" + linedivider);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "     * @param n index of task in taskList to be marked as done"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    public void done(int n) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        tasks.get(n - 1).makeDone();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        System.out.println(linedivider + \"Nice! I\u0027ve marked this task as done:\\n\" + tasks.get(n - 1)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "                + \"\\n\" + linedivider);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "     * Deletes a task from the current taskList."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "     * @param n index of task to be deleted"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    public void delete(int n) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        Task rm \u003d tasks.remove(n - 1);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        System.out.println(linedivider + \"Noted. I\u0027ve removed this task:\\n\" + rm + \"\\n\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "                + \"Now you have \" + tasks.size() + \" tasks in the list.\\n\" + linedivider);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "     * Prints error messages for common errors based on invalid user input."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "     * @param s String that is input by user"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    public void error(String s) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        System.out.println(linedivider);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        if (s.length() \u003e\u003d 4 \u0026\u0026 (s.stripTrailing().equals(\"todo\")"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "                || s.stripTrailing().equals(\"deadline\") || s.stripTrailing().equals(\"event\"))) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            if (s.stripTrailing().equals(\"todo\")) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "                System.out.println(\":( OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            } else if (s.stripTrailing().equals(\"deadline\")) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "                System.out.println(\":( OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            } else if (s.stripTrailing().equals(\"event\")) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "                System.out.println(\":( OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            System.out.println(\":( OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        System.out.println(linedivider);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    public void find(String s) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        String keyword \u003d s.substring(5).strip();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        for (Task t : this.tasks) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            if (t.getDescription().equals(keyword)) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "                matchingTasks.add(t);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        if (matchingTasks.isEmpty()) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            System.out.println(linedivider + \"No matching tasks were found lol\\n\" + linedivider);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            System.out.println(linedivider + \"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            int entryno \u003d 1;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            for (Task t : matchingTasks) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "                System.out.println(entryno + \". \" + t);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "                entryno++;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            System.out.println(linedivider);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mikhailfaiz": 155
    }
  },
  {
    "path": "src/main/java/duke/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    public String toSaveForm() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        return \"T , \" + super.getStatusIcon() + \" , \" + description + \"\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mikhailfaiz": 17
    }
  },
  {
    "path": "src/main/java/duke/util/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "     * Parses data from a given string and translates it into a respective task object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "     * @param s String in standardised saved form"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "     * @return task object that can be subsequently manipulated in program"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    public static Task parseDataFromFile(String s) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        String taskType \u003d s.substring(0, 1);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        String isTaskDone \u003d s.substring(4, 5);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        String taskDesc \u003d s.substring(8);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        String taskDateTime \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        Task parsedTask \u003d null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        if (!taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            String[] taskArr \u003d taskDesc.split(\",\", 2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            taskDesc \u003d taskArr[0].trim();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            taskDateTime \u003d taskArr[1].trim();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            Todo t \u003d new Todo(taskDesc);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            parsedTask \u003d t;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            Deadline d \u003d new Deadline(taskDesc, taskDateTime);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            parsedTask \u003d d;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            Event e \u003d new Event(taskDesc, taskDateTime);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            parsedTask \u003d e;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        return parsedTask;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mikhailfaiz": 45
    }
  },
  {
    "path": "src/main/java/duke/util/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    public String home \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    protected Path rootPath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    protected Path dataPath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        this.rootPath \u003d Paths.get(home);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        this.dataPath \u003d Paths.get(rootPath.toString(), \"data\", \"duke.txt\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "     * Loads each line from .txt file"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "     * @return returns a"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d  new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            List\u003cString\u003e dataLines \u003d Files.readAllLines(dataPath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            for (String s : dataLines) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "                if (dataLines.isEmpty() || s.isBlank()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "                    return tasks;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "                tasks.add(Parser.parseDataFromFile(s));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "     * saves a list of tasks in a .txt file"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "     * @param taskList to be saved in .txt file"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        for (Task t : taskList) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            if (t instanceof Todo) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "                sb.append(((Todo) t).toSaveForm());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            } else if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "                sb.append(((Deadline) t).toSaveForm());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            } else if (t instanceof Event) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "                sb.append(((Event) t).toSaveForm());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            FileWriter fw \u003d new FileWriter(dataPath.toFile());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            bw.write(sb.toString());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            bw.close();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mikhailfaiz": 75
    }
  },
  {
    "path": "src/main/java/duke/util/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    String entry \u003d \"\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    final String linedivider \u003d \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    public String input() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "     * prints welcome message when application is launched."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    public void welcome() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        System.out.println(linedivider + \"Hello! I\u0027m Duke.Duke\\nWhat can I do for you?\\n\" + linedivider);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    public void bye() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        System.out.println(linedivider + \"Bye. Hope to see you again soon!\" + \"\\n\" + linedivider);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mikhailfaiz": 30
    }
  },
  {
    "path": "src/test/java/duke/tasks/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    public void testToSaveForm() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        assertEquals(\"D , N , test , 2020-02-20\\n\", new Deadline(\"test\", \"2020-02-20\").toSaveForm());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mikhailfaiz": 12
    }
  },
  {
    "path": "src/test/java/duke/tasks/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    public void testToSaveForm() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        assertEquals(\"T , N , test\\n\", new Todo(\"test\").toSaveForm());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mikhailfaiz": 12
    }
  },
  {
    "path": "src/test/java/duke/util/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    protected Todo todoParserTest \u003d new Todo(\"test\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    public void parseDataFromFileTest() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "        assertEquals(\"N\", new Parser().parseDataFromFile(\"T , N , test , 2020-02-20\\n\").getStatusIcon());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mikhailfaiz": 14
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": " ____        _"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "|  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": " [D][N] revise for 2103T (by: today, 12pm)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": " [E][N] school dance (at: 2nd Feb 2020)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": " [T][N] clean room"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ":( OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "1. [D][N] revise for 2103T (by: today, 12pm)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "2. [E][N] school dance (at: 2nd Feb 2020)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "3. [T][N] clean room"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "[T][Y] clean room"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "[D][Y] revise for 2103T (by: today, 12pm)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "1. [D][Y] revise for 2103T (by: today, 12pm)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "2. [E][N] school dance (at: 2nd Feb 2020)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "3. [T][Y] clean room"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "mikhailfaiz": 63
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "deadline revise for 2103T /2020-02-20"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "event school dance /2020-02-01"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "todo clean room"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "bruhhh"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "mikhailfaiz": 9
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "java -classpath ..\\bin duke.duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mikhailfaiz"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "mikhailfaiz": 21
    }
  }
]
