[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "terencemah"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "terencemah"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "terencemah"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    archiveBaseName \u003d \"duke_terence\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "terencemah"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "terencemah"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "terencemah"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "terencemah"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "terencemah"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "terencemah"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "terencemah": 26,
      "-": 21
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "T|0|read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": "T|1|write book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": "D|1|Defence Essay|Mar 2 2020 11.59pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": "T|0|go jogging"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": "T|1|go swimming"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": "E|1|dental appointment|3 Mar 2020 5pm"
      }
    ],
    "authorContributionMap": {
      "terencemah": 6
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.util.StringTokenizer;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    protected String deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Creates a Deadline representing the task the user"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * wishes to store. If the deadline is entered in a"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * recognisable format, then the deadline is stored"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * as a date and time rather than simply a String."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param name Name of task to be completed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param input Deadline of task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public Deadline(String name, String input) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        StringTokenizer st \u003d new StringTokenizer(input);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        String dateString \u003d st.nextToken();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            date \u003d LocalDate.parse(dateString);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                date \u003d LocalDate.parse(dateString, DateTimeFormatter.ofPattern(\"d/M/yyyy\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            } catch (DateTimeParseException x) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                // do nothing"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        if (st.hasMoreTokens()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            String timeString \u003d st.nextToken();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                time \u003d LocalTime.parse(timeString, DateTimeFormatter.ofPattern(\"HHmm\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                // do nothing"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        if (date !\u003d null) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            deadline \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            if (time !\u003d null) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                deadline \u003d deadline + \" \" + time.format(DateTimeFormatter.ofPattern(\"K.mma\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            deadline \u003d input;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Formats the Deadline task for display to the user."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @return The output string to be displayed."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String getTaskDisplay() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        assert deadline !\u003d null : \"Missing deadline\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return \" [D][\" + getStatusIcon() + \"] \" + name + \" (by: \" + deadline + \")\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Formats the Deadline task as it is to be stored/saved"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * on the hard disk."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @return The string the task is to be saved as."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String getSaveDisplay() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        assert deadline !\u003d null : \"Missing deadline\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return \"D|\" + (isDone ? \"1\" : \"0\") + \"|\" + name + \"|\" + deadline + \"\\n\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "terencemah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "terencemah": 75
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "terencemah"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private DialogBox(String text, Image image) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource("
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                    \"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        displayPicture.setImage(image);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        ObservableList\u003cNode\u003e temp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        Collections.reverse(temp);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        getChildren().setAll(temp);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image image) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return new DialogBox(text, image);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image image) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        var dialogBox \u003d new DialogBox(text, image);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        dialogBox.flip();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return dialogBox;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "terencemah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "terencemah": 53
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private final String SAVE_DIR \u003d \"./data/duke.txt\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Initialises the Duke program on startup"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * by loading the previously saved task list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * onto the working list, if there exists one."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Otherwise, the working list starts empty."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        storage \u003d new Storage(SAVE_DIR);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            storage.load(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            // do nothing"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String getWelcomeMessage() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return parser.getWelcomeMessage();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String getResponse(String command) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        assert !command.equals(\"\") : \"Empty input\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        String response \u003d parser.parseCommand(command, tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "terencemah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "terencemah": 34,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.util.StringTokenizer;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    protected String eventTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Creates an Event Task representing the event the user"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * wishes to store. If the event date/time is entered in a"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * recognisable format, then the event date/time is stored"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * as a date and time rather than simply a String."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param name Name of event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param input Date and time of event."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public Event(String name, String input) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        StringTokenizer st \u003d new StringTokenizer(input);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        String dateString \u003d st.nextToken();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            date \u003d LocalDate.parse(dateString);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                date \u003d LocalDate.parse(dateString, DateTimeFormatter.ofPattern(\"d/M/yyyy\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            } catch (DateTimeParseException x) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                // do nothing"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        if (st.hasMoreTokens()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            String timeString \u003d st.nextToken();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                time \u003d LocalTime.parse(timeString, DateTimeFormatter.ofPattern(\"HHmm\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                // do nothing"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        if (date !\u003d null) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            eventTime \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            if (time !\u003d null) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                eventTime \u003d eventTime + \" \" + time.format(DateTimeFormatter.ofPattern(\"K.mma\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            eventTime \u003d input;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Formats the Event task for display to the user."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @return The output string to be displayed."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String getTaskDisplay() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        assert eventTime !\u003d null : \"Missing event time\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return \" [E][\" + getStatusIcon() + \"] \" + name + \" (at: \" + eventTime + \")\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Formats the Event task as it is to be stored/saved"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * on the hard disk."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @return The string the task is to be saved as."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String getSaveDisplay() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        assert eventTime !\u003d null : \"Missing event time\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return \"E|\" + (isDone ? \"1\" : \"0\") + \"|\" + name + \"|\" + eventTime + \"\\n\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "terencemah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "terencemah": 75
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "terencemah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "terencemah": 8
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "terencemah"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                    \"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            AnchorPane anchorPane \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            Scene scene \u003d new Scene(anchorPane);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(new Duke());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "terencemah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "terencemah": 25
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.util.Timer;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.util.TimerTask;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "terencemah"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private final String BYE_MESSAGE \u003d \"    Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/UserImage.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DukeImage.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                DialogBox.getDukeDialog(duke.getWelcomeMessage(), dukeImage)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        );"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        assert dialogContainer.getChildren().size() \u003e 0 : \"Welcome message missing\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        if (input.equals(\"\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        Node userDialog \u003d DialogBox.getUserDialog(input, userImage);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        Node dukeDialog \u003d DialogBox.getDukeDialog(response, dukeImage);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        dialogContainer.getChildren().addAll(userDialog, dukeDialog);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        if (response.equals(BYE_MESSAGE)) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            TimerTask exit \u003d new TimerTask() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                public void run() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                    Platform.exit();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                    System.exit(0);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            };"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            Timer timer \u003d new Timer();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            timer.schedule(exit, 1000);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "terencemah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "terencemah": 68
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String getWelcomeMessage() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return ui.getWelcomeMessage();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Parses the user input and processes the commands accordingly."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Returns false to exit the program loop if the command is \"bye\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * and returns true otherwise."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param input Input string entered by user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param list Working task list of the program, for updating."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @return false if user input is \"bye\", and true otherwise."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String parseCommand(String input, TaskList list) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        assert !input.equals(\"\") : \"Empty input\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        String[] commands \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        switch (commands[0].toLowerCase()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            response +\u003d ui.getExitMessage();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            response +\u003d \"    Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            int listLength \u003d list.size();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            for (int i \u003d 0; i \u003c listLength; i++) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                response +\u003d \"    \" + (i + 1) + \".\" + list.get(i).getTaskDisplay() + \"\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                Task todo \u003d new ToDo(commands[1]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                list.add(todo);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                response +\u003d ui.getAddedMessage(todo, list);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                response +\u003d \"    Oops! The description of a todo cannot be empty.\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                String[] details \u003d commands[1].split(\" /by \", 2);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                Task deadline \u003d new Deadline(details[0], details[1]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                list.add(deadline);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                response +\u003d ui.getAddedMessage(deadline, list);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                response +\u003d \"    Oops! A deadline must contain both a task \""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                        + \"description and a deadline.\\n\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                String[] details \u003d commands[1].split(\" /at \", 2);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                Task event \u003d new Event(details[0], details[1]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                list.add(event);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                response +\u003d ui.getAddedMessage(event, list);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                response +\u003d \"    Oops! An event must contain both an event \""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                        + \"description and event time.\\n\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                int index \u003d Integer.parseInt(commands[1]) - 1;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                list.get(index).markDone();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                response +\u003d \"    Nice! I\u0027ve marked this task as done:\\n      \""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                        + list.get(index).getTaskDisplay() + \"\\n\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                response +\u003d ui.getIndexExceptionMessage();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                response +\u003d ui.getNumFormatExceptionMessage();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                int index \u003d Integer.parseInt(commands[1]) - 1;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                Task toDelete \u003d list.remove(index);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                response +\u003d \"    Noted. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                response +\u003d \"      \" + toDelete.getTaskDisplay() + \"\\n\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                response +\u003d \"    Now you have \" + list.size() + \" task\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                        + ((list.size() \u003d\u003d 1) ? \"\" : \"s\") + \" in the list.\\n\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                response +\u003d ui.getIndexExceptionMessage();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                response +\u003d ui.getNumFormatExceptionMessage();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                response +\u003d \"    Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                int listSize \u003d list.size();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                for (int i \u003d 0; i \u003c listSize; i++) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                    if (list.get(i).getName().contains(commands[1])) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                        response +\u003d \"    \" + (i + 1) + \".\" + list.get(i).getTaskDisplay() + \"\\n\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                response +\u003d \"    Oops! A \u0027find\u0027 command must be followed by a search word.\\n\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            response +\u003d \"    Oops! I\u0027m sorry, but I don\u0027t know what that means :(\\n\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "terencemah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "terencemah": 118
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.util.StringTokenizer;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "terencemah"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Loads a previously saved task list from the hard disk"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * upon starting up the program."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param list Working task list of the program, for loading the saved data onto."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @throws FileNotFoundException If the file specified by the filepath cannot be found."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public void load(TaskList list) throws FileNotFoundException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            String nextLine \u003d sc.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            StringTokenizer st \u003d new StringTokenizer(nextLine, \"|\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            String taskType \u003d st.nextToken();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            String taskDone \u003d st.nextToken();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            Task newTask;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                    newTask \u003d new Deadline(st.nextToken(), st.nextToken());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                    newTask \u003d new Event(st.nextToken(), st.nextToken());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                    newTask \u003d new ToDo(st.nextToken());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            if (taskDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                newTask.markDone();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            list.add(newTask);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Saves any changes to the task list to the hard disk"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * immediately by overwriting the original file."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param list Updated working task list of the program, for rewriting the file with."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @throws IOException If an error occurs in writing the file."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public void save(TaskList list) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            String textToWrite \u003d \"\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            int listLength \u003d list.size();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            for (int i \u003d 0; i \u003c listLength; i++) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                textToWrite \u003d textToWrite + list.get(i).getSaveDisplay();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            fw.write(textToWrite);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "terencemah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "terencemah": 72
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public abstract String getTaskDisplay();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public abstract String getSaveDisplay();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Outputs a tick or cross symbol to indicate whether"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * or not a task has been completed."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @return A tick if task is done, and a cross otherwise."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Allows a task to be marked as done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "terencemah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "terencemah": 32
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": "public class TaskList extends ArrayList\u003cTask\u003e {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        super(100);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "terencemah": 7
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public ToDo(String name) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Formats the task for display to the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @return The output string to be displayed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String getTaskDisplay() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return \" [T][\" + getStatusIcon() + \"] \" + name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Formats the task as it is to be stored/saved"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * on the hard disk."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @return The string the task is to be saved as."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String getSaveDisplay() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return \"T|\" + (isDone ? \"1\" : \"0\") + \"|\" + name + \"\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "terencemah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "terencemah": 24
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Returns the greeting message display on startup."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String getWelcomeMessage() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return \"    Hello! I\u0027m Duke!\\n\" + \"    What can I do for you today?\\n\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Returns the farewell message when user exits the application."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String getExitMessage() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return \"    Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String getAddedMessage(Task task, TaskList list) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        output +\u003d \"    Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        output +\u003d \"      \" + task.getTaskDisplay() + \"\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        output +\u003d \"    Now you have \" + list.size() + \" task\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                + ((list.size() \u003d\u003d 1) ? \"\" : \"s\") + \" in the list.\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String getIndexExceptionMessage() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return \"    Oops! The task you referred to is not on the list.\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                + \"    Please refer to the list using the \u0027list\u0027 command.\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String getNumFormatExceptionMessage() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return \"    Oops! This command must be followed by a task number.\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "terencemah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "terencemah": 33
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"200.0\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "terencemah"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "terencemah"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "terencemah": 19
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "terencemah": 19
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public void testDeadlineFormat() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"essay\", \"2020-01-29 2359\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        assertEquals(\"[D][\" + \"\\u2718\" + \"] essay (by: Jan 29 2020 11.59pm)\","
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                deadline.getTaskDisplay());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public void testEventFormat() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        Event event \u003d new Event(\"driving class\", \"12/5/2019 1300\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        assertEquals(\"[E][\" + \"\\u2718\" + \"] driving class (at: May 12 2019 1.00pm)\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                event.getTaskDisplay());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public void testParser() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        TaskList dummy \u003d new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        assertEquals(false, new Parser().parseCommand(\"bye bye\", dummy));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "terencemah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "terencemah": 24
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": "      [T][✘] read book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    Now you have 1 task in the list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": "      [D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": "      [E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "terencemah"
        },
        "content": "      [T][✓] read book"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "terencemah"
        },
        "content": "      [T][✘] join sports club"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "terencemah"
        },
        "content": "      [T][✘] borrow book"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "terencemah"
        },
        "content": "      [T][✓] join sports club"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    1.[T][✓] read book"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    2.[D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    3.[E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    4.[T][✓] join sports club"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    5.[T][✘] borrow book"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "terencemah": 28
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "terencemah"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "terencemah"
        },
        "content": "bye"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "terencemah": 10
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "terencemah"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "terencemah"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "terencemah"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "terencemah"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "terencemah"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "terencemah"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "terencemah"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "terencemah"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "terencemah"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "terencemah"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "terencemah"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "terencemah"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "terencemah"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "terencemah"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "terencemah"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "terencemah": 34
    }
  }
]
