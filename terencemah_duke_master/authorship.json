[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "terencemah"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "terencemah"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "terencemah"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "terencemah"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "terencemah"
        },
        "content": "test {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "terencemah"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "terencemah"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "terencemah"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "terencemah"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    archiveBaseName \u003d \"DukeT\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    archiveVersion \u003d \"0.2\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "terencemah"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "terencemah": 42,
      "-": 19
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "T|0|read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": "D|1|essay|Mar 2 2020 11.59pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": "E|0|midterm|Mar 3 2020 4.00pm"
      }
    ],
    "authorContributionMap": {
      "terencemah": 3
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   Welcome to Duke! This application allows a user to maintain a list of tasks"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   on it, which can be added to and updated. Changes made are all saved on the"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   disk automatically, and loaded back onto the app each time it is restarted."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    Displaying the task list:      Feature 1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    Adding tasks of various kinds: Features 2 - 4"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    Marking tasks as Done:         Feature 5"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    Deleting outdated tasks:       Feature 6"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    Searching using keywords:      Feature 7"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    Other useful features:         Feature 8"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "terencemah"
        },
        "content": "## Feature 1 - Displaying the Task List"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   This feature is activated by the keyword \u0027list\u0027, and displays the status of"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   all tasks currently on the list. The tasks are numbered, starting from 1,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   according to the chronological order in which they were added to the list,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   with more recently added tasks further down the list. The status display"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   features which category each task belongs to (To-do, Deadline, or Event),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   the time/deadline where applicable, and also marks which tasks are completed."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "terencemah"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   In the following example, the \u0027v\u0027 denotes a tick and \u0027x\u0027 denotes a cross."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   These symbols display whether a task has been completed."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   There are 3 kinds of tasks tracked by Duke in total:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   T denotes a to-do, D denotes a deadline, while E denotes an event."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "terencemah"
        },
        "content": "### Keyword - \u0027list\u0027   (not case-sensitive)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "terencemah"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "terencemah"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\"    Here are the tasks in your list:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     1. [T][v] Borrow book"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     2. [T][v] Read book"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     3. [D][x] Essay (by: Mar 2 2020 11.59pm)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     4. [E][x] Midterm (at: Mar 3 2020 4.00pm)\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "terencemah"
        },
        "content": "## Feature 2 - Adding a To-do"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   This feature is activated by the keyword \u0027todo\u0027, and allows the user to add a"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   simple task to be completed, without any additional accompanying information."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "terencemah"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "terencemah"
        },
        "content": "### Keyword - \u0027todo\u0027   (not case-sensitive)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "terencemah"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u0027todo borrow book\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "terencemah"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\"    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "terencemah"
        },
        "content": "       [T][x] borrow book"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     Now you have 1 task in the list.\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "terencemah"
        },
        "content": "## Feature 3 - Adding a Deadline"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   This feature is activated by the keyword \u0027deadline\u0027. It allows the user to add"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   an upcoming deadline, accompanied by the date and time it is due. The keyword"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   \u0027 /by \u0027 separates the task name and its deadline."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   For Duke to process date-time inputs, they must be entered in specific formats."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   Duke parses dates entered in YYYY-MM-DD or D/M/YYYY formats, and it parses times"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   entered in HHmm format. If any other format is encountered, Duke stores the date-"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   time input as a simple String instead."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   If Duke successfully parses the date-time input, it outputs it in the format"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   shown in the example below."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "terencemah"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "terencemah"
        },
        "content": "### Keywords - \u0027deadline\u0027 and \u0027 /by \u0027   (only \u0027 /by \u0027 is case-sensitive)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "terencemah"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u0027deadline History Essay /by 2/3/2020 2359\u0027"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "terencemah"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\"    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "terencemah"
        },
        "content": "       [D][x] History Essay (by: Mar 2 2020, 11.59pm)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     Now you have 2 tasks in the list.\""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "terencemah"
        },
        "content": "## Feature 4 - Adding an Event"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   This feature is activated by the keyword \u0027event\u0027. It allows the user to add an"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   upcoming event, accompanied by the date and time of the event. The keyword \u0027 /at \u0027"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   separates the event name from the event time."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   As with the Deadline function, dates and times must be entered in specific formats."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   Duke parses dates entered in YYYY-MM-DD or D/M/YYYY formats, and it parses times"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   entered in HHmm format. If any other format is encountered, Duke stores the date-"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   time input as a simple String instead."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   If Duke successfully parses the date-time input, it outputs it in the format"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   shown in the example below."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "terencemah"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "terencemah"
        },
        "content": "### Keywords - \u0027event\u0027 and \u0027 /at \u0027   (only \u0027 /at \u0027 is case-sensitive)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u0027event History Midterm /at 3/3/2020 1600\u0027"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\"    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "terencemah"
        },
        "content": "       [E][x] History Midterm (at: Mar 3 2020, 4.00pm)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     Now you have 3 tasks in the list.\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "terencemah"
        },
        "content": "## Feature 5 - Marking Tasks as \u0027Done\u0027"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   This feature allows the user to mark (or check) certain Tasks as \u0027Done\u0027."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   Tasks that are marked \u0027Done\u0027 are displayed with a tick instead of a cross"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   when the \u0027list\u0027 command is used. It is activated using the \u0027done\u0027 keyword."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   The task to be marked as Done is referred to using its number on the list."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   This number can be easily verified using the \u0027list\u0027 command."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "terencemah"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "terencemah"
        },
        "content": "### Keyword - \u0027done\u0027   (not case-sensitive)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "terencemah"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u0027done 1\u0027"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "terencemah"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\"    Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "terencemah"
        },
        "content": "       [T][v] borrow book\""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "terencemah"
        },
        "content": "## Feature 6 - Deleting Tasks"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   This feature allows the user to remove tasks from the list when they have become"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   outdated or no longer relevant. It is activated using the \u0027delete\u0027 keyword."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   As with \u0027done\u0027, the task to be deleted is referred to using its number on the list."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   This number can be easily verified using the \u0027list\u0027 command."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "terencemah"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "terencemah"
        },
        "content": "### Keyword - \u0027delete\u0027   (not case-sensitive)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "terencemah"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u0027delete 1\u0027"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "terencemah"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\"    Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "terencemah"
        },
        "content": "       [T][v] borrow book"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     Now you have 2 tasks in the list.\""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "terencemah"
        },
        "content": "## Feature 7 - Searching for Tasks using Keywords"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   This feature allows the user to search for all tasks containing a given keyword"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   in their names. It is activated using the \u0027find\u0027 keyword."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "terencemah"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "terencemah"
        },
        "content": "### Keyword - \u0027find\u0027   (not case-sensitive, but search string is)"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "terencemah"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u0027find History\u0027"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "terencemah"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\"    Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     1. [D][x] History Essay (by: Mar 2 2020, 11.59pm)"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     2. [E][x] History Midterm (at: Mar 3 2020, 4.00pm)\""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "terencemah"
        },
        "content": "## Feature 8 - Undoing Commands"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   This feature allows the user to undo changes to the list he/she has made in the"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   current application run. It is activated by the keyword \u0027undo\u0027."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   If there still is an action that can be undone, Duke outputs \u0027Undo successful!\u0027"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   Otherwise, Duke outputs \u0027Oops! Can\u0027t undo any further.\u0027"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "terencemah"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "terencemah"
        },
        "content": "### Keyword - \u0027undo\u0027   (not case-sensitive)"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "terencemah"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u0027undo\u0027"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "terencemah"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u0027Undo successful!\u0027"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "terencemah"
        },
        "content": "If \u0027list\u0027 is called again, the following will be displayed:"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\"    Here are the tasks in your list:"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     1. [T][v] borrow book"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     2. [D][x] History Essay (by: Mar 2 2020 11.59pm)"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     3. [E][x] History Midterm (at: Mar 3 2020 4.00pm)\""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "terencemah"
        },
        "content": "The previous \u0027delete\u0027 action on Task 1 (\u0027borrow book\u0027) has been undone."
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "terencemah"
        },
        "content": "## Feature 9 - Exiting the Application"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   To exit the application, the user may use the \u0027bye\u0027 keyword. This causes Duke"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "terencemah"
        },
        "content": "   to output a goodbye message, and close the application window."
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "terencemah"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "terencemah"
        },
        "content": "### Keyword - \u0027bye\u0027   (not case-sensitive)"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "terencemah"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u0027Bye\u0027"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\"    Bye. Hope to see you again soon!\""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "terencemah"
        },
        "content": "(application window closes after a 1-second delay)"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "terencemah": 228,
      "-": 23
    }
  },
  {
    "path": "src/main/java/ActionHistory.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.util.Stack;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": " * This class inherits from Stack, and stores consecutive versions"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": " * of the working task list in a stack. It allows for the program\u0027s"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": " * \u0027undo\u0027 function by enabling the tracing back of previous versions"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": " * of the task list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "terencemah"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "terencemah"
        },
        "content": "public class ActionHistory extends Stack\u003cTaskList\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * This method perfectly clones the contents of one TaskList"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * into another TaskList."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param original The task list to be copied from."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param copy The task list to be copied into."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public static void copyList(TaskList original, TaskList copy) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        int copyLength \u003d copy.size();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        for (int i \u003d 0; i \u003c copyLength; i++) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            copy.remove(0);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        int originalLength \u003d original.size();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        for (int i \u003d 0; i \u003c originalLength; i++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            copy.add(Task.duplicate(original.get(i)));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            if (original.get(i).isDone) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                copy.get(i).markDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "terencemah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "terencemah": 31
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.util.StringTokenizer;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "terencemah"
        },
        "content": " * This class encompasses Deadlines, a specific subtype of Task objects."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "terencemah"
        },
        "content": " * They comprise a task name accompanied by a deadline,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": " * before which the task must be completed."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "terencemah"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "terencemah"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    protected String deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Creates a Deadline representing the task the user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * wishes to store. If the deadline is entered in a"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * recognisable format, then the deadline is stored"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * as a date and time rather than simply a String."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param name Name of task to be completed."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param input Deadline of task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public Deadline(String name, String input) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        StringTokenizer st \u003d new StringTokenizer(input);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        String dateString \u003d st.nextToken();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            date \u003d LocalDate.parse(dateString);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                date \u003d LocalDate.parse(dateString, DateTimeFormatter.ofPattern(\"d/M/yyyy\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            } catch (DateTimeParseException x) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                // do nothing"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        if (st.hasMoreTokens()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            String timeString \u003d st.nextToken();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                time \u003d LocalTime.parse(timeString, DateTimeFormatter.ofPattern(\"HHmm\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                // do nothing"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        if (date !\u003d null) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            deadline \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            if (time !\u003d null) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                deadline \u003d deadline + \" \" + time.format(DateTimeFormatter.ofPattern(\"K.mma\"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            deadline \u003d input;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Formats the Deadline task for display to the user."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @return The output string to be displayed."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String getTaskDisplay() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        assert deadline !\u003d null : \"Missing deadline\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return \" [D][\" + getStatusIcon() + \"] \" + name + \" (by: \" + deadline + \")\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Formats the Deadline task as it is to be stored/saved"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * on the hard disk."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @return The string the task is to be saved as."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String getSaveDisplay() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        assert deadline !\u003d null : \"Missing deadline\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return \"D|\" + (isDone ? \"1\" : \"0\") + \"|\" + name + \"|\" + deadline + \"\\n\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "terencemah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "terencemah": 89
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "terencemah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "terencemah"
        },
        "content": " * This custom control represents a dialog box consisting of an ImageView"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "terencemah"
        },
        "content": " * to represent the speaker and a Label containing text from the speaker."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "terencemah"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "terencemah"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private DialogBox(String text, Image image) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource("
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                    \"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        displayPicture.setImage(image);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Flips the dialog box such that the text Label is now"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * on the right of the image."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        ObservableList\u003cNode\u003e temp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        Collections.reverse(temp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        getChildren().setAll(temp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image image) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return new DialogBox(text, image);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image image) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        var dialogBox \u003d new DialogBox(text, image);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        dialogBox.flip();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return dialogBox;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "terencemah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "terencemah": 60
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": " * This class is the main logical control centre of the Duke program."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": " * It manages both the Parser, which parses and responds to user input,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": " * as well as the Storage, which loads from and writes to the save file."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private final String SAVE_DIR \u003d \"./data/duke.txt\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Initialises the Duke program on startup"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * by loading the previously saved task list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * onto the working list, if there exists one."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Otherwise, the working list starts empty."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        storage \u003d new Storage(SAVE_DIR);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        storage.load(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Obtains the welcome message from the Parser."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @return the welcome message as a String."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String getWelcomeMessage() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return parser.getWelcomeMessage();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Passes the user input into the Parser, and"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * returns the program output message as a String."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Also updates the save file with any changes."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param command The user\u0027s input command."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @return the program\u0027s output message."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String getResponse(String command) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        assert !command.equals(\"\") : \"Empty input\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        String response \u003d parser.parseCommand(command, tasks);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "terencemah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "terencemah": 46,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.util.StringTokenizer;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "terencemah"
        },
        "content": " * This class encompasses Events, a specific sub-type of Task objects."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "terencemah"
        },
        "content": " * They comprise an event name accompanied by its event time."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "terencemah"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    protected String eventTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Creates an Event Task representing the event the user"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * wishes to store. If the event date/time is entered in a"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * recognisable format, then the event date/time is stored"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * as a date and time rather than simply a String."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param name Name of event."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param input Date and time of event."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public Event(String name, String input) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        StringTokenizer st \u003d new StringTokenizer(input);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        String dateString \u003d st.nextToken();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            date \u003d LocalDate.parse(dateString);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                date \u003d LocalDate.parse(dateString, DateTimeFormatter.ofPattern(\"d/M/yyyy\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            } catch (DateTimeParseException x) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                // do nothing"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        if (st.hasMoreTokens()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            String timeString \u003d st.nextToken();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                time \u003d LocalTime.parse(timeString, DateTimeFormatter.ofPattern(\"HHmm\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                // do nothing"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        if (date !\u003d null) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            eventTime \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            if (time !\u003d null) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                eventTime \u003d eventTime + \" \" + time.format(DateTimeFormatter.ofPattern(\"K.mma\"));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            eventTime \u003d input;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Formats the Event task for display to the user."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @return The output string to be displayed."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String getTaskDisplay() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        assert eventTime !\u003d null : \"Missing event time\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return \" [E][\" + getStatusIcon() + \"] \" + name + \" (at: \" + eventTime + \")\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Formats the Event task as it is to be stored/saved"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * on the hard disk."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @return The string the task is to be saved as."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String getSaveDisplay() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        assert eventTime !\u003d null : \"Missing event time\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return \"E|\" + (isDone ? \"1\" : \"0\") + \"|\" + name + \"|\" + eventTime + \"\\n\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "terencemah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "terencemah": 88
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": " * A class to work around classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "terencemah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "terencemah": 11
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "terencemah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": " * This class runs the guided user interface"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "terencemah"
        },
        "content": " * of the Duke program using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "terencemah"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "terencemah"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource("
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                    \"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            AnchorPane anchorPane \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            Scene scene \u003d new Scene(anchorPane);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(new Duke());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "terencemah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "terencemah": 30
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.util.Timer;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.util.TimerTask;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "terencemah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "terencemah"
        },
        "content": " * This class serves as the controller for the MainWindow"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "terencemah"
        },
        "content": " * FXML file, which contains the layout design of the root node."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "terencemah"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "terencemah"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private final String BYE_MESSAGE \u003d \"    Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/UserImage.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DukeImage.png\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Interacts with the Duke class, the main logical"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * control centre of the program. Also initialises the"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * application with the welcome message."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param d The Duke object running the program."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                DialogBox.getDukeDialog(duke.getWelcomeMessage(), dukeImage)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        assert dialogContainer.getChildren().size() \u003e 0 : \"Welcome message missing\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Creates two dialog boxes in response to user input -"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * the first echoing the user\u0027s input and the second containing"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Duke\u0027s reply - and appends them to the dialog container."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * The user\u0027s input is cleared after processing."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Also, the method does not respond if the text field is empty,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * even if the Enter key or Send button is pressed."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Finally, this method closes the application when Duke"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * outputs its goodbye message."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        if (input.equals(\"\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        Node userDialog \u003d DialogBox.getUserDialog(input, userImage);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        Node dukeDialog \u003d DialogBox.getDukeDialog(response, dukeImage);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        dialogContainer.getChildren().addAll(userDialog, dukeDialog);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        if (response.equals(BYE_MESSAGE)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            TimerTask exit \u003d new TimerTask() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                public void run() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                    Platform.exit();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                    System.exit(0);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            };"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            Timer timer \u003d new Timer();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            timer.schedule(exit, 1000);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "terencemah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "terencemah": 88
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.util.EmptyStackException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": " * This class is responsible for parsing and processing"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": " * the various user input commands, and then responding appropriately."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private ActionHistory history;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        history \u003d new ActionHistory();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @return The welcome message on Duke\u0027s initialisation."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String getWelcomeMessage() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return ui.getWelcomeMessage();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Parses the user input and processes the commands accordingly."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Returns the string representing Duke\u0027s reply to the user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param input Input string entered by user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param list Working task list of the program, for updating."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @return The string representing Duke\u0027s reply to the user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String parseCommand(String input, TaskList list) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        String response;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        TaskList clonedList \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        ActionHistory.copyList(list, clonedList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        String[] commands \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        switch (commands[0].toLowerCase()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            response \u003d ui.getExitMessage();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            response \u003d executeListCommand(list);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            response \u003d executeTodoCommand(commands, list, clonedList);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            response \u003d executeDeadlineCommand(commands, list, clonedList);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            response \u003d executeEventCommand(commands, list, clonedList);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            response \u003d executeDoneCommand(commands, list, clonedList);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            response \u003d executeDeleteCommand(commands, list, clonedList);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            response \u003d executeFindCommand(commands, list);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        case \"undo\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            response \u003d executeUndoCommand(list);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            response \u003d \"    Oops! I\u0027m sorry, but I don\u0027t know what that means :(\\n\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Implements the \u0027list\u0027 functionality of the program."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param list The working task list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @return Duke\u0027s message listing to the user the tasks on the list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private String executeListCommand(TaskList list) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        String response \u003d \"    Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        int listLength \u003d list.size();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        for (int i \u003d 0; i \u003c listLength; i++) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            response +\u003d \"    \" + (i + 1) + \".\" + list.get(i).getTaskDisplay() + \"\\n\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Implements the adding of tasks to the list."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param task The task to be added."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param list The working task list."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @return The message confirming the addition of the task to the list."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private String executeAddCommand(Task task, TaskList list) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return ui.getAddedMessage(task, list);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Implements the \u0027to-do\u0027 functionality of the program."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param commands The array of user input commands."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param original The original task list."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param clone The clone of the task list."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @return The message confirming addition of the to-do."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private String executeTodoCommand(String[] commands, TaskList original, TaskList clone) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        String response;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            Task todo \u003d new ToDo(commands[1]);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            response \u003d executeAddCommand(todo, original);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            history.push(clone);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            response \u003d \"    Oops! The description of a todo cannot be empty.\\n\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Implements the \u0027deadline\u0027 functionality of the program."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param commands The array of user input commands."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param original The original task list."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param clone The clone of the task list."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @return The message confirming addition of the deadline."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private String executeDeadlineCommand(String[] commands, TaskList original, TaskList clone) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        String response;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            String[] details \u003d commands[1].split(\" /by \", 2);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            Task deadline \u003d new Deadline(details[0], details[1]);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            response \u003d executeAddCommand(deadline, original);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            history.push(clone);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            response \u003d \"    Oops! A deadline must contain both a task \""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                    + \"description and a deadline.\\n\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Implements the \u0027event\u0027 functionality of the program."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param commands The array of user input commands."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param original The original task list."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param clone The clone of the task list."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @return The message confirming addition of the event."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private String executeEventCommand(String[] commands, TaskList original, TaskList clone) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        String response;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            String[] details \u003d commands[1].split(\" /at \", 2);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            Task event \u003d new Event(details[0], details[1]);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            response \u003d executeAddCommand(event, original);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            history.push(clone);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            response \u003d \"    Oops! An event must contain both an event \""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                    + \"description and event time.\\n\";"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Implements the \u0027done\u0027 functionality of the program,"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * marking a task a \u0027done\u0027."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param commands The array of user input commands."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param original The original task list."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param clone The clone of the task list."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @return The message confirming the task has been marked as done."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private String executeDoneCommand(String[] commands, TaskList original, TaskList clone) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        String response;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            int index \u003d Integer.parseInt(commands[1]) - 1;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            original.get(index).markDone();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            response \u003d \"    Nice! I\u0027ve marked this task as done:\\n      \""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                    + original.get(index).getTaskDisplay() + \"\\n\";"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            history.push(clone);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            response \u003d ui.getIndexExceptionMessage();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            response \u003d ui.getNumFormatExceptionMessage();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Implements the \u0027delete\u0027 functionality of the program,"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * removing tasks from the list."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param commands The array of user input commands."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param original The original task list."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param clone The clone of the task list."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @return The message confirming deletion of the task."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private String executeDeleteCommand(String[] commands, TaskList original, TaskList clone) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        String response;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            int index \u003d Integer.parseInt(commands[1]) - 1;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            Task toDelete \u003d original.remove(index);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            response \u003d \"    Noted. I\u0027ve removed this task:\\n      \" + toDelete.getTaskDisplay()"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                    + \"\\n    Now you have \" + original.size() + \" task\""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                    + ((original.size() \u003d\u003d 1) ? \"\" : \"s\") + \" in the list.\\n\";"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            history.push(clone);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            response \u003d ui.getIndexExceptionMessage();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            response \u003d ui.getNumFormatExceptionMessage();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Implements the search functionality of the program."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Allows the user to search for tasks using keywords."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param commands The array of user input commands."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param list The working task list."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @return Duke\u0027s reply listing the tasks matching the user\u0027s"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     *         search string."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private String executeFindCommand(String[] commands, TaskList list) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        String response;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            response \u003d \"    Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            int listSize \u003d list.size();"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            for (int i \u003d 0; i \u003c listSize; i++) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                if (list.get(i).getName().contains(commands[1])) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                    response +\u003d \"    \" + (i + 1) + \".\" + list.get(i).getTaskDisplay() + \"\\n\";"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            response \u003d \"    Oops! A \u0027find\u0027 command must be followed by a search word.\\n\";"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Implements the \u0027undo\u0027 functionality of the program."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Allows a user to erase actions on the program,"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * within the same application run."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param list The working task list."
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @return The message confirming whether or not the"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     *         undo was successful."
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private String executeUndoCommand(TaskList list) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        String response;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            ActionHistory.copyList(history.pop(), list);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            response \u003d \"    Undo successful!\\n\";"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        } catch (EmptyStackException e) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            response \u003d \"    Oops! Can\u0027t undo any further.\\n\";"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "terencemah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "terencemah": 249
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.util.StringTokenizer;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "terencemah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "terencemah"
        },
        "content": " * This class handles the program\u0027s interaction with the save file"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": " * on the disk. It is responsible for loading from the save file on"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "terencemah"
        },
        "content": " * initialisation, and writing any updates to the list to the save file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "terencemah"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "terencemah"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    private final String DIRECTORY \u003d \"./data/\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Loads a previously saved task list from a save file specified"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * by the filepath upon starting up the program."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * If the save file does not exist, this method creates a"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * new directory and file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param list Working task list of the program, for loading the saved data onto."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public void load(TaskList list) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                String nextLine \u003d sc.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                StringTokenizer st \u003d new StringTokenizer(nextLine, \"|\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                String taskType \u003d st.nextToken();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                String taskDone \u003d st.nextToken();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                Task newTask;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                        newTask \u003d new Deadline(st.nextToken(), st.nextToken());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                        newTask \u003d new Event(st.nextToken(), st.nextToken());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                        newTask \u003d new ToDo(st.nextToken());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                if (taskDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                    newTask.markDone();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                list.add(newTask);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            File directory \u003d new File(DIRECTORY);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            directory.mkdir();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                f.createNewFile();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            } catch (IOException a) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                a.printStackTrace();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Saves any changes to the task list to the hard disk"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * immediately by overwriting the original file."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param list Updated working task list of the program, for rewriting the file with."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @throws IOException If an error occurs in writing the file."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public void save(TaskList list) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            String textToWrite \u003d \"\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            int listLength \u003d list.size();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            for (int i \u003d 0; i \u003c listLength; i++) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                textToWrite \u003d textToWrite + list.get(i).getSaveDisplay();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            fw.write(textToWrite);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "terencemah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "terencemah": 91
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": " * This abstract class encompasses all the different Task objects"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": " * being managed by the Duke program\u0027s list."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public abstract String getTaskDisplay();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public abstract String getSaveDisplay();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public abstract String getType();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Outputs a tick or cross symbol to indicate whether"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * or not a task has been completed."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @return A tick if task is done, and a cross otherwise."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Allows a task to be marked as done."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * This method instantiates a new, identical copy"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * of an existing task, to be stored in ActionHistory."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * This ensures that updates to the old task do not"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * affect the copy as well."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param task The task being duplicated."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @return The newly-instantiated duplicate of the original task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public static Task duplicate(Task task) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        switch (task.getType()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            return new ToDo(task.getName());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            return new Deadline(task.getName(), ((Deadline) task).getInput());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            return new Event(task.getName(), ((Event) task).getInput());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "terencemah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "terencemah": 58
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": " * This class inherits from ArrayList, and serves as"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": " * a working list for the list being managed by Duke."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": " * It is also stored in ActionHistory as snapshots of"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": " * the list\u0027s version history."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "terencemah"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "terencemah"
        },
        "content": "public class TaskList extends ArrayList\u003cTask\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        super(100);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "terencemah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "terencemah": 13
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": " * This class encompasses ToDos, a specific sub-type of Task objects."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": " * They comprise only the name of a task to be completed,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": " * with no accompanying information."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public ToDo(String name) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Formats the task for display to the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @return The output string to be displayed."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String getTaskDisplay() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return \" [T][\" + getStatusIcon() + \"] \" + name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Formats the task as it is to be stored/saved"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * on the hard disk."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @return The string the task is to be saved as."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String getSaveDisplay() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return \"T|\" + (isDone ? \"1\" : \"0\") + \"|\" + name + \"\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "terencemah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "terencemah": 33
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": " * This class handles the various default message outputs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": " * of the Duke program."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Returns the greeting message display on startup."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String getWelcomeMessage() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return \"    Hello! I\u0027m Duke!\\n\" + \"    What can I do for you today?\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Returns the farewell message when user exits the application."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String getExitMessage() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return \"    Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * Returns the message output when the user adds a task to the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param task The task to be added."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @param list The working task list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @return The message output on adding the task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String getAddedMessage(Task task, TaskList list) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        output +\u003d \"    Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        output +\u003d \"      \" + task.getTaskDisplay() + \"\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        output +\u003d \"    Now you have \" + list.size() + \" task\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                + ((list.size() \u003d\u003d 1) ? \"\" : \"s\") + \" in the list.\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @return The message output when a user input error"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     *         leads to an Index Exception."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String getIndexExceptionMessage() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return \"    Oops! The task you referred to is not on the list.\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                + \"    Please refer to the list using the \u0027list\u0027 command.\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     * @return The message output when a user input error"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     *         leads to a Number Format Exception."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "terencemah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public String getNumFormatExceptionMessage() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        return \"    Oops! This command must be followed by a task number.\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "terencemah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "terencemah": 51
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"129.0\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "terencemah"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "terencemah"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "terencemah": 19
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "terencemah"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "terencemah"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "terencemah": 19
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public void testDeadlineFormat() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"essay\", \"2020-01-29 2359\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        assertEquals(\"[D][\" + \"\\u2718\" + \"] essay (by: Jan 29 2020 11.59pm)\","
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                deadline.getTaskDisplay());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public void testEventFormat() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        Event event \u003d new Event(\"driving class\", \"12/5/2019 1300\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        assertEquals(\"[E][\" + \"\\u2718\" + \"] driving class (at: May 12 2019 1.00pm)\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "terencemah"
        },
        "content": "                event.getTaskDisplay());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    public void testParser() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        TaskList dummy \u003d new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "terencemah"
        },
        "content": "        assertEquals(false, new Parser().parseCommand(\"bye bye\", dummy));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "terencemah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "terencemah": 24
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": "      [T][✘] read book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    Now you have 1 task in the list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": "      [D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": "      [E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "terencemah"
        },
        "content": "      [T][✓] read book"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "terencemah"
        },
        "content": "      [T][✘] join sports club"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "terencemah"
        },
        "content": "      [T][✘] borrow book"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "terencemah"
        },
        "content": "      [T][✓] join sports club"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    1.[T][✓] read book"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    2.[D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    3.[E][✘] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    4.[T][✓] join sports club"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    5.[T][✘] borrow book"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "terencemah": 28
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "terencemah"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "terencemah"
        },
        "content": "bye"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "terencemah": 10
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "terencemah"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "terencemah"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "terencemah"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "terencemah"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "terencemah"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "terencemah"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "terencemah"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "terencemah"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "terencemah"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "terencemah"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "terencemah"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "terencemah"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "terencemah"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "terencemah"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "terencemah"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "terencemah"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "terencemah"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "terencemah"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "terencemah"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "terencemah"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "terencemah"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "terencemah"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "terencemah"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "terencemah": 34
    }
  }
]
