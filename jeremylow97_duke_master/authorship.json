[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "duke.main.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for duke.main.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 2,
      "-": 37
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "//    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "//"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "//javafx {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "//    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "//    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "//}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 38,
      "-": 19
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "[T][✘] aaaa"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "[T][✘] asadasfasdfas"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "[T][✘] asdagrwedfd"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "[T][✘] avcsd"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "[T][✘] zzzz"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 5
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import duke.main.Main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 8
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public static String run() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 9
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "public class DeadlineCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Creates a Deadline task and store it in list of tasks created."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param tasks the list of tasks created so far"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param task the Deadline task that needs to stored"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param byDeadline the deadline of the Deadline task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @return the output to inform user that the task has been added"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public static String run(TaskList tasks, String task, String byDeadline) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        Deadline deadline \u003d new Deadline(task, byDeadline);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        tasks.add(deadline);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return \"Got it, I\u0027ve added the following task:\\n\" + \"  \" + deadline + \"\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                + \"Now you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 24
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "public class DeleteCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Deletes the task from the list of tasks created."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param tasks is the list of tasks created"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param taskIndex the index of the task to be deleted"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @return the output to inform user that the task has been deleted"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public static String run(TaskList tasks, int taskIndex) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        Task taskToDelete \u003d tasks.get(taskIndex);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        tasks.remove(taskIndex);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return \"Noted, I\u0027ve removed the following task:\\n\" + \"  \" + taskToDelete + \"\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                + \"Now you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 21
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "public class DoneCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Mark the task from the list of tasks as done."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param tasks is the list of tasks created"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param taskIndex the index of the task to be completed"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @return output to inform user that the task has been completed"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public static String run(TaskList tasks, int taskIndex) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        Task taskToDo \u003d tasks.get(taskIndex);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        taskToDo.markAsDone();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return \"Noted, I\u0027ve marked the following task:\\n\" + \"  \" + taskToDo + \" as done! \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                + \"Now you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 20
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "public class EventCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Creates a Event task and store it in list of tasks created."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param tasks is the list of tasks created so far"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param task is the Event task that needs to stored"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param atEvent is the time of the event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @return the output to inform user that the Event task has been added"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public static String run(TaskList tasks, String task, String atEvent) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        Event event \u003d new Event(task, atEvent);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        tasks.add(event);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return \"Got it, I\u0027ve added the following task:\\n\" + \"  \" + event + \"\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                + \"Now you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 23
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "public class FindCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Finds all the tasks that contains the keyword."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param tasks is all the tasks that has been saved"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param keyword is the keyword by the user that he wants to find in tasks"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @return the formatted output that contains all the tasks that matches keyword."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public static String run(TaskList tasks, String keyword) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.findTasks(keyword);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        output.append(\"Here are the matching tasks in your list: \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            String currTask \u003d i + 1 + \".\" + matchingTasks.get(i);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            output.append(System.lineSeparator());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            output.append(currTask);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 30
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "public class ListCommand implements Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Lists all the tasks that has been stored so far."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param tasks the list of tasks that has been created"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @return the formatted output of all the tasks stored"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public static String run(TaskList tasks) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        if (!tasks.isEmpty()) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            output.append(\"Here are the tasks in your list\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            return \"There are no tasks in your list\" + \"\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            String currTask \u003d i + 1 + \". \" + tasks.get(i);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            output.append(System.lineSeparator());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            output.append(currTask);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 30
    }
  },
  {
    "path": "src/main/java/duke/command/SortCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "public class SortCommand {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Sorts the list of tasks by their alphabetical order."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param tasks the list of tasks stored"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @return the output to inform user that the tasks have been sorted"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public static String run(TaskList tasks) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        tasks.sortByAlphabeticalOrder();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return \"Noted, I\u0027ve sorted all the tasks according to alphabetical order\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 16
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "public class TodoCommand implements Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Add the todo task to the list of tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param tasks is the list of tasks created"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param task is the todo task to be added"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @return the output to inform user that the todo task has been added"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public static String run(TaskList tasks, String task) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        Todo todo \u003d new Todo(task);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        tasks.add(todo);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return \"Got it, I\u0027ve added the following task:\\n\" + \"  \" + todo + \"\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                + \"Now you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 21
    }
  },
  {
    "path": "src/main/java/duke/main/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    //Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Displays the user\u0027s output text and its profile picture."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param text that the user outputs"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param img is the profile image of user"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @return the box that for GUI display"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        DialogBox d \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        d.setStyle(\"-fx-background-color: rgba(16,126,128,0.42)\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return d;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Displays the Duke\u0027s output text and its profile picture."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param text that the Duke outputs"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param img is the profile image of Duke"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @return the box that for GUI display"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 72
    }
  },
  {
    "path": "src/main/java/duke/main/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Constructor for duke.main.Duke to start the initialise the necessary variables."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            tasks \u003d storage.load();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        ui \u003d new Ui(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Takes in the user input to be parsed and processed by Parse to get an output."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * While this happens, the storages gets updated too"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param input from the user"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @return the generated output by Duke"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @throws IOException when stored file cannot be read or accessed"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public String getResponse(String input) throws IOException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        String output \u003d parser.parse(input, ui, tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        storage.updateData(tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 47,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/main/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": " * A class for user-specific exceptions."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    String errorMsg \u003d \"Error is not specified\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    DukeException(String s) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        errorMsg \u003d s;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return errorMsg;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 17
    }
  },
  {
    "path": "src/main/java/duke/main/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": " * A GUI for duke.main.Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 32
    }
  },
  {
    "path": "src/main/java/duke/main/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": " * Controller for duke.main.MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Trump.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/KimPic.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Initialises the GUI display."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                DialogBox.getDukeDialog(Ui.getWelcomeMessage(), dukeImage)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        );"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing duke.main.Duke\u0027s reply and"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * then appends them to the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private void handleUserInput() throws IOException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        String response \u003d \"RocketMan said: \" + \"\\n\" + duke.getResponse(input);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        );"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 62
    }
  },
  {
    "path": "src/main/java/duke/main/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import duke.command.TodoCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import duke.command.SortCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Method that parses user input into instructions to be followed."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param input the user input"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param ui    current instance of ui so that ui can interact with user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param tasks the tasks available in current duke.main.Duke program"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public String parse(String input, Ui ui, TaskList tasks) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        String command \u003d \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            command \u003d getCommand(input);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        } catch (DukeException d) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            return d.toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        case \"list\": {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            return ListCommand.run(tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        case \"todo\": {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            String task \u003d input.substring(input.indexOf(\u0027 \u0027) + 1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            return TodoCommand.run(tasks, task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        case \"deadline\": {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            String byDeadline \u003d input.substring(input.indexOf(\u0027/\u0027) + 4);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            return DeadlineCommand.run(tasks, getTaskString(input), byDeadline);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        case \"event\": {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            String atEvent \u003d input.substring(input.indexOf(\u0027/\u0027) + 4);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            return EventCommand.run(tasks, getTaskString(input), atEvent);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        case \"delete\": {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            return DeleteCommand.run(tasks, getTaskIndex(input));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        case \"done\": {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            return DoneCommand.run(tasks, getTaskIndex(input));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        case \"find\": {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            String keyword \u003d input.substring(input.indexOf(\u0027 \u0027) + 1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            return FindCommand.run(tasks, keyword);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        case \"sort\": {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            return SortCommand.run(tasks);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            return \"Invalid Command\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public String getTaskString(String input) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return input.substring(input.indexOf(\u0027 \u0027) + 1, input.indexOf(\u0027/\u0027) - 1);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public int getTaskIndex(String input) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return Integer.parseInt(input.substring(input.indexOf(\u0027 \u0027) + 1, input.length())) - 1;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Gets the command from input string for further processing."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param input is the user input"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @return a String that is only the command"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @throws DukeException is thrown when there is an invalid command by user"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public String getCommand(String input) throws DukeException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        if (!input.contains(\" \")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            // check if the command is correct"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            if (!input.equals(\"todo\")"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                    \u0026\u0026 !input.equals(\"deadline\")"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                    \u0026\u0026 !input.equals(\"event\")"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                    \u0026\u0026 !input.equals(\"delete\")"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                    \u0026\u0026 !input.equals(\"done\")"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                    \u0026\u0026 !input.equals(\"find\")"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                    \u0026\u0026 !input.equals(\"list\")"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                    \u0026\u0026 !input.equals(\"sort\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                throw new DukeException(\"Mister Excuse You, Command I Dont Understand!\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                // command is either not valid, or is list"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                if (!input.equals(\"list\") \u0026\u0026 !input.equals(\"sort\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                    throw new DukeException(\"What is this! \" + input + \" cannot be empty okay?!\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                    return input;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            if (!input.substring(0, input.indexOf(\u0027 \u0027)).equals(\"todo\")"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                    \u0026\u0026 !input.substring(0, input.indexOf(\u0027 \u0027)).equals(\"deadline\")"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                    \u0026\u0026 !input.substring(0, input.indexOf(\u0027 \u0027)).equals(\"event\")"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                    \u0026\u0026 !input.substring(0, input.indexOf(\u0027 \u0027)).equals(\"delete\")"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                    \u0026\u0026 !input.substring(0, input.indexOf(\u0027 \u0027)).equals(\"done\")"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                    \u0026\u0026 !input.substring(0, input.indexOf(\u0027 \u0027)).equals(\"find\")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                throw new DukeException(\"Mister Excuse You, Command I Dont Understand!\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                return input.substring(0, input.indexOf(\u0027 \u0027));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 117
    }
  },
  {
    "path": "src/main/java/duke/main/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public static String dataPath \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Loads the saved data from the saved file in hard disk."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @return a TaskList object which stores all the saved tasks (if there is saved file)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @throws IOException when there is no saved file or it cannot be accessed"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public TaskList load() throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        File f \u003d new File(dataPath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        Scanner s;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            new File(\"data\").mkdir();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            f.createNewFile();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            return new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            // convert string back to task"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            String taskString \u003d s.nextLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            String type \u003d taskString.substring(0,3);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            String desc \u003d \"\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            String at \u003d \"\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            String by \u003d \"\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            case \"[T]\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                desc \u003d taskString.substring(taskString.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                Todo todo \u003d new Todo(desc);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                tasks.add(todo);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            case \"[D]\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                desc \u003d taskString.substring(taskString.indexOf(\" \") + 1, taskString.indexOf(\" (by\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                by \u003d taskString.substring(taskString.indexOf(\"(by:\") + 5, taskString.length() - 1);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                LocalDate d \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                d.format(DateTimeFormatter.ofPattern(\"yyyy-mm-dd\"));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                Deadline deadline \u003d new Deadline(desc, d.toString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                tasks.add(deadline);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            case \"[E]\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                desc \u003d taskString.substring(taskString.indexOf(\" \") + 1, taskString.indexOf(\" (at\"));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                at \u003d taskString.substring(taskString.indexOf(\"(at:\") + 5, taskString.length() - 1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                Event event \u003d new Event(desc, at);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                tasks.add(event);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                assert false;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Updates the data in the saved file when there is any changes made to tasks."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param tasks is the tasks to be updated stored in a TaskList object"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @throws IOException when there is no saved file or it cannot be accessed"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public void updateData(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        FileWriter fw \u003d new FileWriter(dataPath); // to always append to file"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            fw.write(tasks.get(i).toString() + \"\\n\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 97
    }
  },
  {
    "path": "src/main/java/duke/main/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Constructor for the class that stores all the tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param tasks is the tasks to be stored in the TaskList object"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Check if there is any tasks stored in the TaskList object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @return if there is any tasks"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return tasks.isEmpty();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Check the size of this instance of TaskList."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @return the size of the duke.main.TaskList"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Gets the indexed task from TaskList."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param i is the index that user want"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @return the indexed task"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return tasks.get(i);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Adds the task to the current instance of duke.main.TaskList."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param task is the task to be added"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Removes the task to the current instance of duke.main.TaskList."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param toDelete is the index of task to be removed"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public void remove(int toDelete) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        tasks.remove(toDelete);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Finds and returns all the tasks with the keyword."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param keyword is the keyword that we want to search amongst all the tasks"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @return an ArrayList of all the tasks with the keyword"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public ArrayList\u003cTask\u003e findTasks(String keyword) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            if (task.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                matchingTasks.add(task);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return matchingTasks;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public void sortByAlphabeticalOrder() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        tasks.sort(Comparator.comparing(Task::toString));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 92
    }
  },
  {
    "path": "src/main/java/duke/main/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Constructor for Ui class to run UI events."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "      * @param tasks is the tasks that this current instance of duke.main.Duke has"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public Ui(TaskList tasks) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Provides the welcome message."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @return the welcome message string"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public static String getWelcomeMessage() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return \"Welcome to Kim Jong Un\u0027s Secret Chat. You can call me RocketMan and please let me know how to help!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Provides the goodbye message."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @return the goodbye message string"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public static String getGoodbyeMessage() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return \"GOODBYE!! MUAHAHHAHAHAHHAAHAHHAHAHA\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 33
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": " * duke.task.Deadline class which is a duke.task.Task but more specific"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private LocalDate by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        this.by \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 21
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": " * duke.task.Event class which is a duke.task.Task but more specific"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public String getEventAt() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 22
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": " * duke.task.Task class to store task information"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 27
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": " * duke.task.Todo class which is a duke.task.Task but more specific"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 17
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 19
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.main.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "\u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 20
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        assertEquals(2,2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 10
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public void eventTest() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        assertEquals(new Event(\"Pass everything\", \"Aug 6th 2-4pm\").toString(), \"[E][\\u2718] Pass everything (at: Aug 6th 2-4pm)\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 14
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public void todoTest() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        assertEquals(new Todo(\"pass this case\").toString(), \"[T][\\u2718] pass this case\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 14
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "event project meeting /at Mon 2-4pm"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 1
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke.main.Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "java -classpath ../bin duke.main.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 34
    }
  }
]
