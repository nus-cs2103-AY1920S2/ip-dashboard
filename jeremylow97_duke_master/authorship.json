[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 21,
      "-": 19
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "[T][?] this"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 1
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Constructor for Duke to start the initialise the necessary variables"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            tasks \u003d storage.load();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            ui \u003d new Ui(tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            ui \u003d new Ui(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Starts the whole program and get user input"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @throws IOException if I/O error happens"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            String output \u003d parser.parse(input, ui, tasks);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            storage.updateData(tasks);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        ui.printGoodbye();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public String getResponse(String input) throws IOException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        String output \u003d parser.parse(input, ui, tasks);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        storage.updateData(tasks);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        // this is like the system.in shit"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Main method for the class"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param args no commmand line arguments are used explicitly"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @throws IOException is thrown when there is I/O error"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": " * Task class to store task information"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": " */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "class Task {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": " * Deadline class which is a Task but more specific"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": " */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "class Deadline extends Task {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private LocalDate by;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        this.by \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": " * Todo class which is a Task but more specific"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": " */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "class Todo extends Task {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": " * Event class which is a Task but more specific"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": " */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "class Event extends Task {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 157,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 7
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 30
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                DialogBox.getDukeDialog(\"Hello and welcome to Duke, how can I help?\", dukeImage)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        );"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private void handleUserInput() throws IOException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        String response \u003d \"DUKE SAYS: \" + \"\\n\" + duke.getResponse(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        );"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 55
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import javax.print.DocFlavor;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Method that parses user input into instructions to be followed."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param input the user input"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param ui current instance of ui so that ui can interact with user"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param tasks the tasks available in current Duke program"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public String parse(String input, Ui ui, TaskList tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            return ui.printList();  // may need to update"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        String command \u003d \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            command \u003d getCommand(input);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        } catch(DukeException d) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            return d.toString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            case \"todo\": {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                String task \u003d input.substring(input.indexOf(\u0027 \u0027) + 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                Todo todo \u003d new Todo(task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                tasks.add(todo);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                return \"Got it, I\u0027ve added the following task:\\n\" + \"  \" + todo + \"\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                        + \"Now you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            case \"deadline\": {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                String by \u003d input.substring(input.indexOf(\u0027/\u0027) + 4);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                String task \u003d input.substring(input.indexOf(\u0027 \u0027) + 1, input.indexOf(\u0027/\u0027) - 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                Deadline deadline \u003d new Deadline(task, by);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                tasks.add(deadline);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                return \"Got it, I\u0027ve added the following task:\\n\" + \"  \" + deadline + \"\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                        + \"Now you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            case \"event\": {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                String at \u003d input.substring(input.indexOf(\u0027/\u0027) + 4);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                String task \u003d input.substring(input.indexOf(\u0027 \u0027) + 1, input.indexOf(\u0027/\u0027) - 1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                Event event \u003d new Event(task, at);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                tasks.add(event);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                return \"Got it, I\u0027ve added the following task:\\n\" + \"  \" + event + \"\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                        + \"Now you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            case \"delete\": {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                int toDelete \u003d Integer.parseInt(input.substring(input.indexOf(\u0027 \u0027) + 1, input.length())) - 1;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                Task task \u003d tasks.get(toDelete);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                tasks.remove(toDelete);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                return \"Noted, I\u0027ve removed the following task:\\n\" + \"  \" + task + \"\\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                        + \"Now you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            case \"done\": {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                int toEdit \u003d Integer.parseInt(input.substring(input.indexOf(\u0027 \u0027) + 1, input.length())) - 1;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                Task task \u003d tasks.get(toEdit);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            case \"find\": {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                String keyword \u003d input.substring(input.indexOf(\u0027 \u0027) + 1);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                ArrayList\u003cTask\u003e matchingTasks \u003d tasks.findTasks(keyword);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                output.append(\"Here are the matching tasks in your list: \");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                    String currTask \u003d i+1 + \".\" + matchingTasks.get(i);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                    output.append(System.lineSeparator());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                    output.append(currTask);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                return output.toString();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        // if it reaches here without returning means exception did not catch and its an invalid command"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        assert false;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return \"Invalid Command\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Gets the command out from user input"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param input is the user input"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @return a String that is only the command"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @throws DukeException is thrown when there is an invalid command by user"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public String getCommand(String input) throws DukeException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        if (!input.contains(\" \")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            // check if the command is correct"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            if (!input.equals(\"todo\") \u0026\u0026"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                    !input.equals(\"deadline\") \u0026\u0026"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                    !input.equals(\"event\") \u0026\u0026"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                    !input.equals(\"delete\") \u0026\u0026"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                    !input.equals(\"done\") \u0026\u0026"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                    !input.equals(\"find\")) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                throw new DukeException(\"OOPS! I\u0027m sorry but I dont\u0027t know what that means :(\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                // command is not valid"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                throw new DukeException(\"OOPS! The description of a \" + input + \" cannot be empty\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            if (!input.substring(0, input.indexOf(\u0027 \u0027)).equals(\"todo\") \u0026\u0026"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                    !input.substring(0, input.indexOf(\u0027 \u0027)).equals(\"deadline\") \u0026\u0026"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                    !input.substring(0, input.indexOf(\u0027 \u0027)).equals(\"event\") \u0026\u0026"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                    !input.substring(0, input.indexOf(\u0027 \u0027)).equals(\"delete\") \u0026\u0026"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                    !input.substring(0, input.indexOf(\u0027 \u0027)).equals(\"done\") \u0026\u0026"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                    !input.substring(0, input.indexOf(\u0027 \u0027)).equals(\"find\")) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                throw new DukeException(\"OOPS! I\u0027m sorry but I dont\u0027t know what that means :(\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                return input.substring(0, input.indexOf(\u0027 \u0027));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * A class for user-specific exceptions"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    class DukeException extends Exception {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        String errorMsg \u003d \"Error is not specified\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        DukeException(String s) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            errorMsg \u003d s;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            return errorMsg;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 138
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public static String dataPath \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "//    public static void createFile() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "//        File f \u003d new File(\"data/duke.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public TaskList load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        File f \u003d new File(dataPath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        while(s.hasNext()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            // convert string back to task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            String taskString \u003d s.nextLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            String type \u003d taskString.substring(0,3);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            boolean isDone \u003d !taskString.substring(3,6).equals(\"[✘]\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            String desc \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            String at \u003d \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            String by \u003d \"\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            if (type.equals(\"[T]\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                desc \u003d taskString.substring(taskString.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                Todo todo \u003d new Todo(desc);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                tasks.add(todo);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            } else if (type.equals(\"[D]\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                desc \u003d taskString.substring(taskString.indexOf(\" \") + 1, taskString.indexOf(\" (by\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                by \u003d taskString.substring(taskString.indexOf(\"(by:\") + 5, taskString.length() - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                LocalDate d \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                d.format(DateTimeFormatter.ofPattern(\"yyyy-mm-dd\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                Deadline deadline \u003d new Deadline(desc, d.toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                tasks.add(deadline);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            } else if (type.equals(\"[E]\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                desc \u003d taskString.substring(taskString.indexOf(\" \") + 1, taskString.indexOf(\" (at\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                at \u003d taskString.substring(taskString.indexOf(\"(at:\") + 5, taskString.length() - 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                Event event \u003d new Event(desc, at);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                tasks.add(event);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public void updateData(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        FileWriter fw \u003d new FileWriter(dataPath); // to always append to file"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            fw.write(tasks.get(i).toString() + \"\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 68
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Constructor for the class that stores all the tasks"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Check if there is any tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @return if there is any tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return tasks.isEmpty();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Check the size of this instance of TaskList"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @return the size of the TaskList"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Gets the indexed task from tasklist"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param i is the index that user want"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @return the indexed task"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return tasks.get(i);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Adds the task to the current instance of TaskList"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param task is the task to be added"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Removes the task to the current instance of TaskList"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * @param toDelete is the index of task to be removed"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public void remove(int toDelete) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        tasks.remove(toDelete);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public ArrayList\u003cTask\u003e findTasks(String keyword) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            if (task.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                matchingTasks.add(task);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return matchingTasks;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 76
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Constructor for Ui class to run UI events"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "      * @param tasks is the tasks that this current instance of Duke has"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public Ui(TaskList tasks) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Prints all the tasks in the current list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public String printList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        if (!tasks.isEmpty()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            output.append(\"Here are the tasks in your list\" + \"\\n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            return \"There are no tasks in your list\" + \"\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            String currTask \u003d i+1 + \".\" + tasks.get(i);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            output.append(System.lineSeparator());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            output.append(currTask);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     * Prints the basic goodbye message when user has no more input"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public void printGoodbye() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        System.out.println(\"GOODBYE!! MUAHAHHAHAHAHHAAHAHHAHAHA\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 45
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "\u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 20
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        assertEquals(2,2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 10
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public void eventTest() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        assertEquals(new Event(\"Pass everything\", \"Aug 6th 2-4pm\").toString(), \"[E][\\u2718] Pass everything (at: Aug 6th 2-4pm)\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 15
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    public void todoTest() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "        assertEquals(new Todo(\"pass this case\").toString(), \"[T][\\u2718] pass this case\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 15
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "event project meeting /at Mon 2-4pm"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 1
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jeremylow97"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "jeremylow97": 34
    }
  }
]
