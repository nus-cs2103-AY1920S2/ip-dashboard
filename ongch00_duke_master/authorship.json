[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ongch00"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ongch00"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ongch00"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ongch00"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ongch00"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ongch00"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ongch00"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ongch00"
        },
        "content": "test {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 21,
      "ongch00": 25
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ongch00"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.command.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.task.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ongch00"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * Main class for duke."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * Hold Storage, TaskList and Ui object for application"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * Runs the application until the exit command is called."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ongch00"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /** Storage object to deal with the save file. */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /** TaskList object to store the task list. */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /** Welcome message of the application. */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    private String welcomeMessage \u003d \"Hello! My name is Megumin, user of the finest magic crimson demons possess.\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            + \"What can I explo- I mean do for you?\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Constructs Duke with the default save directory."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        String workingDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        Path savePath \u003d Paths.get(workingDir, \"data\", \"duke.txt\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        storage \u003d new Storage(savePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        //load the tasks from save file"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            tasks \u003d new TaskList(storage.loadTasks());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            System.err.println(e);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Gets the program\u0027s response based on the user\u0027s input."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param input The user\u0027s input."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @return The program\u0027s response."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            //parse command"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            Command command \u003d Parser.parseCommand(input);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            //execute command"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            return command.execute(tasks, storage);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Gets the welcome message of the program."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @return The welcome message of the program."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public String getWelcomeMessage() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        return welcomeMessage;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "ongch00": 67
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ongch00"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ongch00"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * Launcher class for duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ongch00"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ongch00"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Main method that runs the program."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param args takes in a string array of argument for the program."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ongch00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ongch00": 17
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ongch00"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ongch00"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ongch00"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ongch00"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Initializes and starts the application."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param stage Stage object for the application."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            scene.getStylesheets().add(\"view/ScrollPane.css\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            stage.getIcons().add(new Image(\"/images/icon.jpg\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            stage.setTitle(\"Megumin\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            stage.setResizable(false);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ongch00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ongch00": 37
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ongch00"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.task.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ongch00"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * Represents a Command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * This is an abstract class meant as a template for the commands."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ongch00"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ongch00"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Abstract method to execute the command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Must be overridden."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param tasks TaskList object that contains the tasks of the application."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param storage storage object for the retrieval/saving of tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @return The program\u0027s output."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public abstract String execute(TaskList tasks, Storage storage);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ongch00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ongch00": 20
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ongch00"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.task.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ongch00"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * Represents a DeadlineCommand."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * Used to execute the deadline command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ongch00"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ongch00"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /** String array for the command arguments. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    private String[] args \u003d new String[0];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Constructs a new DeadlineCommand."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param args arguments for the deadline command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public DeadlineCommand(String[] args) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        this.args \u003d args;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Executes the deadline command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param tasks TaskList object that contains the tasks of the application."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param storage storage object for the retrieval/saving of tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @return The program\u0027s output."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            //check if the argument length required is correct"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            if (args.length \u003c 2) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                throw new InvalidCommandException(\"HEY!!!\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                        + \" The date of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            //add a new deadline task to the list"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            Task newDeadlineTask \u003d new Deadline(args[0], args[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            tasks.addTask(newDeadlineTask);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            //update save file"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            storage.saveTasks(tasks.getList());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            //print success message"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            return String.format(\"Got it. I\u0027ve added this task:\\n  %s\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                    + \"Now you have %d tasks in the list.\\n\", newDeadlineTask,tasks.getSize());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            return \"Sorry, I could not write to the magic saving item (Error when writing to save file).\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ongch00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ongch00": 60
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ongch00"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.task.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ongch00"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * Represents a DeleteCommand."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * Used to execute the delete command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ongch00"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ongch00"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /** Index of the task to be deleted. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    private int index \u003d 0;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Constructs a new DeleteCommand."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param index index of the task in the task list to delete."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Executes the delete command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param tasks TaskList object that contains the tasks of the application."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param storage storage object for the retrieval/saving of tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @return The program\u0027s output."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            //delete the desired task"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            Task taskToDelete \u003d tasks.deleteTask(index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            //update save file"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            storage.saveTasks(tasks.getList());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            //print success message"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            return String.format(\"Here I go! My ultimate destructive magic! EXPLOSION!\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                    + \"I have successfully eradicated this task:\\n  %s\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                    + \"Now you have %d tasks in the list.\\n\", taskToDelete, tasks.getSize());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            return \"Sorry, I could not write to the magic saving item (Error when writing to save file).\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ongch00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ongch00": 53
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ongch00"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.task.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ongch00"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * Represents a DoneCommand."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * Used to execute the done command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ongch00"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ongch00"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /** Index of the task to be set as done. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    private int index \u003d 0;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Constructs a new DoneCommand."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param index index of the task to set as done."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Executes the done command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param tasks TaskList object that contains the tasks of the application."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param storage storage object for the retrieval/saving of tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @return The program\u0027s output."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            //set the desired task as done"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            tasks.setAsDone(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            //update save file"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            storage.saveTasks(tasks.getList());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            //print success message"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            return String.format(\"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                    + \"  %s\\n\" + \"Hope we get loads of Eris for this!\\n\", tasks.getTask(index));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            return \"Sorry, I could not write to the magic saving item (Error when writing to save file).\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ongch00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ongch00": 52
    }
  },
  {
    "path": "src/main/java/duke/command/DukeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ongch00"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ongch00"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * Enum for all the commands duke has."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ongch00"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ongch00"
        },
        "content": "public enum DukeCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    BYE, LIST, DONE, DELETE, TODO, DEADLINE, EVENT, FIND;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Translate a string to the respective Enum value."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param command the command to be translated."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @return the Enum corresponding to the command if it is valid."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @throws InvalidCommandException if command given is not a valid command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public static DukeCommand getCommand(String command) throws InvalidCommandException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            return DukeCommand.BYE;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            return DukeCommand.LIST;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            return DukeCommand.DONE;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            return DukeCommand.DELETE;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        } else if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            return DukeCommand.TODO;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            return DukeCommand.DEADLINE;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            return DukeCommand.EVENT;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        } else if (command.equals(\"find\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            return DukeCommand.FIND;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            throw new InvalidCommandException(\"HEY!!! I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ongch00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ongch00": 39
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ongch00"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.task.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ongch00"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * Represents a EventCommand."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * Used to execute the event command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ongch00"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ongch00"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /** String array for the command arguments. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    private String[] args \u003d new String[0];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Constructs a new EventCommand."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param args arguments for the event command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public EventCommand(String[] args) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        this.args \u003d args;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Executes the event command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param tasks TaskList object that contains the tasks of the application."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param storage storage object for the retrieval/saving of tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @return The program\u0027s output."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            //check if the argument length required is correct"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            if (args.length \u003c 2) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                throw new InvalidCommandException(\"HEY!!! The date of an \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                        + \"event cannot be empty.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            //add a new event task to the list"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            Task newEventTask \u003d new Event(args[0], args[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            tasks.addTask(newEventTask);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            //update save file"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            storage.saveTasks(tasks.getList());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            //print success message"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            return String.format(\"Got it. I\u0027ve added this task:\\n  %s\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                    + \"Now you have %d tasks in the list.\\n\", newEventTask,tasks.getSize());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            return \"Sorry, I could not write to the magic saving item (Error when writing to save file).\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ongch00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ongch00": 60
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ongch00"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.task.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ongch00"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * Represents a ExitCommand."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * Used to execute the exit command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ongch00"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ongch00"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Executes the exit command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param tasks TaskList object that contains the tasks of the application."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param storage storage object for the retrieval/saving of tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @return The program\u0027s output."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        return \"Wait! Don\u0027t leave me! Please bring me along!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ongch00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ongch00": 22
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ongch00"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.task.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ongch00"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * Represents a FindCommand."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * Used to execute the FindCommand."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ongch00"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ongch00"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /** String argument for the command. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    private String arg \u003d \"\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Constructs a new FindCommand."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param arg argument for the find command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public FindCommand(String arg) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        this.arg \u003d arg;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Executes the find command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param tasks TaskList object that contains the tasks of the application."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param storage storage object for the retrieval/saving of tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @return The program\u0027s output."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        String relevantTasks \u003d tasks.findTasksBySearchPhrase(arg);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        if (relevantTasks.equals(\"\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            return \"There are no matching tasks in your list.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            return \"Here are the matching tasks in your list:\\n\" + relevantTasks;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ongch00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ongch00": 40
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ongch00"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.task.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ongch00"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * Represents a ListCommand."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * Used to execute the list command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ongch00"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ongch00"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Executes the list command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param tasks TaskList object that contains the tasks of the application."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param storage storage object for the retrieval/saving of tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @return The program\u0027s output."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        if (tasks.getSize() \u003e 0) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            return \"Here are the tasks in your list:\\n\" + tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            return \"I may or may not have exploded all your tasks in your list as it is empty.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ongch00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ongch00": 26
    }
  },
  {
    "path": "src/main/java/duke/command/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ongch00"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ongch00"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * Represents a Parser."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * Used to to parse user input into commands."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ongch00"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ongch00"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Parses the user input into the respective command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param input the command input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @return The respective command if given a valid command input."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @throws InvalidCommandException If command input is invalid."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public static Command parseCommand(String input) throws InvalidCommandException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        //split the command line"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        String[] commandLine \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        //determine which type of command and return the respective command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        DukeCommand command \u003d DukeCommand.getCommand(commandLine[0]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        case BYE:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            if (commandLine.length \u003c 2) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                throw new InvalidCommandException(\"HEY!!! I need to know what task you want mark as done!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                return new DoneCommand(Integer.parseInt(commandLine[1]));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            if (commandLine.length \u003c 2) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                throw new InvalidCommandException(\"HEY!!! I need to know what task to target my explosion.\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                        + \" Perhaps I will just target Beldia\u0027s castle...\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                return new DeleteCommand(Integer.parseInt(commandLine[1]));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            if (commandLine.length \u003c 2) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                throw new InvalidCommandException(\"HEY!!! The description of a todo cannot be empty.\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                        + \" Maybe I will name it ChunChunMaru for you! Just kidding, please don\u0027t hit me!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                return new TodoCommand(commandLine[1]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            if (commandLine.length \u003c 2) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                throw new InvalidCommandException(\"HEY!!! The description of a deadline cannot be empty.\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                        + \" Maybe I will name it Chomusuke for you! Just kidding, please don\u0027t hit me!\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                String[] deadlineDescriptionDate \u003d commandLine[1].split(\" /by \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                return new DeadlineCommand(deadlineDescriptionDate);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            if (commandLine.length \u003c 2) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                throw new InvalidCommandException(\"HEY!!! The description of an event cannot be empty.\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                        + \" Maybe I will name it Hyoizaburoo for you! Just kidding, please don\u0027t hit me!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                String[] eventDescriptionDate \u003d commandLine[1].split(\" /at \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                return new EventCommand(eventDescriptionDate);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            if (commandLine.length \u003c 2) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                throw new InvalidCommandException(\"HEY!!! Please state what you want to find.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                return new FindCommand(commandLine[1]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            throw new InvalidCommandException(\"HEY!!! I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ongch00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ongch00": 74
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ongch00"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.task.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ongch00"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * Represents a EventCommand."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * Used to execute the event command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ongch00"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ongch00"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /** String argument for the command. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    private String arg \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Constructs a new TodoCommand."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param arg argument for the todo command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public TodoCommand(String arg) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        this.arg \u003d arg;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Executes the todo command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param tasks TaskList object that contains the tasks of the application."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param storage storage object for the retrieval/saving of tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @return The program\u0027s output."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            //add a new todo task to the list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            Task newTodoTask \u003d new Todo(arg);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            tasks.addTask(newTodoTask);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            //update save file"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            storage.saveTasks(tasks.getList());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            //print success message"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            return String.format(\"Got it. I\u0027ve added this task:\\n  %s\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                    + \"Now you have %d tasks in the list.\\n\", newTodoTask,tasks.getSize());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            return \"Sorry, I could not write to the magic saving item (Error when writing to save file).\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ongch00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ongch00": 51
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ongch00"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ongch00"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * Exception for the duke application."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ongch00"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ongch00"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Constructs a new DukeException."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param errorMessage exception message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ongch00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ongch00": 15
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ongch00"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ongch00"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * Exception for invalid commands."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ongch00"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ongch00"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Constructs a new InvalidCommandException."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param errorMessage exception message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public InvalidCommandException(String errorMessage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ongch00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ongch00": 15
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ongch00"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ongch00"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * Represents a Deadline task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ongch00"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ongch00"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /** Date the deadline task is due. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    private LocalDate byDate \u003d null;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /** Time of the day the deadline task is due. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    private LocalTime byTime \u003d null;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Constructs a new Deadline task with description and date."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Task is set to not done by default."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param byDateTime date and time the deadline task is due."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public Deadline(String description, String byDateTime) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        super(description, false);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        //translate the date and time to the correct format"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        String[] rawDateTime \u003d byDateTime.split(\" \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        String[] date \u003d rawDateTime[0].split(\"/\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        if (date[0].length() \u003c 2) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            date[0] \u003d \"0\" + date[0];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        if (date[1].length() \u003c 2) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            date[1] \u003d \"0\" + date[1];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        String formattedDate \u003d date[2] + \"-\" + date[1] + \"-\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                + date[0];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        String formattedTime \u003d \"\" + rawDateTime[1].charAt(0)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                + rawDateTime[1].charAt(1) + \":\" + rawDateTime[1].charAt(2)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                + rawDateTime[1].charAt(3) + \":00\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        //parse the reformatted date and time"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        this.byDate \u003d LocalDate.parse(formattedDate);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        this.byTime \u003d LocalTime.parse(formattedTime);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Constructs a new Deadline task with description, date and done status."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param isDone done status of the task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param byDateTime date and time the deadline task is due."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public Deadline(String description, boolean isDone, String byDateTime) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        //translate the date and time to the correct format"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        String[] rawDateTime \u003d byDateTime.split(\" \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        String[] date \u003d rawDateTime[0].split(\"/\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        if (date[0].length() \u003c 2) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            date[0] \u003d \"0\" + date[0];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        if (date[1].length() \u003c 2) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            date[1] \u003d \"0\" + date[1];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        String formattedDate \u003d date[2] + \"-\" + date[1] + \"-\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                + date[0];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        String formattedTime \u003d \"\" + rawDateTime[1].charAt(0)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                + rawDateTime[1].charAt(1) + \":\" + rawDateTime[1].charAt(2)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                + rawDateTime[1].charAt(3) + \":00\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        //parse the reformatted date and time"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        this.byDate \u003d LocalDate.parse(formattedDate);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        this.byTime \u003d LocalTime.parse(formattedTime);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Gets the string representation of the deadline task used for saving."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @return the string representation of the deadline task to be used for saving."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public String getSaveRepresentation() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        return \"D|||\" + getIsDone() + \"|||\" + getDescription() + \"|||\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                + byDate.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy \"))"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                + byTime.format(DateTimeFormatter.ofPattern(\"kmm\")) + \"\\n\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Gets the string representation of the deadline task."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @return the string representation of the deadline task."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        return String.format(\"[%s][%s] %s (by: %s, %s)\", \"D\", (getIsDone() ? \"Y\" : \"N\"), getDescription(),"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                byDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                byTime.format(DateTimeFormatter.ofPattern(\"h:mma\")));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ongch00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ongch00": 99
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ongch00"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ongch00"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * Represents an Event task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ongch00"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ongch00"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /** Date that the event is happening. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    private LocalDate atDate \u003d null;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /** Time of the day the event is happening. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    private LocalTime atTime \u003d null;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Constructs a new Event task with description and date."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Task is set to not done by default."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param atDateTime date and time the event task is happening."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public Event(String description, String atDateTime) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        super(description, false);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        //translate the date and time to the correct format"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        String[] rawDateTime \u003d atDateTime.split(\" \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        String[] date \u003d rawDateTime[0].split(\"/\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        if (date[0].length() \u003c 2) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            date[0] \u003d \"0\" + date[0];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        if (date[1].length() \u003c 2) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            date[1] \u003d \"0\" + date[1];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        String formattedDate \u003d date[2] + \"-\" + date[1] + \"-\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                + date[0];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        String formattedTime \u003d \"\" + rawDateTime[1].charAt(0)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                + rawDateTime[1].charAt(1) + \":\" + rawDateTime[1].charAt(2)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                + rawDateTime[1].charAt(3) + \":00\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        //parse the reformatted date and time"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        this.atDate \u003d LocalDate.parse(formattedDate);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        this.atTime \u003d LocalTime.parse(formattedTime);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Constructs a new Event task with description, date and done status."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param isDone done status of the task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param atDateTime date and time the event task is happening."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public Event(String description, boolean isDone, String atDateTime) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        //translate the date and time to the correct format"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        String[] rawDateTime \u003d atDateTime.split(\" \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        String[] date \u003d rawDateTime[0].split(\"/\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        if (date[0].length() \u003c 2) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            date[0] \u003d \"0\" + date[0];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        if (date[1].length() \u003c 2) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            date[1] \u003d \"0\" + date[1];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        String formattedDate \u003d date[2] + \"-\" + date[1] + \"-\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                + date[0];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        String formattedTime \u003d \"\" + rawDateTime[1].charAt(0)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                + rawDateTime[1].charAt(1) + \":\" + rawDateTime[1].charAt(2)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                + rawDateTime[1].charAt(3) + \":00\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        //parse the reformatted date and time"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        this.atDate \u003d LocalDate.parse(formattedDate);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        this.atTime \u003d LocalTime.parse(formattedTime);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Gets the string representation of the event task used for saving."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @return the string representation of the event task to be used for saving."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public String getSaveRepresentation() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        return \"E|||\" + getIsDone() + \"|||\" + getDescription() + \"|||\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                + atDate.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy \"))"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                + atTime.format(DateTimeFormatter.ofPattern(\"kmm\")) + \"\\n\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Gets the string representation of the event task."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @return the string representation of the event task."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        return String.format(\"[%s][%s] %s (at: %s, %s)\", \"E\", (getIsDone() ? \"Y\" : \"N\"), getDescription(),"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                atDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                atTime.format(DateTimeFormatter.ofPattern(\"h:mma\")));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ongch00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ongch00": 99
    }
  },
  {
    "path": "src/main/java/duke/task/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ongch00"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ongch00"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * Represents a Storage."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * Handles the disk storage of the application."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ongch00"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ongch00"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /** The working directory of the application. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    private String workingDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /** The path of the save file. */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    private Path savePath \u003d Paths.get(workingDir, \"data\", \"duke.txt\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Constructs a new Storage object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param savePath the path where the save file will be."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public Storage(Path savePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        this.savePath \u003d savePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Saves the list of tasks to the save file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param tasks the list of tasks to be saved."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @throws IOException if there is issues accessing the file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public void saveTasks(List\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        String saveString \u003d \"\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            saveString +\u003d task.getSaveRepresentation();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        Files.write(savePath, saveString.getBytes());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Loads the list of task from the save file."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @return list of task from save file."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @throws IOException if there is issues accessing the file."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public List\u003cTask\u003e loadTasks() throws IOException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        //new task array list to store the loaded tasks"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        //get the tasks from the save file and add to list"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        Files.createDirectories(savePath.getParent());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        if (Files.exists(savePath)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            List\u003cString\u003e savedList \u003d Files.readAllLines(savePath);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            for (String task : savedList) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                String[] taskBuilder \u003d task.split(\"\\\\|\\\\|\\\\|\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                String type \u003d taskBuilder[0];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                boolean isDone \u003d Boolean.parseBoolean(taskBuilder[1]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                    tasks.add(new Todo(taskBuilder[2], isDone));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                } else if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                    tasks.add(new Deadline(taskBuilder[2], isDone, taskBuilder[3]));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                } else if (type.equals(\"E\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                    tasks.add(new Event(taskBuilder[2], isDone, taskBuilder[3]));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            Files.createFile(savePath);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        //return the task list"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ongch00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ongch00": 78
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ongch00"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ongch00"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * Represents a Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ongch00"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ongch00"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /** The description of the task. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    private String description \u003d \"\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /** The done status of the task. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    private boolean isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Construct a new Task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param isDone is the task done."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Gets the description of the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @return the description of the task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Gets whether the task is done."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @return true if the tasks is done, false otherwise."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Gets the string representation of the task used for saving."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @return a string representation of the task to be used for saving."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public String getSaveRepresentation() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        return isDone + description;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Gets the string representation of the task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @return the string representation of the task."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        return String.format(\"[%s] %s\", (isDone ? \"Y\" : \"N\"), description);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ongch00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ongch00": 66
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ongch00"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ongch00"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * Class for the task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * Contains operations for the task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ongch00"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ongch00"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /** List of tasks. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    private List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Constructs a new task list given a list of tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param tasks a list of tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param task the task to be added to the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Sets a task in the list to be done based on the index."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param index the index of the task based on the list\u0027s string representation to be set as done."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @throws InvalidCommandException if the index given is out of bounds"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public void setAsDone(int index) throws InvalidCommandException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        if (index \u003e tasks.size() || index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            throw new InvalidCommandException(\"HEY!!! I cannot set a \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                    + \"non-existent task to be done.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        //mark selected task to be done"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        tasks.get(index - 1).markDone();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Deletes a task from the list based on the index and returns the task deleted."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param index the index of the task based on the list\u0027s string representation to be deleted."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @return the deleted task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @throws InvalidCommandException if the index given is out of bounds."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public Task deleteTask(int index) throws InvalidCommandException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        //check if index is valid"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        if (index \u003e tasks.size() || index \u003c\u003d 0) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            throw new InvalidCommandException(\"HEY!!! I cannot destroy a \""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                    + \"non-existent task.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        //delete the task from the list and return it"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        Task taskToDelete \u003d tasks.remove(index - 1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        return taskToDelete;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Gets the task from the list based on the index."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param index the index of the task based on the list\u0027s string representation to be retrieved."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @return the task of the respective index."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        return tasks.get(index - 1);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Finds the list of tasks that contains the search phrase."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param searchPhrase the desired search phrase to search the list."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @return the string representation of the filtered list."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public String findTasksBySearchPhrase(String searchPhrase) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        String relevantTasksRepresentation \u003d \"\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            if (tasks.get(i).getDescription().contains(searchPhrase)) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                relevantTasksRepresentation +\u003d String.format(\"%d. %s\\n\", (i + 1), tasks.get(i));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        return relevantTasksRepresentation;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Gets the list of all the tasks."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @return the list of tasks."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Gets the number of task in the list."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @return the number of task currently in the list."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Gets the string representation of the task list."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @return the string representation of the task list."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        String listRepresentation \u003d \"\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            listRepresentation +\u003d String.format(\"%d. %s\\n\", (i + 1), tasks.get(i));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        return listRepresentation;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ongch00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ongch00": 126
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ongch00"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ongch00"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * Represents an Todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ongch00"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ongch00"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Constructs a new Todo task with description."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        super(description, false);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Constructs a new Todo task with description and done status."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param isDone done status of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Gets the string representation of the todo task used for saving."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @return the string representation of the event task to be used for saving."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public String getSaveRepresentation() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        return \"T|||\" + getIsDone() + \"|||\" + getDescription() + \"\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Gets the string representation of the todo task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @return the string representation of the todo task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        return String.format(\"[%s][%s] %s\", \"T\", (getIsDone() ? \"Y\" : \"N\"), getDescription());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ongch00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ongch00": 45
    }
  },
  {
    "path": "src/main/java/duke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ongch00"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ongch00"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * Custom control for dialog boxes using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ongch00"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ongch00"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /** Label object of the dialog box. */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /** ImageView object for duke or user\u0027s image to be displayed. */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Constructs a dialog box based on the DialogBox FXML with text and image."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param text Text for the dialog."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param img Image representing who produced the dialog."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Get the dialog formatted for the user input."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param text Text entered by user."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param img Image of user."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @return The DialogBox formatted for the user input."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Get the dialog formatted for the program\u0027s reply."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param text The program\u0027s reply."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @param img Image of user."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * @return The DialogBox formatted for the program\u0027s reply."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ongch00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ongch00": 83
    }
  },
  {
    "path": "src/main/java/duke/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ongch00"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ongch00"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ongch00"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ongch00"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ongch00"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /** ScrollPane object of the UI.*/"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /** VBox object of the UI.*/"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /** TextField object of the UI.*/"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /** Main program logic. */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /** Image for the user. */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /** Image for the program. */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Initialises the main application window and prints welcome message."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                DialogBox.getDukeDialog(duke.getWelcomeMessage(), dukeImage));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * the program\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        //get duke\u0027s response based on user input."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        //append dialog boxes to dialog container and clear user input."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        );"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        //exit the program if required."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            new Thread(() -\u003e {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                    Thread.sleep(1500);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                } catch (InterruptedException ex) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                    Thread.currentThread().interrupt();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                Platform.exit();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            }).start();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ongch00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ongch00": 72
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ongch00"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ongch00"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ongch00"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ongch00"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ongch00"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ongch00"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-background-color: lightsteelblue; -fx-padding: 6px; -fx-background-radius: 10;\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ongch00"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "ongch00": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ongch00"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ongch00"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ongch00"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ongch00"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ongch00"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ongch00"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ongch00"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ongch00"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"Infinity\" minHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ongch00"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ongch00"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "ongch00": 19
    }
  },
  {
    "path": "src/test/java/duke/command/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ongch00"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ongch00"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public void parseCommand_invalidCommand_throwsInvalidCommandException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        assertThrows(InvalidCommandException.class, () -\u003e Parser.parseCommand(\"not a command\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        assertThrows(InvalidCommandException.class, () -\u003e Parser.parseCommand(\"by e\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        assertThrows(InvalidCommandException.class, () -\u003e Parser.parseCommand(\"LiSt\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ongch00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ongch00": 15
    }
  },
  {
    "path": "src/test/java/duke/task/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ongch00"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ongch00"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public void setAsDone_indexNotInList_throwsInvalidCommandException() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        tasks.addTask(new Todo(\"dummy task\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        assertThrows(InvalidCommandException.class, () -\u003e tasks.setAsDone(0));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        assertThrows(InvalidCommandException.class, () -\u003e tasks.setAsDone(2));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        assertThrows(InvalidCommandException.class, () -\u003e tasks.setAsDone(10));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public void getTask_validIndex_returnsTask() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        Todo task1 \u003d new Todo(\"dummy task1\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        Todo task2 \u003d new Todo(\"dummy task2\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        Todo task3 \u003d new Todo(\"dummy task3\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        tasks.addTask(task1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        tasks.addTask(task2);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        tasks.addTask(task3);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        assertEquals(task1, tasks.getTask(1));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        assertEquals(task2, tasks.getTask(2));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        assertEquals(task3, tasks.getTask(3));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public void getTask_invalidIndex_throwsIndexOutOfBoundsException() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        Todo task1 \u003d new Todo(\"dummy task1\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        Todo task2 \u003d new Todo(\"dummy task2\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        Todo task3 \u003d new Todo(\"dummy task3\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        tasks.addTask(task1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        tasks.addTask(task2);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        tasks.addTask(task3);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        assertThrows(IndexOutOfBoundsException.class, () -\u003e tasks.getTask(0));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        assertThrows(IndexOutOfBoundsException.class, () -\u003e tasks.getTask(4));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        assertThrows(IndexOutOfBoundsException.class, () -\u003e tasks.getTask(10));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ongch00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ongch00": 53
    }
  },
  {
    "path": "src/test/java/duke/task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ongch00"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ongch00"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ongch00"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public void getSaveRepresentation_validDescription_returnsSaveRepresentation() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        Todo todoNotDoneTask \u003d new Todo(\"I am not done\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        Todo todoDoneTask \u003d new Todo(\"I am done\", true);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        assertEquals(\"T|||false|||I am not done\\n\", todoNotDoneTask.getSaveRepresentation());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        assertEquals(\"T|||true|||I am done\\n\", todoDoneTask.getSaveRepresentation());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public void toString_validDescription_returnsStringRepresentation() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        Todo todoNotDoneTask \u003d new Todo(\"I am not done\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        Todo todoDoneTask \u003d new Todo(\"I am done\", true);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        assertEquals(\"[T][N] I am not done\", todoNotDoneTask.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        assertEquals(\"[T][Y] I am done\", todoDoneTask.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public void getIsDone_taskDone_returnsIsDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        Todo task1 \u003d new Todo(\"I am done\", true);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        Todo task2 \u003d new Todo(\"I am done\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        task2.markDone();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        assertEquals(true, task1.getIsDone());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        assertEquals(true, task2.getIsDone());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    public void getIsDone_taskNotDone_returnsIsDone() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        Todo task1 \u003d new Todo(\"I am not done\", false);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        Todo task2 \u003d new Todo(\"I am not done\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        assertEquals(false, task1.getIsDone());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ongch00"
        },
        "content": "        assertEquals(false, task2.getIsDone());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ongch00"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ongch00": 44
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ongch00"
        },
        "content": "       [T][?] read book"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ongch00"
        },
        "content": "       [D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ongch00"
        },
        "content": "       [E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     1. [T][?] read book"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     2. [D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     3. [E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     [D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ongch00"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "ongch00": 35
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ongch00"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ongch00"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ongch00"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ongch00"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ongch00"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ongch00"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ongch00"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ongch00": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ongch00"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ongch00"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ongch00"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ongch00"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ongch00"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ongch00"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ongch00"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ongch00"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ongch00"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ongch00"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ongch00"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ongch00"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ongch00"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ongch00"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ongch00"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ongch00"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ongch00"
        },
        "content": "PAUSE"
      }
    ],
    "authorContributionMap": {
      "ongch00": 23
    }
  }
]
