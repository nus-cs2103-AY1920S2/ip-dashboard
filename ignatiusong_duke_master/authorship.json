[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027   "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "//group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "checkstyle{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    archiveVersion \u003d \"0.1.4\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "test {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "ignatiusong": 27
    }
  },
  {
    "path": "src/main/java/Action.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "public interface Action {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    String doSomething(TaskList tasks);"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    boolean hasNextAction();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ignatiusong": 5
    }
  },
  {
    "path": "src/main/java/ActionHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "public class ActionHandler {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    enum allowedTask {todo, event, deadline}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * Returns an action determined by the String command. By default, if the command is not any of the keywords"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * returns a newTaskAction"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * @param input specifies the type of action to return"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * @return Action"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public Action decideAction(String input) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        Scanner sc \u003d new Scanner(input);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            command \u003d sc.next();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            return new EmptyAction();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        Action myAction \u003d new EmptyAction();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            myAction \u003d new byeAction();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            myAction \u003d new listAction();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            int index \u003d -1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "                index \u003d sc.nextInt();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            myAction \u003d new doneAction(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            int indix \u003d -1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "                indix \u003d sc.nextInt();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            myAction \u003d new deleteAction(indix);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            String keyword \u003d \"\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "                keyword \u003d sc.next();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "                System.out.println(\"Ketword cannot be empty\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            myAction \u003d new findAction(keyword);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        case \"tag\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            String tagDescription;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "                tagDescription \u003d sc.next();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            } catch (NoSuchElementException e){"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "                System.out.println(\"Tag description cannot be empty\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            int tagIndex \u003d sc.nextInt();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            myAction \u003d new tagAction(tagIndex, tagDescription);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        for (allowedTask a : allowedTask.values()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            if (a.toString().equals(command)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "                return new newTaskAction(input);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return myAction;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ignatiusong": 79
    }
  },
  {
    "path": "src/main/java/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    private String taskDescription;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    private Optional\u003cDate\u003e deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    private String inputDeadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * Returns a task of type deadline which is a task with a due date"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * @param taskDescription the name of task or some description of the task to be done"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * @param deadline        should be of the form \"by yyyy-MM-dd\" else it will throw IvalidInputException"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * @throws InvalidInputException"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public DeadlineTask(String taskDescription, String deadline) throws InvalidInputException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        //breaks down the taskDescription and adds all words individually to the Hashset"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        Scanner taskDesc \u003d new Scanner(taskDescription);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        while (taskDesc.hasNext()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            String keyword \u003d taskDesc.next();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            wordsInDescription.add(keyword);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        //checks if deadline is of the form \"by yyyy-MM-dd\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        Scanner sc \u003d new Scanner(deadline);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        if (!sc.next().equals(\"by\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            throw new InvalidInputException(\"The deadline should start with [by]\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        this.inputDeadline \u003d sc.nextLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        this.deadline \u003d TimeHandler.dateFromString(this.inputDeadline);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        if (this.deadline.isEmpty()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            throw new InvalidInputException(\"Wrong date format. Should be yyyy-MM-dd\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * Used for saving the Task into a text file"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * @return a String of the form \"deadline NAME / by yyyy-MM-dd / NUMBER indicating whether the task is done"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public String formatToStore() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        String format \u003d \"deadline \" + taskDescription + \" / by \" + inputDeadline.strip() + \" /\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            format +\u003d \" 1\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            format +\u003d \" 0\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return format;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        String taskWords \u003d \"[D]\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            taskWords +\u003d tick;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            taskWords +\u003d cross;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        taskWords +\u003d \" \" + taskDescription + \" ( by: \" + deadline.get() + \")\\n\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        taskWords +\u003d \"TAGS: \";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        for(Tag t : this.getTags()){"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            taskWords +\u003d t + \", \";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return taskWords;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ignatiusong": 70
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ignatiusong": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    private boolean isExiting \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        String output \u003d parser.parse(input);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        this.isExiting \u003d parser.getIsExiting();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        assert(!output.isEmpty());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public boolean getIsExiting() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return this.isExiting;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ignatiusong": 30,
      "-": 3
    }
  },
  {
    "path": "src/main/java/EmptyAction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "public class EmptyAction implements Action {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public String doSomething(TaskList tasks) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return \"I don\u0027t know what to do!\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public boolean hasNextAction() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ignatiusong": 10
    }
  },
  {
    "path": "src/main/java/EmptyTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "public class EmptyTaskException extends InvalidInputException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return \"Sorry the task requires some description\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ignatiusong": 6
    }
  },
  {
    "path": "src/main/java/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    private String taskDescription;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    private Optional\u003cDate\u003e timing;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    private String inputTiming;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * Returns an event task that is a task with a specified timing"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * @param taskDescription the name of the task or some basic description"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * @param timing          the time when a task should be done at. Should be of the form \"at yyyy-MM-dd\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * @throws InvalidInputException"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public EventTask(String taskDescription, String timing) throws InvalidInputException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        //breaks down the taskDescription and adds all words individually to the Hashset"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        Scanner taskDesc \u003d new Scanner(taskDescription);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        while (taskDesc.hasNext()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            String keyword \u003d taskDesc.next();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            wordsInDescription.add(keyword);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        Scanner sc \u003d new Scanner(timing);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        assert(!timing.isEmpty());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        if (!sc.next().equals(\"at\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            throw new InvalidInputException(\"The timing should start with keyword [at]\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        this.inputTiming \u003d sc.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        this.timing \u003d TimeHandler.dateFromString(this.inputTiming);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        if (this.timing.isEmpty()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            throw new InvalidInputException(\"Wrong date format\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * Returns a string to be stored in a text file to be loaded later on"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * @return a String in the form \"event TASKDESCRIPTIN / at yyyy-MM-dd / NUMBERtoINDICATEDONE"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public String formatToStore() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        String format \u003d \"event \" + taskDescription + \" / at \" + this.inputTiming.strip() + \" /\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            format +\u003d \" 1\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            format +\u003d \" 0\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return format;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        String taskWords \u003d \"[E]\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            taskWords +\u003d tick;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            taskWords +\u003d cross;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        taskWords +\u003d \" \" + taskDescription + \" ( at: \" + timing.get() + \")\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        taskWords +\u003d \"\\nTAGS: \";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        for(Tag t : this.getTags()){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            taskWords +\u003d t + \", \";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return taskWords;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ignatiusong": 70
    }
  },
  {
    "path": "src/main/java/InvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "public class InvalidIndexException extends InvalidInputException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ignatiusong": 2
    }
  },
  {
    "path": "src/main/java/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "public class InvalidInputException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public InvalidInputException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public InvalidInputException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ignatiusong": 9
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ignatiusong": 7
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ignatiusong": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        );"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        if(this.duke.getIsExiting()){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ignatiusong": 53
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    private TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    private ActionHandler actions \u003d new ActionHandler();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    private boolean isExiting \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * As long as the user hasn\u0027t said bye. The parser will continue to read inputs from the user and"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * attempt to decipher the commands of the user. After the user is done, parser will save the TaskList"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * into a txt file"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public String parse(String input) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        Action currentAction \u003d actions.decideAction(input);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        String myResponse \u003d currentAction.doSomething(tasks);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        this.isExiting \u003d !currentAction.hasNextAction();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        tasks.saveToDisk();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return myResponse;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public boolean getIsExiting(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return this.isExiting;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ignatiusong": 28
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    //private static Path defaultPath \u003d Paths.get(\"src\", \"main\", \"java\", \"src\" , \"taskStore.txt\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    private static final String NEXT_TASK_TAG \u003d \"NEXT_TASK\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * Attempts to store a list of tasks into a txt file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * @param tasks list of tasks to store"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * @throws IOException if file can\u0027t be found"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public static void storeIntoFile(List\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        FileWriter fw \u003d new FileWriter(\"src/taskStore.txt\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        FileWriter tagWriter \u003d  new FileWriter(\"src/tagStore.txt\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            fw.write(task.formatToStore() + \"\\n\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            String tagToStore \u003d \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            for(Tag t : task.getTags()){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "               tagToStore +\u003d t.toString() + \"\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            tagToStore +\u003d NEXT_TASK_TAG + \"\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            tagWriter.write(tagToStore);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        tagWriter.close();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * Attempts to read from a file which is used to save previous iterations of the list of tasks"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * and load it into a new list of tasks"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * @return a list of tasks if successfully loaded else returns an empty task list"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public static List\u003cTask\u003e readFromFile() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            File f \u003d new File(\"src/taskStore.txt\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            File tagFile \u003d new File(\"src/tagStore.txt\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            Scanner s1 \u003d new Scanner(f);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            Scanner tagScan \u003d new Scanner(tagFile);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            while (s1.hasNext()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "                String taskDes \u003d s1.nextLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "                Scanner s2 \u003d new Scanner(taskDes);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "                String taskType \u003d s2.next();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "                String taskDescription \u003d s2.nextLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "                    Task currentTask \u003d TaskHandler.parseFromFile(taskType, taskDescription);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "                    Storage.readTags(currentTask, tagScan);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "                    tasks.add(currentTask);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "                } catch (InvalidInputException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "                    System.out.println(\"Cannot parse from text file\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            System.out.println(\"File unable to be found\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public static void readTags(Task myTask, Scanner sc){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        String nextLine \u003d sc.nextLine();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        while(!nextLine.equals(NEXT_TASK_TAG)){"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            myTask.addTag(nextLine);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            nextLine \u003d sc.nextLine();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ignatiusong": 79
    }
  },
  {
    "path": "src/main/java/Tag.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "public class Tag {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public Tag(String description){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ignatiusong": 11
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.util.HashSet;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    boolean isDone \u003d false;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    HashSet\u003cString\u003e wordsInDescription \u003d new HashSet\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    List\u003cTag\u003e tags \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    String tick \u003d \"[\" + (char) 10003 + \"]\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    String cross \u003d \"[\" + (char) 10060 + \"]\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    abstract public String toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    abstract public String formatToStore();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public Tag addTag(String tagContent){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        Tag myTag \u003d new Tag(tagContent);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        this.tags.add(myTag);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return myTag;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public List\u003cTag\u003e getTags(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return this.tags;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    boolean contains(String keyword) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return wordsInDescription.contains(keyword);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ignatiusong": 36
    }
  },
  {
    "path": "src/main/java/TaskHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "public class TaskHandler {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    private enum possibleTasks {todo, deadline, event}"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * Returns a Task whose type is determined by taskType and the description of which is given by TaskDescription"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * @param taskType        should be a permitted taskType"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * @param taskDescription depends on the task but should generally be \"TASKDESCRIPTION / TIMING"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * @return a Task if the format is valid"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * @throws InvalidInputException"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public static Task taskHandler(String taskType, String taskDescription) throws InvalidInputException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        boolean isAllowedTask \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        for (possibleTasks task : possibleTasks.values()) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            if (taskType.equals(task.name())) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "                isAllowedTask \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        if (!isAllowedTask) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            throw new UnknownTaskTypeException();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        if (taskDescription.equals(\"\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            throw new EmptyTaskException();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        String[] taskAndTiming \u003d taskDescription.split(\"/\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            return new ToDoTask(taskDescription);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            if (taskAndTiming.length \u003c 2) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "                throw new InvalidInputException();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            return new DeadlineTask(taskAndTiming[0], taskAndTiming[1]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            if (taskAndTiming.length \u003c 2) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "                throw new InvalidInputException();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            return new EventTask(taskAndTiming[0], taskAndTiming[1]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        throw new InvalidInputException();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * Takes two Strings from the file and then interprets them to return a task following a specific format"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * @param taskType        should be a keyword describing the tasktype"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * @param taskDescription should contain taskdescription / timing(if applicable) / isDone"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * @return a Task if the file to load from has a valid storage format"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * @throws InvalidInputException"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public static Task parseFromFile(String taskType, String taskDescription) throws InvalidInputException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        String[] inputs \u003d taskDescription.split(\"/\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        Task myTask;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        if (inputs.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            myTask \u003d taskHandler(taskType, inputs[0].strip());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        } else if (inputs.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            myTask \u003d taskHandler(taskType, inputs[0].strip() + \"/ \" + inputs[1].strip());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            throw new InvalidInputException();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        if (inputs[inputs.length - 1].equals(\"1\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            myTask.setDone();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return myTask;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ignatiusong": 71
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    private List\u003cTask\u003e usrInputs;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        usrInputs \u003d Storage.readFromFile();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return usrInputs;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * Lists all the tasks in the list of tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public String list() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        String listString \u003d \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        for (Task usrTask : usrInputs) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            listString +\u003d (count + \". \" + usrTask + \"\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return listString;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * Sets the file at the specified index to done"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * @param index"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * @throws InvalidIndexException"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public String done(int index) throws InvalidIndexException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        if (index \u003e usrInputs.size()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        Task completedTask \u003d usrInputs.get(index - 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        completedTask.setDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return (\"Good job, mate. I have marked the following task as done.\\n\" + completedTask + \"\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * Deletes the file at the specified index"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * @param index"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * @throws InvalidIndexException"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public String delete(int index) throws InvalidIndexException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        if (index \u003e usrInputs.size()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        Task removedTask \u003d usrInputs.remove(index - 1);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return (\"I have removed the following task\\n\" + removedTask + \"\\n\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * Adds the task to the list of tasks"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public String add(Task task) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        usrInputs.add(task);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return (\"Got it! I\u0027ve added the following task \\n\" + task +"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "                \"\\nNow you have \" + usrInputs.size() + \" tasks\\n\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * Saves the task list to the disk by calling on Storage classes storeIntoFile method"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public void saveToDisk() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            Storage.storeIntoFile(usrInputs);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public List\u003cTask\u003e find(String keyword) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        List\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        for (Task task : usrInputs) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            if (task.contains(keyword)) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "                foundTasks.add(task);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return foundTasks;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ignatiusong": 97
    }
  },
  {
    "path": "src/main/java/TimeHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "public class TimeHandler {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    private static SimpleDateFormat myDate \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * Returns an Optional of a Date object if the dateString is in the correct format of yyyy-MM-dd"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * Else returns Optional.empty"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * @param dateString"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public static Optional\u003cDate\u003e dateFromString(String dateString) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            Date t \u003d myDate.parse(dateString);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            return Optional.of(t);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return Optional.empty();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ignatiusong": 27
    }
  },
  {
    "path": "src/main/java/ToDoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "public class ToDoTask extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    private String task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public ToDoTask(String task) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        //breaks down the taskDescription and adds all words individually to the Hashset"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        if(this.task.isEmpty()){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            System.err.println(\"Todo task description cannot be empty\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        Scanner taskDesc \u003d new Scanner(task);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        while (taskDesc.hasNext()) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            String keyword \u003d taskDesc.next();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            wordsInDescription.add(keyword);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * Produces a String of an appropriate format to store into the txt file when saving later on"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * @return a String of the form \"todo TASKDESCRIPTION / isDONE\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public String formatToStore() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        String format \u003d \"todo \" + task + \" /\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            format +\u003d \" 1\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            format +\u003d \" 0\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return format;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        String taskWords \u003d \"[T]\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            taskWords +\u003d tick;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            taskWords +\u003d cross;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        taskWords +\u003d \" \" + task;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        taskWords +\u003d \"\\nTAGS: \";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        for(Tag t : this.getTags()){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            taskWords +\u003d t + \", \";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return taskWords;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ignatiusong": 49
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * Prints a greeting"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public static void greet() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public static void sayBye() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        System.out.println(\"Goodbye! Hope to see you soon!\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ignatiusong": 19
    }
  },
  {
    "path": "src/main/java/UnknownTaskTypeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "public class UnknownTaskTypeException extends InvalidInputException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return \"I have no idea what you are saying.\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ignatiusong": 6
    }
  },
  {
    "path": "src/main/java/byeAction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "public class byeAction implements Action {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * Just does nothing"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public String doSomething(TaskList tasks) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            Storage.storeIntoFile(tasks.getList());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            System.err.println(e);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return \"Goodbye! Hope to see you soon!\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * Returns a boolean determining whether there\u0027s a next action. In all cases except byeAction the boolean"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * returned is true"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public boolean hasNextAction() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ignatiusong": 27
    }
  },
  {
    "path": "src/main/java/deleteAction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "public class deleteAction implements Action {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public deleteAction(int index) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * For deleteAction doSomething deletes a task specified by an index from the next int of the global scanner"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * from the TaskList"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * @param tasks the TaskList to delete from"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public String doSomething(TaskList tasks) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        if (index \u003c 0) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            return \"Invalid Index found\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        assert(index \u003e\u003d 0 \u0026\u0026 index \u003c\u003d tasks.getList().size());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            return tasks.delete(index);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        } catch (InvalidIndexException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            return (e.toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public boolean hasNextAction() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ignatiusong": 30
    }
  },
  {
    "path": "src/main/java/doneAction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "public class doneAction implements Action {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public doneAction(int index) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * Marks a task in the taskList as done given by the index of the next int from the GlobalScanner"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * @param tasks taskList to mark done from"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public String doSomething(TaskList tasks) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        if (index \u003c 0) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            return \"Invalid Index found\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            return tasks.done(index);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        } catch (InvalidIndexException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            return e.toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public boolean hasNextAction() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ignatiusong": 29
    }
  },
  {
    "path": "src/main/java/findAction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "public class findAction implements Action {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public findAction(String keyword) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public String doSomething(TaskList tasks) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        if (keyword.equals(\"\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            return \"I need a keyword\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        assert(!keyword.isEmpty());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        List\u003cTask\u003e tasksWithKeyword \u003d tasks.find(keyword);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        String myResponse \u003d \"The tasks matching the keyword are:\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        int numTasks \u003d 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        for (Task task : tasksWithKeyword) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            myResponse +\u003d (numTasks + \". \" + task + \"\\n\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            numTasks++;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return myResponse;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public boolean hasNextAction() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ignatiusong": 30
    }
  },
  {
    "path": "src/main/java/listAction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "public class listAction implements Action {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * Lists all the tasks in the task list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public String doSomething(TaskList tasks) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return tasks.list();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public boolean hasNextAction() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ignatiusong": 14
    }
  },
  {
    "path": "src/main/java/newTaskAction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "public class newTaskAction implements Action {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public newTaskAction(String input) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * Attempts to create a new Task if possible and add it to the taskList if there is one"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     * @param tasks taskList to add Task to"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public String doSomething(TaskList tasks) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            Scanner sc \u003d new Scanner(this.input);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            String command \u003d sc.next();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            String taskDescription \u003d \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "                taskDescription \u003d sc.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            Task currentTask \u003d TaskHandler.taskHandler(command, taskDescription);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            return tasks.add(currentTask);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        } catch (InvalidInputException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            return e.toString();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public boolean hasNextAction() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ignatiusong": 36
    }
  },
  {
    "path": "src/main/java/tagAction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "public class tagAction implements Action {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    private String tagDescription;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public tagAction(int index, String tagDescription){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        this.tagDescription \u003d tagDescription;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public boolean hasNextAction() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public String doSomething(TaskList tasks) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        Task currentTask \u003d tasks.getList().get(this.index - 1);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        Tag myTag \u003d currentTask.addTag(tagDescription);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        return \"I have added this tag: \u0027\" + myTag + \"\u0027 to this task:\\n\" + currentTask;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ignatiusong": 21
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "ignatiusong": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "ignatiusong": 19
    }
  },
  {
    "path": "src/tagStore.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "adsf"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "NEXT_TASK"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "afsd"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "adfa"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "NEXT_TASK"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "asc"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "NEXT_TASK"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "NEXT_TASK"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "NEXT_TASK"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "NEXT_TASK"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "NEXT_TASK"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "NEXT_TASK"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "NEXT_TASK"
      }
    ],
    "authorContributionMap": {
      "ignatiusong": 13
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        Optional\u003cDate\u003e myDate \u003d TimeHandler.dateFromString(\"1993-10-12\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        assertEquals(\"Tue Oct 12 00:00:00 SGT 1993\",myDate.get().toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ignatiusong": 14
    }
  },
  {
    "path": "src/test/java/TaskHandlerTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "public class TaskHandlerTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public void taskHandlerTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            Task task \u003d TaskHandler.taskHandler(\"todo\", \"something\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "            assertEquals(\"[T]\" + \"[\" + (char) 10060 + \"] something\", task.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        } catch(InvalidInputException e){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ignatiusong": 15
    }
  },
  {
    "path": "src/test/java/TimeHandlerTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "public class TimeHandlerTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    public void dateToStringTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        Optional\u003cDate\u003e myDate \u003d TimeHandler.dateFromString(\"1993-10-12\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "        assertEquals(\"Tue Oct 12 00:00:00 SGT 1993\",myDate.get().toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ignatiusong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ignatiusong": 14
    }
  }
]
