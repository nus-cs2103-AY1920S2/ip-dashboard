[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "hmtey": 1
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hmtey"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    private LocalDate by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Creates a new Deadline object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param content Description of deadline."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param by Date to complete deadline by."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public Deadline(String content, String by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        super(content);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        this.by \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Returns a string describing the deadline in the format for saving."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @return String describing the deadline."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public String toStore() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return \"[D]\" + super.toStore() + \" (at: \""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                + this.by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")) + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Returns a string describing the deadline in the format for printing."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @return String describing the deadline."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyy\")) + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hmtey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hmtey": 36
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        Storage data \u003d new Storage();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        Tracker tracker \u003d new Tracker();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        Parser command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        if (data.hasPreviousData()) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            data.loadData(tracker);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                command \u003d new Parser(scanner.next());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                if (command.isBye()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    ui.showGoodbye();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                } else if (command.isList()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    ui.showList(tracker);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                } else if (command.isDone()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    int index \u003d scanner.nextInt() - 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    ui.showDone(tracker, index);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    data.saveData(tracker.showList());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                } else if (command.isDelete()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    int index \u003d scanner.nextInt() - 1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    ui.showDelete(tracker, index);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    data.saveData(tracker.showList());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                } else if (command.isFind()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    String keyword \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    ui.showSearchResults(tracker, keyword);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    Parser content;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                        content \u003d new Parser(scanner.nextLine(), command);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                        ui.showAddedTask(tracker, content);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                        data.saveData(tracker.showList());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    } catch (DukeException exception) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                        ui.showError(exception);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            } catch (DukeException exception) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                ui.showError(exception);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "hmtey": 50
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hmtey"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Creates a DukeException object to handle errors."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param message Error message."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hmtey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hmtey": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hmtey"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    private LocalDate at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Creates a new Event object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param content Description of event."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param at Date when event is held."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public Event(String content, String at) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        super(content);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        this.at \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Returns a string describing the event in the format for saving."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @return String describing the event."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public String toStore() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return \"[E]\" + super.toStore() + \" (at: \""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                + this.at.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")) + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Returns a string describing the event in the format for printing."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @return String describing the event."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return \"[E]\" + super.toString()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                + \" (at: \" + this.at.format(DateTimeFormatter.ofPattern(\"MMM d yyy\")) + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hmtey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hmtey": 36
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hmtey"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    private int type;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    private String cmd;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Creates a parser object to make sense of the user command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param command Command given by user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @throws DukeException If command is not bye/list/done/todo/deadline/event/delete/find."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public Parser(String command) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        if (command.equals(\"bye\")|command.equals(\"list\")|command.equals(\"done\")|command.equals(\"todo\")"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                |command.equals(\"deadline\")|command.equals(\"event\")|command.equals(\"delete\")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                |command.equals(\"find\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            this.cmd \u003d command.toLowerCase();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I dont know what that means :-(\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Creates a parser object to organise the details of the task provided by user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param content Description of task given by user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param command Command given by user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @throws DukeException If description given by user is empty."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public Parser(String content, Parser command) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        if (content.equals(new String())) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a \""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    + command.getCommand() + \" cannot be empty.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            switch (command.getCommand()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                this.task \u003d new ToDo(content.substring(1));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                String [] eventArray \u003d content.split(\" /at \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                this.task \u003d new Event(eventArray[0].substring(1), eventArray[1]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                String [] deadlineArray \u003d content.split(\" /by \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                this.task \u003d new Deadline(deadlineArray[0].substring(1), deadlineArray[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public boolean isBye() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return this.cmd.equals(\"bye\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public boolean isList() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return this.cmd.equals(\"list\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return this.cmd.equals(\"done\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public boolean isDelete() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return this.cmd.equals(\"delete\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public boolean isFind() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return this.cmd.equals(\"find\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public String getCommand() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return this.cmd;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public Task getTask() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return this.task;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hmtey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hmtey": 75
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import static java.nio.file.StandardOpenOption.APPEND;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import static java.nio.file.StandardOpenOption.CREATE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hmtey"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    Path path;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Creates a Storage object that deals with loading and saving tasks to and from a file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        String currentDirectory \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        Path dataDirectory \u003d java.nio.file.Paths.get(currentDirectory, \"data\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        this.path \u003d java.nio.file.Paths.get(currentDirectory, \"data\", \"duke.txt\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        if (!java.nio.file.Files.exists(dataDirectory)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                java.nio.file.Files.createDirectory(dataDirectory);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            } catch (IOException ex) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Saves the given list to duke.txt."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param list List to save."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public void saveData(LinkedList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            java.nio.file.Files.deleteIfExists(path);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            Task task \u003d list.get(i);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            String taskString \u003d task.toStore() + \"\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            byte data[] \u003d taskString.getBytes();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            try (OutputStream out \u003d new BufferedOutputStream("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    Files.newOutputStream(this.path, CREATE, APPEND))) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                out.write(data, 0, data.length);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            } catch (IOException ex) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Loads previous list data from duke.txt, if any."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param tracker Tracker to add previous list data to."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public void loadData(Tracker tracker) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        try (InputStream in \u003d Files.newInputStream(this.path);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hmtey"
        },
        "content": "             BufferedReader reader \u003d new BufferedReader("
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                     new InputStreamReader(in))) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            String line \u003d null;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            int index \u003d 0;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            while ((line \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                String taskType \u003d line.substring(1,2);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                String state \u003d line.substring(4,5);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                String content \u003d line.substring(7);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    tracker.add(new ToDo(content));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    String[] eventArray \u003d content.split(\" \\\\(at: \");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    int eContentLength \u003d eventArray[1].length();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    tracker.add(new Event(eventArray[0],"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                            eventArray[1].substring(0, eContentLength - 1)));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    String[] deadlineArray \u003d content.split(\" \\\\(by: \");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    int dContentLength \u003d deadlineArray[1].length();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    tracker.add(new Deadline(deadlineArray[0],"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                            deadlineArray[1].substring(0, dContentLength - 1)));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                if (state.equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    tracker.markDone(index);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        } catch (IOException x) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            System.err.println(x);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Returns true if previous list data exists, false if no."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @return Boolean depending on previous data existence."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public boolean hasPreviousData() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return java.nio.file.Files.exists(this.path);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hmtey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hmtey": 109
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hmtey"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    private String content;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public Task(String content) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public String getContent() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return this.content;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public String toStore() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            return \"[\\u2713] \" + content;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            return \"[\\u2718] \" + content;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            return \"[\\u2713] \" + content;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            return \"[\\u2718] \" + content;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hmtey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hmtey": 34
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hmtey"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Creates a new ToDo object."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param content Description of task to be done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public ToDo(String content) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        super(content);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Returns a string describing the task to be done in the format for saving."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @return String describing the task to be done."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public String toStore() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Returns a string describing the task to be done in the format for printing."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @return String describing the task to be done."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hmtey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hmtey": 27
    }
  },
  {
    "path": "src/main/java/Tracker.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hmtey"
        },
        "content": "public class Tracker {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    private LinkedList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    private int totalTasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Creates a new Tracker object for tracking tasks in a list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public Tracker() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        this.list \u003d new LinkedList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        this.totalTasks \u003d 0;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Adds the given task into list for tracking."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param task Task to add into list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        this.totalTasks++;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        this.list.add(task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Marks the given task as done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param index Index of task to be marked as done."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public void markDone(int index) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        Task task \u003d this.list.get(index);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        task.setDone();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Deletes the given task from the tracking list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param index Index of the task to be deleted."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        Task task \u003d this.list.get(index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        this.list.remove(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        this.totalTasks--;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Returns a tracker that tracks a list of tasks containing the provided keyword."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param keyword Keyword to search for."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @return Tracker that tracks the tasks containing the keyword."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public Tracker find(String keyword) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        Tracker matchingTasks \u003d new Tracker();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        for (Task task : this.list) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            String taskDescription \u003d task.getContent();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            if (taskDescription.contains(keyword)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                matchingTasks.add(task);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return matchingTasks;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Returns list of tasks being tracked."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @return List of tasks."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public LinkedList\u003cTask\u003e showList() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Returns the total number of tasks in the list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @return Total number of tasks to be tracked."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public int getTotalTasks() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return this.totalTasks;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hmtey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hmtey": 76
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hmtey"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public void showGoodbye() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public void showList(Tracker tracker) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        for (int i \u003d 0; i \u003c tracker.getTotalTasks(); i++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            int itemNo \u003d i + 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            Task task \u003d tracker.showList().get(i);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            System.out.println(itemNo + \".\" + task);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public void showDone(Tracker tracker, int index) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        tracker.markDone(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        System.out.println(\"  \" + tracker.showList().get(index));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public void showDelete(Tracker tracker, int index) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        System.out.println(\"  \" + tracker.showList().get(index));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        tracker.delete(index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public void showAddedTask(Tracker tracker, Parser content) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        tracker.add(content.getTask());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        System.out.println(\"  \" + content.getTask());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        System.out.println(\"Now you have \" + tracker.getTotalTasks() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public void showSearchResults(Tracker tracker, String keyword) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        Tracker results \u003d tracker.find(keyword);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        for (int i \u003d 0; i \u003c results.getTotalTasks(); i++) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            int itemNo \u003d i + 1;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            Task task \u003d results.showList().get(i);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            System.out.println(itemNo + \".\" + task);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public void showError(Exception exception) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        System.out.println(exception.getMessage());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hmtey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hmtey": 62
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hmtey"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        assertEquals(\"[D][✘] drink coffee (by: Oct 15 2019)\", new Deadline(\"drink coffee\", \"2019-10-15\"));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hmtey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hmtey": 12
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hmtey"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        assertEquals(\"[E][✘] drink tea (at: Nov 20 2019)\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                new Event(\"drink coffee\", \"2019-11-20\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hmtey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hmtey": 13
    }
  },
  {
    "path": "src/test/java/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hmtey"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        assertEquals(\"[T][✘] return book\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                new ToDo(\"return book\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hmtey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hmtey": 13
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hmtey"
        },
        "content": " ____        _"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": "|  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hmtey"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hmtey"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hmtey"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hmtey"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hmtey"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hmtey"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hmtey"
        },
        "content": "  [T][✗] borrow book"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hmtey"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hmtey"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hmtey"
        },
        "content": "  [D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hmtey"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hmtey"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hmtey"
        },
        "content": "  [E][✗] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hmtey"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hmtey"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hmtey"
        },
        "content": "1.[T][✗] borrow book"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hmtey"
        },
        "content": "2.[D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hmtey"
        },
        "content": "3.[E][✗] project meeting (at: Mon 2-4pm)"
      }
    ],
    "authorContributionMap": {
      "hmtey": 21
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hmtey"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hmtey"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hmtey"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "hmtey": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hmtey"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hmtey"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hmtey"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hmtey"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hmtey"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hmtey"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hmtey"
        },
        "content": "javac  -cp C:\\Users\\tym\\Desktop\\CS2103T\\duke\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hmtey"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hmtey"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hmtey"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hmtey"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hmtey"
        },
        "content": "java -classpath C:\\Users\\tym\\Desktop\\CS2103T\\duke\\src\\main\\java\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hmtey"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hmtey"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "hmtey": 21
    }
  }
]
