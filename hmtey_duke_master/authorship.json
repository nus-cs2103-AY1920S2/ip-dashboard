[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hmtey"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue taskList](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "-": 38,
      "hmtey": 1
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hmtey"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hmtey"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    archiveVersion \u003d \"0.2\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hmtey"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hmtey"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027]"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hmtey"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hmtey"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hmtey"
        },
        "content": "test {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hmtey"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "hmtey": 37
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": "### Ui"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hmtey"
        },
        "content": "![Ui](./Ui.png)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hmtey"
        },
        "content": "### Add tasks: `todo`, `event`, `deadline`"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hmtey"
        },
        "content": "Adds a task to current list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hmtey"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hmtey"
        },
        "content": "`todo sleep`, `event wedding /at 2019-05-15`, `deadline submission /by 2019-04-22`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hmtey"
        },
        "content": "Expected outcome: "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hmtey"
        },
        "content": "![add1](./add1.png) ![add2](./add2.png)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hmtey"
        },
        "content": "### Listing out Tasks: `list`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hmtey"
        },
        "content": "Display current list of tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hmtey"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hmtey"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hmtey"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hmtey"
        },
        "content": "![list](./list.png)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hmtey"
        },
        "content": "### Marking completed tasks: `done`"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hmtey"
        },
        "content": "Mark a task as completed"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hmtey"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hmtey"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hmtey"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hmtey"
        },
        "content": "![done](./done.png)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hmtey"
        },
        "content": "### Deleting tasks: `delete`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hmtey"
        },
        "content": "Delete a task from current list"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hmtey"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hmtey"
        },
        "content": "`delete 3`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hmtey"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hmtey"
        },
        "content": "![delete](./delete.png)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hmtey"
        },
        "content": "### Searching for tasks: `find`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hmtey"
        },
        "content": "Search for tasks with a keyword."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hmtey"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hmtey"
        },
        "content": "`find sleep`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hmtey"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hmtey"
        },
        "content": "![find](./find.png)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hmtey"
        },
        "content": "### Updating tasks: `update`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hmtey"
        },
        "content": "Update a task in the current list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hmtey"
        },
        "content": "`update 2 description Mary\u0027s wedding`, `update 2 date 2019-06-07`"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hmtey"
        },
        "content": "![update1](./update1.png) ![update2](./update2.png)"
      }
    ],
    "authorContributionMap": {
      "-": 13,
      "hmtey": 65
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hmtey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hmtey"
        },
        "content": " * Deadline object for tasks that need to be done before a specific date/time."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hmtey"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hmtey"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    private LocalDate by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Creates a new Deadline object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param content Description of deadline."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param by Date to complete deadline by."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public Deadline(String content, String by) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        super(content);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        this.by \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Updates the deadline date."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param date New date to complete deadline by."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public void updateDate(String date) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        this.by \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Returns a string describing the deadline in the format for saving."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @return String describing the deadline."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public String toStore() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return \"[D]\" + super.toStore() + \" (by: \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                + this.by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")) + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Returns a string describing the deadline in the format for printing."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @return String describing the deadline."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyy\")) + \")\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hmtey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hmtey": 50
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hmtey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hmtey"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hmtey"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hmtey"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hmtey"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hmtey"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hmtey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hmtey": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    Ui ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    Storage data;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    TaskList taskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    Scanner scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Creates a new Duke object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        this.data \u003d new Storage();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        if (data.hasPreviousData()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            data.loadData(taskList);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Returns a string containing the welcome message upon starting up Duke."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @return Welcome message to user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public String openingMessage() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return this.ui.showWelcome();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Runs duke, returning different outputs based on the user input."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param input Command given by the user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @return A string containing the output based on the user\u0027s command."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public String run(String input) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        Parser command;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        Parser content;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            this.scanner \u003d new Scanner(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            command \u003d new Parser(this.scanner.next());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            if (command.isBye()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                output \u003d this.ui.showGoodbye();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                System.exit(0);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            } else if (command.isList()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                output \u003d this.ui.showList(this.taskList);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            } else if (command.isDone()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                int index \u003d this.scanner.nextInt() - 1;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                output \u003d this.ui.showDone(this.taskList, index, this.data);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            } else if (command.isDelete()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                int index \u003d this.scanner.nextInt() - 1;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                output \u003d this.ui.showDelete(this.taskList, index, this.data);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            } else if (command.isFind()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                String keyword \u003d this.scanner.nextLine().substring(1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                output \u003d this.ui.showSearchResults(this.taskList, keyword);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            } else if (command.isUpdate()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    int index \u003d this.scanner.nextInt() - 1;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    output \u003d this.ui.showUpdate(this.taskList, index, this.scanner.next(),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                            this.scanner.nextLine().substring(1), this.data);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                } catch (DukeException exception) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    output \u003d this.ui.showError(exception);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                boolean isRemainingCommands \u003d command.getCommand().equals(\"todo\")"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                        || command.getCommand().equals(\"event\") || command.getCommand().equals(\"deadline\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                assert isRemainingCommands;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                if (this.scanner.hasNext()) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    content \u003d new Parser(this.scanner.nextLine(), command);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    output \u003d this.ui.showAddedTask(this.taskList, content, this.data);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    output \u003d this.ui.showError(new DukeException(\"OOPS!!! The description of a \""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                            + command.getCommand() + \" cannot be empty.\"));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            output \u003d this.ui.showError(exception);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "hmtey": 87
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hmtey"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Creates a DukeException object to handle errors."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param message Error message."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hmtey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hmtey": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hmtey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hmtey"
        },
        "content": " * Event object for tasks that start and ends at a specific time."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hmtey"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hmtey"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    private LocalDate at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Creates a new Event object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param content Description of event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param at Date when event is held."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public Event(String content, String at) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        super(content);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        this.at \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Updates the event date."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param date New date of when the event is held."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public void updateDate(String date) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        this.at \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Returns a string describing the event in the format for saving."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @return String describing the event."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public String toStore() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return \"[E]\" + super.toStore() + \" (at: \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                + this.at.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")) + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Returns a string describing the event in the format for printing."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @return String describing the event."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return \"[E]\" + super.toString()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                + \" (at: \" + this.at.format(DateTimeFormatter.ofPattern(\"MMM d yyy\")) + \")\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hmtey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hmtey": 51
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hmtey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hmtey"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hmtey"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hmtey"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hmtey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hmtey": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hmtey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hmtey"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hmtey"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hmtey"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hmtey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hmtey": 31
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hmtey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hmtey"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hmtey"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hmtey"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(duke.openingMessage(), dukeImage));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        String response \u003d duke.run(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hmtey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hmtey": 51
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hmtey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": " * Class to make sense of the user command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hmtey"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hmtey"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    private String cmd;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Creates a parser object to make sense of the user command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param command Command given by user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @throws DukeException If command is not bye/list/done/todo/deadline/event/delete/find/update."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public Parser(String command) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        boolean isValidCommand \u003d command.equals(\"bye\")|command.equals(\"list\")|command.equals(\"done\")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                |command.equals(\"todo\")|command.equals(\"deadline\")|command.equals(\"event\")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                |command.equals(\"delete\")|command.equals(\"find\")|command.equals(\"update\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        if (isValidCommand) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            this.cmd \u003d command.toLowerCase();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I dont know what that means :-(\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Creates a parser object to organise the details of the task provided by user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param content Description of task given by user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param command Command given by user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @throws DukeException If description given by user is empty."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public Parser(String content, Parser command) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        if (content.equals(new String())) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    + command.getCommand() + \" cannot be empty.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            switch (command.getCommand()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                this.task \u003d new ToDo(content.substring(1));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                String [] eventArray \u003d content.split(\" /at \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                this.task \u003d new Event(eventArray[0].substring(1), eventArray[1]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                String [] deadlineArray \u003d content.split(\" /by \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                this.task \u003d new Deadline(deadlineArray[0].substring(1), deadlineArray[1]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                assert false : command.getCommand();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public boolean isBye() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return this.cmd.equals(\"bye\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public boolean isList() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return this.cmd.equals(\"list\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return this.cmd.equals(\"done\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public boolean isDelete() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return this.cmd.equals(\"delete\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public boolean isFind() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return this.cmd.equals(\"find\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public boolean isUpdate() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return this.cmd.equals(\"update\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public String getCommand() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return this.cmd;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public Task getTask() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return this.task;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hmtey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hmtey": 86
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import static java.nio.file.StandardOpenOption.APPEND;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import static java.nio.file.StandardOpenOption.CREATE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hmtey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hmtey"
        },
        "content": " * Class for handling the saving/loading of the task list for Duke."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hmtey"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hmtey"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    Path path;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Creates a Storage object that deals with loading and saving tasks to and from a file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        String currentDirectory \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        Path dataDirectory \u003d java.nio.file.Paths.get(currentDirectory, \"data\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        this.path \u003d java.nio.file.Paths.get(currentDirectory, \"data\", \"duke.txt\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        if (!java.nio.file.Files.exists(dataDirectory)) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                java.nio.file.Files.createDirectory(dataDirectory);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            } catch (IOException ex) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Saves the given list to duke.txt."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param list List to save."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public void saveData(LinkedList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            java.nio.file.Files.deleteIfExists(path);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            Task task \u003d list.get(i);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            String taskString \u003d task.toStore() + \"\\n\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            byte data[] \u003d taskString.getBytes();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            try (OutputStream out \u003d new BufferedOutputStream("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    Files.newOutputStream(this.path, CREATE, APPEND))) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                out.write(data, 0, data.length);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            } catch (IOException ex) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Loads previous list data from duke.txt, if any."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param taskList Tracker to add previous list data to."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public void loadData(TaskList taskList) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        try (InputStream in \u003d Files.newInputStream(this.path);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hmtey"
        },
        "content": "             BufferedReader reader \u003d new BufferedReader("
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                     new InputStreamReader(in))) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            String line \u003d null;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            int index \u003d 0;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            while ((line \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                String taskType \u003d line.substring(1,2);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                String state \u003d line.substring(4,5);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                String content \u003d line.substring(7);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    taskList.add(new ToDo(content));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    String[] eventArray \u003d content.split(\" \\\\(at: \");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    int eContentLength \u003d eventArray[1].length();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    taskList.add(new Event(eventArray[0],"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                            eventArray[1].substring(0, eContentLength - 1)));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    String[] deadlineArray \u003d content.split(\" \\\\(by: \");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    int dContentLength \u003d deadlineArray[1].length();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    taskList.add(new Deadline(deadlineArray[0],"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                            deadlineArray[1].substring(0, dContentLength - 1)));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                if (state.equals(\"O\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                    taskList.markDone(index);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        } catch (IOException x) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            System.err.println(x);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Returns true if previous list data exists, false if no."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @return Boolean depending on previous data existence."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public boolean hasPreviousData() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return java.nio.file.Files.exists(this.path);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hmtey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hmtey": 112
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hmtey"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    private String content;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public Task(String content) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public String getContent() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return this.content;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public void updateContent(String content) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public void updateDate(String date) {}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public String toStore() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            return \"[O] \" + content;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            return \"[X] \" + content;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            return \"[O] \" + content;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            return \"[X] \" + content;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hmtey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hmtey": 40
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import java.util.LinkedList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hmtey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hmtey"
        },
        "content": " * Class that contains the task list \u0026 operations that can be done to the list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hmtey"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hmtey"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    private LinkedList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    private int totalTasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Creates a new Tracker object for tracking tasks in a list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        this.list \u003d new LinkedList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        this.totalTasks \u003d 0;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Adds the given task into list for tracking."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param task Task to add into list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        this.totalTasks++;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        this.list.add(task);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Marks the given task as done."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param index Index of task to be marked as done."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public void markDone(int index) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        Task task \u003d this.list.get(index);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        task.setDone();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Deletes the given task from the list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param index Index of the task to be deleted."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        Task task \u003d this.list.get(index);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        this.list.remove(index);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        this.totalTasks--;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Returns a tracker that tracks a list of tasks containing the provided keyword."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param keyword Keyword to search for."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @return Tracker that tracks the tasks containing the keyword."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public TaskList find(String keyword) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        TaskList matchingTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        for (Task task : this.list) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            String taskDescription \u003d task.getContent();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            if (taskDescription.contains(keyword)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                matchingTasks.add(task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return matchingTasks;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Updates the given task in the list."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param index Index of the task to be updated."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param type The portion of the task to be updated."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param content The new content of the portion to be updated."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @throws DukeException If the specified portion of task is not valid/can not be updated."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public void update(int index, String type, String content) throws DukeException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        Task task \u003d this.list.get(index);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        if (type.equals(\"description\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            task.updateContent(content);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        } else if (type.equals(\"date\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            task.updateDate(content);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            throw new DukeException(\"OOPS!!! I can\u0027t edit that :-(\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Returns list of tasks being tracked."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @return List of tasks."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public LinkedList\u003cTask\u003e showList() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Returns the total number of tasks in the list."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @return Total number of tasks to be tracked."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public int getTotalTasks() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return this.totalTasks;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hmtey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hmtey": 99
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hmtey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": " * ToDo object for tasks without any date/time attached to it."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hmtey"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hmtey"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Creates a new ToDo object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param content Description of task to be done."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public ToDo(String content) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        super(content);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Returns a string describing the task to be done in the format for saving."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @return String describing the task to be done."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public String toStore() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Returns a string describing the task to be done in the format for printing."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @return String describing the task to be done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hmtey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hmtey": 31
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hmtey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": " * Class that deals with interactions with the user."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hmtey"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hmtey"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Returns a string containing the welcome message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @return The welcome message for user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        String greeting \u003d \"Hello! I\u0027m Duke\\n What can I do for you?\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return logo + greeting;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Returns a string containing the goodbye message."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @return The goodbye message for user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public String showGoodbye() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Returns a string containing the list of tasks in the provided list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param taskList List of tasks to be printed as a string."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @return A string containing the list of tasks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public String showList(TaskList taskList) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        String output \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getTotalTasks(); i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            int itemNo \u003d i + 1;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            Task task \u003d taskList.showList().get(i);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            if (i \u003d\u003d taskList.getTotalTasks() - 1) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                output +\u003d itemNo + \".\" + task;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                output +\u003d itemNo + \".\" + task + \"\\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Marks a task as completed and returns a string containing the specific task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param taskList List of tasks containing the task to be marked completed."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param index Index of the task to be marked completed."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param storage Storage object to save the action."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @return A string containing the completed task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public String showDone(TaskList taskList, int index, Storage storage) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        assert index \u003c\u003d taskList.getTotalTasks(): \"Index given exceeds total tasks\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        taskList.markDone(index);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        String output \u003d \"Nice! I\u0027ve marked this task as done\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                + \"  \" + taskList.showList().get(index);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        storage.saveData(taskList.showList());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Deletes a specified task from the list of tasks and and returns a string containing the task."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param taskList List of tasks containing the task to be deleted."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param index Index of the task to be deleted."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param storage Storage object to save the action."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @return A string containing the deleted task."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public String showDelete(TaskList taskList, int index, Storage storage) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        assert index \u003c\u003d taskList.getTotalTasks(): \"Index given exceeds total tasks\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        String output \u003d \"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                + \"  \" + taskList.showList().get(index);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        taskList.delete(index);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        storage.saveData(taskList.showList());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Adds a tasks to the list of tasks and and returns a string containing the task."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param taskList List of tasks to add the task to."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param content Content of the task."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param storage Storage object to save the action."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @return A string containing the added task."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public String showAddedTask(TaskList taskList, Parser content, Storage storage) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        taskList.add(content.getTask());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        String output \u003d \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                + \"  \" + content.getTask() + \"\\n\" + \"Now you have \""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                + taskList.getTotalTasks() + \" task(s) in the list.\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        storage.saveData(taskList.showList());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Searches the list of tasks for tasks containing the keyword and returns a string containing the tasks."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param taskList List of tasks to search through."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param keyword Keyword to search for."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @return A string containing the list of tasks with the specified keyword."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public String showSearchResults(TaskList taskList, String keyword) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        TaskList results \u003d taskList.find(keyword);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        String output \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        for (int i \u003d 0; i \u003c results.getTotalTasks(); i++) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            int itemNo \u003d i + 1;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            Task task \u003d results.showList().get(i);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            if (i \u003d\u003d results.getTotalTasks() - 1) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                output +\u003d itemNo + \".\" + task;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                output +\u003d itemNo + \".\" + task + \"\\n\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Updates a task from the list of task and returns a string containing the specific task."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param taskList List of tasks containing the task to be updated."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param index Index of the task to be updated."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param type The portion of the task to be updated."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param content The new content of the updated portion."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param storage Storage object to save the action."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @return A string containing the updated task."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @throws DukeException If the specified portion of task is not valid/can not be updated."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public String showUpdate(TaskList taskList, int index, String type,"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                             String content, Storage storage) throws DukeException{"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        taskList.update(index, type, content);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        String output \u003d \"Alright. I\u0027ve updated this task:\\n\""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                + \"  \" + taskList.showList().get(index);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        storage.saveData(taskList.showList());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * Returns a string containing the message of the given exception."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @param exception The exception thrown."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     * @return A string containing the message of the given exception."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hmtey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public String showError(Exception exception) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        return exception.getMessage();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hmtey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hmtey": 153
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hmtey"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hmtey"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hmtey"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hmtey"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hmtey"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hmtey"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hmtey"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "hmtey": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hmtey"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hmtey"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hmtey"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hmtey"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hmtey"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hmtey"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hmtey"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hmtey"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hmtey"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "hmtey": 19
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hmtey"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        assertEquals(\"[D][X] drink coffee (by: Oct 15 2019)\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                new Deadline(\"drink coffee\", \"2019-10-15\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hmtey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hmtey": 13
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hmtey"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        assertEquals(\"[E][X] drink tea (at: Nov 20 2019)\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                new Event(\"drink tea\", \"2019-11-20\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hmtey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hmtey": 13
    }
  },
  {
    "path": "src/test/java/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hmtey"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hmtey"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hmtey"
        },
        "content": "        assertEquals(\"[T][X] return book\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hmtey"
        },
        "content": "                new ToDo(\"return book\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hmtey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hmtey": 13
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hmtey"
        },
        "content": " ____        _"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": "|  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hmtey"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hmtey"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hmtey"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hmtey"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hmtey"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hmtey"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hmtey"
        },
        "content": "  [T][✗] borrow book"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hmtey"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hmtey"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hmtey"
        },
        "content": "  [D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hmtey"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hmtey"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hmtey"
        },
        "content": "  [E][✗] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hmtey"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hmtey"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hmtey"
        },
        "content": "1.[T][✗] borrow book"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hmtey"
        },
        "content": "2.[D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hmtey"
        },
        "content": "3.[E][✗] project meeting (at: Mon 2-4pm)"
      }
    ],
    "authorContributionMap": {
      "hmtey": 21
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hmtey"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hmtey"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hmtey"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "hmtey": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hmtey"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hmtey"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hmtey"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hmtey"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hmtey"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hmtey"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hmtey"
        },
        "content": "javac  -cp C:\\Users\\tym\\Desktop\\CS2103T\\duke\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hmtey"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hmtey"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hmtey"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hmtey"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hmtey"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hmtey"
        },
        "content": "java -classpath C:\\Users\\tym\\Desktop\\CS2103T\\duke\\src\\main\\java\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hmtey"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hmtey"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hmtey"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "hmtey": 21
    }
  }
]
