[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    id \u0027com.github.sherter.google-java-format\u0027 version \u00270.8\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    archiveVersion \u003d \"0.1\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "test {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ailanthustng": 22,
      "-": 20
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "T , 0 , test"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "E , 0 , read book , 2020-01-01"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "T , 0 , drink water"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "E , 0 , buy phone , 2020-01-05"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "T , 0 , buy wallet"
      }
    ],
    "authorContributionMap": {
      "ailanthustng": 5
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": " * Deadline is a sub-class of Task. Represents when to finish a certain task by."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    String by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    String strDoneStatus;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    LocalDate date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * Constructor that takes in 2 params."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * @param deadline Name of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * @param by       Deadline for the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public Deadline(String deadline, String by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        super(deadline);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        this.date \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * Constructor that takes in 3 params."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * @param deadline   Name of the task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * @param by         Deadline for the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * @param strDoneStatus Defines the done status of the task. Reads either 1 (complete) or 0 (incomplete)."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public Deadline(String deadline, String by, String strDoneStatus) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        super(deadline);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        this.strDoneStatus \u003d strDoneStatus;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        if (strDoneStatus.equals(\"1\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            this.doneStatus \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            this.doneStatus \u003d false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        this.date \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * Returns the format to be saved in the output txt file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * @return Returns format in as a string."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public String save() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        int myInt \u003d doneStatus ? 1 : 0;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        return \"D , \" + myInt + \" , \" + taskName + \" , \" + by;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        String formattedBy \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + formattedBy + \")\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ailanthustng": 60
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": " * Main Duke class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    static Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    static File file;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    static BufferedReader br;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    static FileWriter fw;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    private Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * Constructor. Initialises the UI, Storage and TaskList classes."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * @param filePath Path of the file to be read / written to."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            ui \u003d new UI();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            taskList \u003d storage.getTaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            System.err.println(e);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * Method runs the scan method of the parser, which reads input from user. Subsequently writes"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * output into text file when command \"bye\" is entered."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        UI.printIntro();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            parser.scan();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            // Write the list into output"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            storage.writeList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        new Duke(\"./data/duke.txt\").run();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ailanthustng": 52,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": " * Creates a DukeException extended from Exceptions."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ailanthustng": 8
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": " * Event is a sub-class of Task. Represents a task on a certain date."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    String by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    String strDoneStatus;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    LocalDate date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * Constructor that takes in 2 params."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * @param event Name of the event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * @param by    Date of the event."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public Event(String event, String by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        super(event);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        this.date \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * Constructor that takes in 3 params."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * @param event Name of the event."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * @param by    Date of the event."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * @param strDoneStatus     Defines the done status of the event. Reads either 1 (complete) or 0 (incomplete)."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public Event(String event, String by, String strDoneStatus) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        super(event);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        this.strDoneStatus \u003d strDoneStatus;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        if (strDoneStatus.equals(\"1\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            this.doneStatus \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            this.doneStatus \u003d false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        this.date \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * Returns the format to be saved in the output txt file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * @return Returns format in as a string."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public String save() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        int myInt \u003d doneStatus ? 1 : 0;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        return \"E , \" + myInt + \" , \" + taskName + \" , \" + by;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        String formattedBy \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        return \"[E]\" + super.toString() + \" (by: \" + formattedBy + \")\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ailanthustng": 60
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": " * Parser class. This class manages the input of the user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    Scanner sc;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * Constructor. Initialises the Scanner class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    Parser() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * This method reads the input of the users and subsequently does the appropriate actions via the"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * methods in the TaskList class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public void scan() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            ArrayList\u003cTask\u003e list \u003d TaskList.getTaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                    UI.printBye();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                } else if (input.contains(\"find\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                    if (input.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        throw new DukeException(\"Sorry! Please input a task to find\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        String keyword \u003d input.substring(5);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        TaskList.findTasks(keyword);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                    UI.printList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                } else if (input.contains(\"done\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                    String[] inputArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                    int num \u003d Integer.parseInt(inputArr[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                    if (num \u003e list.size()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        throw new DukeException(\"Sorry! That is an invalid task number.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        TaskList.doneAction(num);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                } else if (input.contains(\"todo\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                    if (input.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        throw new DukeException(\"Sorry! Description of todo cannot be empty.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        String name \u003d input.substring(5);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        Task todo \u003d new ToDos(name);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        TaskList.addToList(todo);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                } else if (input.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                    if (input.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        throw new DukeException(\"Sorry! Description of deadline cannot be empty.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        int index \u003d input.indexOf(\" \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        String action \u003d input.substring(index + 1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        String[] actionArr \u003d action.split(\" /by \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                            throw new DukeException(\"Sorry! Please enter a deadline.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                            String by \u003d actionArr[1];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                            String name \u003d actionArr[0];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                            Task deadline \u003d new Deadline(name, by);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                            TaskList.addToList(deadline);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                } else if (input.contains(\"event\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                    if (input.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        throw new DukeException(\"Sorry! Description of event cannot be empty.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        int index \u003d input.indexOf(\" \");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        String action \u003d input.substring(index + 1);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        String[] actionArr \u003d action.split(\" /by \");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                            throw new DukeException(\"Sorry! Please enter a date and time.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                            String by \u003d actionArr[1];"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                            String name \u003d actionArr[0];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                            Task event \u003d new Event(name, by);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                            TaskList.addToList(event);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                } else if (input.contains(\"delete\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                    if (input.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        throw new DukeException(\"Sorry! Please specify a task number.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        String[] inputArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        int num \u003d Integer.parseInt(inputArr[1]);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        if (num \u003e list.size()) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                            throw new DukeException(\"Sorry! That is an invalid task number.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                            TaskList.removeAction(num - 1);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                    throw new DukeException(\"Sorry! I dont know what that means.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                System.err.println(e);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ailanthustng": 106
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": " * Storage class manages the reading and writing of the txt file."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    private BufferedReader br;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    private FileWriter fw;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * Constructor. Initialises the file if it exists. Creates the file the file does not exist."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * @param filePath Path of the file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * @throws IOException Throws an error if some sort of I/O error is met."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public Storage(String filePath) throws IOException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        if (!this.file.exists()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            this.file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            this.file.createNewFile();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            this.file \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * This method converts the string of texts from the input file to the ArrayList of tasks."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * @return Returns the task list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * @throws FileNotFoundException Throws an error if file is not found."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public TaskList getTaskList() throws FileNotFoundException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        br \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        ArrayList\u003cString\u003e stringArr \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        String st;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            while ((st \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                stringArr.add(st);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            System.err.println(e);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        return new TaskList(stringArr);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * Writes the tasks in the ArrayList of tasks to the output file."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * @throws IOException Throws an error if there is some sort of I/O error."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public void writeList() throws IOException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        for (Task t : TaskList.getTaskList()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            //            System.out.println(t);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            fw.write(t.save() + \"\\n\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        fw.flush();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ailanthustng": 68
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": " * Superclass of the Event, Deadline and Todos class."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public boolean doneStatus;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public String taskName;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * Constructor. Initialises the task name and the done status as incomplete."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * @param taskName Name of the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public Task(String taskName) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        this.doneStatus \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * Marks the task as complete / incomplete."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public void mark() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        this.doneStatus \u003d !this.doneStatus;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * The save format of each task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * @return Returns null as it is overwritten in the subclasses."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public String save() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        return this.taskName;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public boolean getDoneStatus() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        return this.doneStatus;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        String symbol;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        if (doneStatus) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            symbol \u003d \"  complete  \";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            symbol \u003d \" incomplete \";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        return \"[\" + symbol + \"] \" + taskName;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ailanthustng": 52
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": " * TaskList class holds an ArrayList of all the tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    private ArrayList\u003cString\u003e stringArr;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * Constructor. Initialises the task list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * @param stringArr stringArr is taken in as a parameter for the method parseTaskList."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    TaskList(ArrayList\u003cString\u003e stringArr) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        this.stringArr \u003d stringArr;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        if (!stringArr.isEmpty()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            parseTaskList(stringArr);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * This method converts each line in the text file to a Task object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * @param stringArr Takes in an array of Strings in a certain format which is then converted to"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     *                  individual Task objects."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    private void parseTaskList(ArrayList\u003cString\u003e stringArr) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        for (String st : stringArr) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            String[] split \u003d st.split(\",\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            for (int i \u003d 0; i \u003c split.length; i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                String currString \u003d split[i];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                split[i] \u003d currString.trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            switch (split[0]) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                taskList.add(new Event(split[2], split[3], split[1]));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                taskList.add(new Deadline(split[2], split[3], split[1]));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                taskList.add(new ToDos(split[2], split[1]));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public static ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * Adds the task to the taskList."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * @param task The task to be added."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public static void addToList(Task task) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        UI.wrapper("
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                \"I have added: \""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        + task.getTaskName()"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        + \"\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        + \"You now have \""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        + taskList.size()"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        + \" tasks\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * This method marks the inputted number of task as done."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * @param num The corresponding number of the task."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public static void doneAction(int num) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        Task currTask \u003d taskList.get(num);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        UI.wrapper("
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                \"I have marked \""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        + currTask.getTaskName()"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        + \" as done.\\n\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        + \"You now have \""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        + taskList.size()"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        + \" tasks left\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        currTask.mark();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * This method deletes the task from the list."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * @param num The corresponding number of the task."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public static void removeAction(int num) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        Task currTask \u003d taskList.get(num);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        taskList.remove(num);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        UI.wrapper("
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                \"I have removed \""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        + currTask.getTaskName()"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        + \"\\n\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        + \"You now have \""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        + taskList.size()"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        + \" tasks left\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * This method is used to find tasks with the matching keyword and subsequently passed to UI to"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * print it out."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * @param keyword Finding the task via the keyword provided."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public static void findTasks(String keyword) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        for (Task t : taskList) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            if (t.getTaskName().contains(keyword)) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                foundTasks.add(t);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        UI.printFoundTasks(foundTasks);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ailanthustng": 121
    }
  },
  {
    "path": "src/main/java/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": " * ToDos is a subclass of Task. Represents tasks that have to be done."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    String strDoneStatus;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * Constructor that takes in 1 param."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * @param todo Name of the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public ToDos(String todo) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        super(todo);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * Constructor that takes in 2 params."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * @param todo Name of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * @param strDoneStatus    Defines the done status of the task. Reads either 1 (complete) or 0 (incomplete)."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public ToDos(String todo, String strDoneStatus) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        super(todo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        if (strDoneStatus.equals(\"1\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            this.doneStatus \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            this.doneStatus \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * Returns the format to be saved in the output txt file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * @return Returns format in as a string."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public String save() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        int myInt \u003d doneStatus ? 1 : 0;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        return \"T , \" + myInt + \" , \" + taskName;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ailanthustng": 46
    }
  },
  {
    "path": "src/main/java/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": " * UI class supports everything that is displayed to the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * Empty constructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public UI() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * String of asterisks for design purposes."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    static String horizontalLine \u003d \"***********************************************\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * Prints the introduction logo when program is first started."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    static void printIntro() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        String logo \u003d"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                \" ____        _        \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                        + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        System.out.println(\"Hello, I\u0027m Duke \\n\" + \"How can I help you today?\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * Prints the goodbye message when user inputs \"bye\"."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public static void printBye() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * Prints out the tasks in the list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public static void printList() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d TaskList.getTaskList();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        if (list.isEmpty()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            System.out.println(\"You have 0 outstanding tasks!\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            for (Task s : list) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                int listNo \u003d list.indexOf(s) + 1;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                System.out.println(listNo + \".\" + s);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * Prints out the inputted string wrapped within the line of asterisks."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * @param string String to be wrapped within."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public static void wrapper(String string) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        String output \u003d horizontalLine + \"\\n\" + string + \"\\n\" + horizontalLine;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * Prints out the tasks found."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     * @param list Takes in a list to print out."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public static void printFoundTasks(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        if (list.isEmpty()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            System.out.println(\"There were no tasks found\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            for (Task s : list) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                int listNo \u003d list.indexOf(s) + 1;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "                System.out.println(listNo + \".\" + s);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ailanthustng": 89
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public void testDoneStatus() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        Deadline deadlineTest \u003d new Deadline(\"test\", \"2020-01-01\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        assertEquals(false, deadlineTest.getDoneStatus());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public void testTaskName() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        Deadline deadlineTest \u003d new Deadline(\"test\", \"2020-01-01\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        assertEquals(\"test\", deadlineTest.getTaskName());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ailanthustng": 17
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public void testDoneStatus() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        Event eventTest \u003d new Event(\"test\", \"2020-01-01\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        assertEquals(false, eventTest.getDoneStatus());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public void testTaskName() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        Event eventTest \u003d new Event(\"test\", \"2020-01-01\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        assertEquals(\"test\", eventTest.getTaskName());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ailanthustng": 17
    }
  },
  {
    "path": "src/test/java/ToDosTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "public class ToDosTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public void testDoneStatus() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        ToDos todoTest \u003d new ToDos(\"test\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        assertEquals(false, todoTest.getDoneStatus());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    public void testTaskName() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        ToDos todoTest \u003d new ToDos(\"test\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "        assertEquals(\"test\", todoTest.getTaskName());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ailanthustng": 17
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "todo read book"
      }
    ],
    "authorContributionMap": {
      "ailanthustng": 1
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "if ! javac -cp ./src -Xlint:none -d ../bin ./src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ailanthustng"
        },
        "content": "fi "
      }
    ],
    "authorContributionMap": {
      "ailanthustng": 34
    }
  }
]
