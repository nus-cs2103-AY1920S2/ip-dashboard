[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    archiveVersion \u003d \"0.1.4\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "test {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nidorinas": 28,
      "-": 19
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "[✓] - [T] - borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "[✘] - [D] - return book - 2020-01-13"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "[✓] - [E] - project meeting - 2020-01-02"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "[✘] - [T] - join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "[✘] - [E] - dance party - 2020-01-01"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "[✘] - [D] - do cs3244 - 2019-12-29"
      }
    ],
    "authorContributionMap": {
      "nidorinas": 6
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Constructor method for a Deadline Task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @param description Description of the Deadline Task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @param date Date by which you wish the Deadline Task to be completed by"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public Deadline(String description, LocalDate date) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        super(description, \"D\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Getter method to get the date for the Deadline Task as a STRING object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @return Date for the Deadline Task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        String formattedDate \u003d this.date.format(formatter);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        return formattedDate;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Getter method to return the date of the Deadline Task as a String object in the format yyyy-MM-dd."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @return Formatted date as a string in the yyyy-MM-dd format"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public String getDateForWritingToFile() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        String formattedDate \u003d this.date.format(formatter);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        return formattedDate;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nidorinas": 39
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nidorinas"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nidorinas"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nidorinas"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nidorinas"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nidorinas": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        storage \u003d new Storage(\"data/duke.txt\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public String run(String input) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        while (!input.toLowerCase().equals(\"bye\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            Parser parser \u003d new Parser(input);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            String command \u003d parser.processCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            if (command.toLowerCase().equals(\"list\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                if (tasks.getTaskListSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    return ui.printEmptyListMessage();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    return ui.printList(tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            } else if (command.toLowerCase().equals(\"done\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                int index \u003d parser.processIndex();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                tasks.get(index).updateIsCompleted(true);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                return ui.printMarkedAsDone(tasks.get(index));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            } else if (command.toLowerCase().equals(\"delete\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                int index \u003d parser.processIndex();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                String lst \u003d ui.printDelete();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                String completion_symbol \u003d tasks.get(index).getCompletionStatusAsString();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                String task_type \u003d tasks.get(index).getTaskType();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                String description \u003d tasks.get(index).getDescription();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                String line \u003d completion_symbol + \" | [\" + task_type + \"] | \" + description + \"\\n\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                if (task_type.equals(\"D\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    String date \u003d tasks.get(index).getDate();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    line \u003d completion_symbol + \" | [\" + task_type + \"] | \" + description + \" | \" + date + \"\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                else if (task_type.equals(\"E\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    String date \u003d tasks.get(index).getDate();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    line \u003d completion_symbol + \" | [\" + task_type + \"] | \" + description + \" | \" + date + \"\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                tasks.deleteTask(index);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                return lst + line;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            } else if (command.toLowerCase().equals(\"find\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                String keyword \u003d parser.processKeyword();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                return tasks.findTask(keyword);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            } else if (command.toLowerCase().equals(\"todo\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    String description \u003d parser.processDescriptionForTodo();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    tasks.addTodo(description);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    String lst \u003d ui.printAdd();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    String completion_symbol \u003d \"[\\u2718]\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    String task_type \u003d \"[T]\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    lst \u003d lst + completion_symbol + \" \" + task_type + \" \" + description + \"\\n\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    lst \u003d lst + ui.printNumTasksInList(tasks);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    return lst;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                } catch (DukeException exception) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    return ui.printExceptionMessage(exception);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            } else if (command.toLowerCase().equals(\"deadline\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    String description \u003d parser.processDescriptionForEventOrDeadline();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    LocalDate date \u003d parser.processDateForDeadline();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    tasks.addDeadline(description, date);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    String lst \u003d ui.printAdd();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    String completion_symbol \u003d \"[\\u2718]\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    String task_type \u003d \"[D]\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    String formattedDate \u003d date.format(formatter);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    lst \u003d lst + completion_symbol + \" \" + task_type + \" \" + description + \"(by: \" + formattedDate + \")\\n\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    lst \u003d lst + ui.printNumTasksInList(tasks);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    return lst;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                catch (DukeException exception){"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    return ui.printExceptionMessage(exception);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            } else if (command.toLowerCase().equals(\"event\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    String description \u003d parser.processDescriptionForEventOrDeadline();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    LocalDate date \u003d parser.processDateForEvent();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    tasks.addEvent(description, date);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    String lst \u003d ui.printAdd();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    String completion_symbol \u003d \"[\\u2718]\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    String task_type \u003d \"[E]\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    String formattedDate \u003d date.format(formatter);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    lst \u003d lst + completion_symbol + \" \" + task_type + \" \" + description + \"(at: \" + formattedDate + \")\\n\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    lst \u003d lst + ui.printNumTasksInList(tasks);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    return lst;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                catch (DukeException exception) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    return ui.printExceptionMessage(exception);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                return \"Good to see you, Mr. Yu!\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        storage.updateFile(tasks);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        return ui.printGoodbye();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Gets response from run()."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        return this.run(input);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nidorinas": 124,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Duke Exception constructor method"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @param message Exception message to be printed out to the user"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nidorinas": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Constructor method for the Event Task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @param description Description of the Event Task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @param date Date on which the Event is occurring."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public Event(String description, LocalDate date) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        super(description, \"E\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Getter method to return the date of the Event Task as a STRING object in the format dd-MM-yyyy."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @return Date of the Event Task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        String formattedDate \u003d this.date.format(formatter);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        return formattedDate;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Getter method to return the date of the Event Task as a String object in the format yyyy-MM-dd."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @return Returns date as a String in the yyyy-MM-dd format."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public String getDateForWritingToFile() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        String formattedDate \u003d this.date.format(formatter);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        return formattedDate;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nidorinas": 39
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nidorinas": 7
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nidorinas"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nidorinas"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nidorinas": 28
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nidorinas"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nidorinas"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/typhon.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/operator.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nidorinas": 52
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    private String raw_user_input;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Constructor method for Parser."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @param user_input The raw user input, read in as a String."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public Parser(String user_input) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        raw_user_input \u003d user_input;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Splits the raw user input by spaces and checks the length of the resulting array."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Used for checking for exceptions (eg. empty Task descriptions)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @return Length of the raw user input, split by spaces."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public int splitStringLength() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        String[] split_str \u003d raw_user_input.split(\" \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        return split_str.length;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Processes raw user input and extracts the command word."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @return Extracted command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public String processCommand() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        String[] split_str \u003d raw_user_input.split(\" \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        return split_str[0];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Processes raw user input and extracts the description."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @return Extracted description of the Todo."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public String processDescriptionForTodo() throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        if (splitStringLength() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            throw new DukeException(\"Mission parameters are null!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        int start_index \u003d processCommand().length() + 1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        int end_index \u003d raw_user_input.length();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        return raw_user_input.substring(start_index, end_index);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Processes raw user input and extracts the description."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * This is only called when the command is an Event, or Deadline."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @return Extracted description of the Event or Deadline."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @throws DukeException when there is no description"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public String processDescriptionForEventOrDeadline() throws DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        if (splitStringLength() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            throw new DukeException(\"Mission parameters are null!\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        int start_index \u003d processCommand().length() + 1;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        int end_index \u003d raw_user_input.indexOf(\"/\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        return raw_user_input.substring(start_index, end_index);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Processes raw user input for Deadline Tasks, extracts the date of Task and converts it to a LocalDate object."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @return LocalDate object."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @throws DukeException when there is no description"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public LocalDate processDateForDeadline() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        int start_index \u003d raw_user_input.indexOf(\"/\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        int end_index \u003d raw_user_input.length();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        assert start_index \u003c\u003d end_index: \"No date provided for the mission.\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        String unconverted_date \u003d raw_user_input.substring(start_index, end_index).replace(\"/by \", \"\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        return LocalDate.parse(unconverted_date);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Processes raw user input for Event Tasks, extracts the date of Task and converts it to a LocalDate object."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public LocalDate processDateForEvent() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        int start_index \u003d raw_user_input.indexOf(\"/\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        int end_index \u003d raw_user_input.length();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        assert start_index \u003c\u003d end_index: \"No date provided for the mission.\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        String unconverted_date \u003d raw_user_input.substring(start_index, end_index).replace(\"/at \", \"\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        return LocalDate.parse(unconverted_date);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Returns the specified index for the respective command."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * This is only called when the command is \"done\" or \"delete\"."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @return Specified index in the form of an integer variable."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public int processIndex() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        String[] split_str \u003d raw_user_input.split(\" \");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        assert split_str.length !\u003d 1: \"Which mission have you completed?\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        return Integer.parseInt(split_str[1]) - 1;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Returns the keyword for the respective command."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * This is only called when the command is \"find\"."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @return Specified keyword in the form of a String variable."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public String processKeyword() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        String[] split_str \u003d raw_user_input.split(\" \");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        assert split_str.length !\u003d 1: \"Which mission are you trying to complete?\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        return split_str[1];"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nidorinas": 117
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Constructor for the Storage class."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @param filepath File path of the storage file."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Loads existing Tasks from the file storage to an ArrayList of Tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @return An ArrayList of Tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e(); // initialize a new ArrayList."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        File file \u003d new File(filepath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            String task \u003d sc.nextLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            String[] split_task \u003d task.split(\" - \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            // The tasks inside the file should be stored in a format of completion status - task type - description - date"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            // Or, completion status - task type - description, if it\u0027s a TODO Task"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            assert split_task.length \u003d\u003d 3 || split_task.length \u003d\u003d 4: \"Your memory is corrupted.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            if (split_task.length \u003d\u003d 3) { // TODO"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                Todo new_todo \u003d new Todo(split_task[2]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                if (split_task[0].contains(\"\\u2713\")) { // read the completion status"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    new_todo.updateIsCompleted(true);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                tasks.add(new_todo);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            else { // EVENT"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                LocalDate date \u003d LocalDate.parse(split_task[3]); // handle the date object"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                if (split_task[1].contains(\"E\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    Event new_event \u003d new Event(split_task[2], date);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    if (split_task[0].contains(\"\\u2713\")) { // read the completion status"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                        new_event.updateIsCompleted(true);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    tasks.add(new_event);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                else { // DEADLINE"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    Deadline new_deadline \u003d new Deadline(split_task[2], date);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    if (split_task[0].contains(\"\\u2713\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                        new_deadline.updateIsCompleted(true);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    tasks.add(new_deadline);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Updates the storage file with the new TaskList of Tasks. Only called after the user inputs \"bye!\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @param tasks Final TaskList of tasks which the user wants to maintain."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public void updateFile(TaskList tasks) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        // delete everything in the file first"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        File file \u003d new File(filepath);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            PrintWriter writer \u003d new PrintWriter(file);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        catch (FileNotFoundException exception) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            System.out.println(\"Whoops! You\u0027re not on my onboard memory!\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        // now we create a file writer and write one by one to the file"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            FileWriter writer \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.getTaskListSize(); i++) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                String exception_symbol \u003d tasks.get(i).getCompletionStatusAsString();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                String task_type \u003d tasks.get(i).getTaskType();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                String description \u003d tasks.get(i).getDescription();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                String date \u003d \"\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                String line \u003d exception_symbol + \" - [\" + task_type + \"] - \" + description;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                if (task_type.equals(\"E\") || task_type.equals(\"D\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    date \u003d tasks.get(i).getDateForWritingToFile();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    line \u003d exception_symbol + \" - [\" + task_type + \"] - \" + description + \" - \" + date;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                writer.write(line + \"\\n\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        catch (IOException exception) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            System.out.println(\"Whoops! You\u0027re not on my onboard memory!\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "}"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "nidorinas": 109
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    protected boolean isCompleted;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    protected String tasktype;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Constructor method for the Task class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @param description Description of the specific Task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @param tasktype Type of task: Can be a Todo, Event, or a Deadline."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public Task (String description, String tasktype) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        this.isCompleted \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        this.tasktype \u003d tasktype;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    // GETTER METHODS \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Getter method to return description of the Task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @return Description of Task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        assert this.description.length() !\u003d 0: \"Your mission parameters have been wiped!\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Getter method to return the type of Task (could be Todo, Event, or Deadline)."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @return A string which describes the type of task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        return this.tasktype;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Getter method to return completion status of the Task as a boolean variable."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @return Current completion status of the Task in the form of boolean variable."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public boolean getCompletionStatus() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        return this.isCompleted;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Getter method to return completion status of the Task as a tick/cross symbol with brackets."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @return Current completion status of the Task in the form of tick or cross symbols."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public String getCompletionStatusAsString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        String symbol \u003d this.isCompleted ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        return (\"[\" + symbol + \"]\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Getter method to return date of the Task. Will be overridden by the Event and Deadline classes."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @return Empty String"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Getter method to return date of the Task in a format suitable for writing to the \"memory\"/text file."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Will be overriden by the Event and Deadline classes."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @return Empty String"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public String getDateForWritingToFile() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    // UPDATE METHODS \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Updates the progress status of the Task."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @param update Current boolean status of whether or not the Task has been completed."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public void updateIsCompleted(boolean update) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        this.isCompleted \u003d update;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nidorinas": 80
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Default class constructor. Used when there is no file of existing saved Tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Used when there is a file of existing saved Tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @param tasks List of existing saved Tasks, loaded by the Storage class."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    // Getter methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Retrieves the size of the TaskList"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public int getTaskListSize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Gets the Task at the specified index."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @param index Index of the Task which you want."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @return The specified Task instance."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    // Adder methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Adds a new Todo task into the Task List."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @param description Description of the Todo task"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public void addTodo(String description) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        Todo new_todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        tasks.add(new_todo);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Adds a new Deadline task into the Task List."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @param description Description of the Deadline task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @param date Date object representing due date of the task"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public void addDeadline(String description, LocalDate date) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        Deadline new_deadline \u003d new Deadline(description, date);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        tasks.add(new_deadline);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Adds a new Event task into the Task List."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @param description Description of the Event task"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @param date Date object representing due date of the event task"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public void addEvent(String description, LocalDate date) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        Event new_event \u003d new Event(description, date);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        tasks.add(new_event);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    // Deletion methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Deletes the Task at the specified index in the TaskList."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @param index Index of the specific Task we want to delete."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    // Other methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Finds the Tasks whose descriptions contain the keyword provided and prints them out."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @param keyword Keyword which we have to search for among the existing tasks."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public String findTask(String keyword) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        String lst \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        for (int i \u003d 0; i \u003c getTaskListSize(); i++) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            if (get(i).getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                String completion_status \u003d get(i).getCompletionStatusAsString();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                String task_type \u003d get(i).getTaskType();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                String description \u003d get(i).getDescription();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                String line \u003d completion_status + \" | [\" + task_type + \"] | \" + description + \"\\n\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                if (task_type.contains(\"E\") || task_type.contains(\"D\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                    line \u003d completion_status + \" | [\" + task_type + \"] | \" + description + \" | \" + get(i).getDate() + \"\\n\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                line \u003d counter + \". \" + line;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                lst \u003d lst + line;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        return lst;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nidorinas": 108
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Constructor method for a Todo Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @param description Description of the Todo Task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        super(description, \"T\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nidorinas": 11
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Class constructor method."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public Ui () {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Reads one line of user input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public String scanInput() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        String user_input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        return user_input;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    // PRINT STATEMENTS: \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Prints the greeting statement for Duke."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public void printGreeting() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        System.out.println(\"Hello! I am a Pyramid 480 Medical class Operator. Nice to see you!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Prints the goodbye statement for Duke."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public String printGoodbye() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        return \"Don\u0027t forget to fill out a patient questionnaire. Your feedback will be invaluable!\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Prints the message for when the list is empty."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public String printEmptyListMessage() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        return \"Whoops! You have 0 neuromods. Neuromods can be obtained from defeating Typhon or by fabrication using the Neuromod blueprint.\\n\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Prints the error message for when the file cannot be found."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        System.out.println(\"Whoops! You\u0027re not on my onboard memory!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Prints out all the Tasks currently maintained in your TaskList."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @param tasks The TaskList of Tasks which you want to print."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public String printList(TaskList tasks) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        String lst \u003d \"Neuromods available: \\n\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getTaskListSize(); i++) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            String counter \u003d Integer.toString(i + 1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            String completion_symbol \u003d tasks.get(i).getCompletionStatusAsString();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            String task_type \u003d tasks.get(i).getTaskType();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            String task_description \u003d tasks.get(i).getDescription();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            String line \u003d counter + \". \" + completion_symbol + \" | [\" + task_type + \"] | \" + task_description + \"\\n\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            if (task_type.equals(\"E\") || task_type.equals(\"D\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                String task_date \u003d tasks.get(i).getDate();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                line \u003d counter + \". \" + completion_symbol + \" | [\" + task_type + \"] | \" + task_description + \" | \" + task_date + \"\\n\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            lst \u003d lst + line;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        return lst;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    // These have got to do with the adding/deleting of tasks from the list \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Prints when a Task has been added to the TaskList."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public String printAdd() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        return \"Scan complete, new psionic aptitude available.\\n\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Prints when a Task is deleted from the TaskList."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public String printDelete() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        return \"Neuromod installed. You have depleted 1 neuromod from your inventory:\\n\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Prints the number of Tasks in your current TaskList."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @param tasks Tasks in your TaskList."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public String printNumTasksInList(TaskList tasks) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        return \"You currently have \" + tasks.getTaskListSize() + \" neuromods in your inventory.\\n\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Prints the exception message."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @param exception Exception message."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public String printExceptionMessage(DukeException exception) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        return exception.getMessage() + \"\\n\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * Prints the message when a specified task has been marked as completed."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     * @param task The Task object which has been completed."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public String printMarkedAsDone(Task task) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        String lst \u003d \"Mission complete: \\n\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        String completion_symbol \u003d task.getCompletionStatusAsString();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        String task_type \u003d task.getTaskType();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        String task_description \u003d task.getDescription();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        String line \u003d completion_symbol + \" | [\" + task_type + \"] | \" + task_description + \"\\n\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        if (task_type.equals(\"E\") || task_type.equals(\"D\")) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            String task_date \u003d task.getDate();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            line \u003d completion_symbol + \" | [\" + task_type + \"] | \" + task_description + \" | \" + task_date + \"\\n\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        return lst + line;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nidorinas": 124
    }
  },
  {
    "path": "src/main/java/backup_duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "[✓] - [T] - borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "[✘] - [D] - return book - 2020-01-13"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "[✓] - [E] - project meeting - 2020-01-02"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "[✘] - [T] - join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "[✘] - [E] - dance party - 2020-01-01"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "[✘] - [D] - do cs3244 - 2019-12-29"
      }
    ],
    "authorContributionMap": {
      "nidorinas": 6
    }
  },
  {
    "path": "src/main/java/text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "nidorinas": 34
    }
  },
  {
    "path": "src/main/java/text-ui-test/text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "[T][✘] read book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "[D][✘] return book  (by: June 6th)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "[E][✘] project meeting  (at: Aug 6 2-4pm)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "[T][✘] join sports club"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "[T][✘] borrow book"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "[✓]  join sports club"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "1. [T][✘]  read book"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "2. [D][✘]  return book  (by: June 6th)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "3. [E][✘]  project meeting  (at: Aug 6 2-4pm)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "4. [T][✓]  join sports club"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "5. [T][✘]  borrow book"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "[E][✘] project meeting  (at: Aug 6 2-4pm)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "1. [T][✘]  read book"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "2. [D][✘]  return book  (by: June 6th)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "3. [T][✓]  join sports club"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "4. [T][✘]  borrow book"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "[D][✘] return book  (by: June 6th)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "1. [T][✘]  read book"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "2. [T][✓]  join sports club"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "3. [T][✘]  borrow book"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "nidorinas": 41
    }
  },
  {
    "path": "src/main/java/text-ui-test/text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "event project meeting /at Aug 6 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "nidorinas": 12
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "nidorinas": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "nidorinas": 19
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        assertEquals(2,2);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nidorinas": 9
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    void processDescriptionForTodo_emptyDescription_exceptionThrown() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        Parser parser \u003d new Parser(\"todo\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            parser.processDescriptionForTodo();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        });"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    void processDescriptionForTodo_normalDescription_processedCorrectly() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        Parser parser \u003d new Parser(\"todo cs2103 homework\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        assertEquals(\"cs2103 homework\", parser.processDescriptionForTodo());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        Parser parser_2 \u003d new Parser(\"todo a lot of homework, HELP! :(\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        assertEquals(\"a lot of homework, HELP! :(\", parser_2.processDescriptionForTodo());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        Parser parser_3 \u003d new Parser(\"todo just trying with random symbols, \\u2713\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        assertEquals(\"just trying with random symbols, \\u2713\", parser_3.processDescriptionForTodo());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    void processDescriptionForEventOrDeadline_emptyDescription_exceptionThrown() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        Parser parser \u003d new Parser(\"deadline\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "            parser.processDescriptionForEventOrDeadline();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        });"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    void processDescriptionForEventOrDeadline_normalDescription_processedCorrectly() throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        Parser parser \u003d new Parser(\"deadline cs2103 indiv project/by 2020-02-04\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        assertEquals(\"cs2103 indiv project\", parser.processDescriptionForEventOrDeadline());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        Parser parser_2 \u003d new Parser(\"deadline find valentine\u0027s day gift/by 2020-02-14\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        assertEquals(\"find valentine\u0027s day gift\", parser_2.processDescriptionForEventOrDeadline());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nidorinas"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        Parser parser_3 \u003d new Parser(\"deadline find present for friend\u0027s birthday/by 2020-10-11\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "        assertEquals(\"find present for friend\u0027s birthday\", parser_3.processDescriptionForEventOrDeadline());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nidorinas"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nidorinas": 49
    }
  }
]
