[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "`A-TextUiTesting` | [Text Duke.UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for Duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "Deunitato": 3,
      "-": 36
    }
  },
  {
    "path": "Updates.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Here is the list of updates written for each commit:"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "20/1/20 Level 1-1:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Created:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Your basic level 1 echo"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Added personality"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Added Dictionary for commands(Hash)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Created Commands.CommandHub"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Created Invoker to invoke the commands"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Used interface to define usercommands"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "21/1/20"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Level 2"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Created:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Your basic level 2 code"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Added list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Made task as objects"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Commandhub now returns add as default"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Added list as a valid command to commandhub"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Database.MyList:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Added additem function"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Changed strings to tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Print list made static"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Level 3"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Created:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Done command"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Edited commandhub to notice done events"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Set tasks to have done ticks"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Changes:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Commandhub:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "notice done events now"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Mylist:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Added markdone function"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Added delete function (Incomplete)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Added push function (Incomplete)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Level 4"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Added events, todo, deadline undertask"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Changes:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Commands.CommandHub:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Allow seperation of commands"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Add_Commands:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Added types"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Level 5"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Created Exceptions.DukeException"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Changes:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Main:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Added catching of exception"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "CommandHUb:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Throw Exception for empty todo and invalid command"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Throws Exception for empty or missing /by or /at command"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Possible: Check for missing desc for event and deadline commands and non integer for delete and done"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Level 6"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Added Delete function"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "26/1/20"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Level 7:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Added load command"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Added botmemory"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Now bot has init"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Level 7-1:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Fixed markdone"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "May have issues with formatting"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Git Note:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Bot does not check commit tags."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Level 8-1:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Added dateTime class - Returns date/time objects"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Added dateTime handler -handles parsing of data and time, able to print and return proper datetime objects.. returns null if not correct"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Changes:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Changed event/deadline tasks strings to localdatetime class objects"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Change event/deadline tostring method to print localdatetime objects"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Issues:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Memory does not sync"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Updates:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "- Possible for duke to accept non time/date sentences? (Not implemented)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "2/2/20"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Level 8-2:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Merged master with branch 8 and 7"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Issues"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Memory does not print properly - editied parsedesc"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Does not accepts date with no time (memory  save error"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     -Error messgae:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "\t       Exception in thread \"main\" java.time.format.DateTimeParseException: Text \u002720 Mar 2040\u0027 could not be parsed at index 11"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "\tat java.base/java.time.format.DateTimeFormatter.parseResolved0(DateTimeFormatter.java:2046)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "\tat java.base/java.time.format.DateTimeFormatter.parse(DateTimeFormatter.java:1948)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "\tat java.base/java.time.LocalDateTime.parse(LocalDateTime.java:492)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "\tat Resources.DateTimeHandler.revertDateTime(Resources.DateTimeHandler.java:72)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "\tat Bot_Memory.parseDesc(Bot_Memory.java:107)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "\tat Bot_Memory.saveMemory(Bot_Memory.java:65)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "\tat Bye_Command.action(Bye_Command.java:15)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "\tat Commands.CommandInvoker.Invoke(Commands.CommandInvoker.java:17)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "\tat Duke.Duke.main(Duke.Duke.java:12)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     - Fixed by return localdate due to function not acceepting non time (LocalDateTime)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "\t - Fixed by accepting single digit numbers"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "\t"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Datetime does not recognise if user type in single digit dates (3/03/2020)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "3/2/20"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "A-More OOP"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Added Duke.UI class"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "A-JavaDocs"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Added Java Docs"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "A-Packages"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Sorted files based on packages"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Issues:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Does not update file if list is empty "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    - Edited the savememory function to append \"wow much empty\" to file if lsit is empty"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "\t- Edited the load memory to ignore \"wow much emptiness\""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "\t "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "\t"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Deunitato": 141
    }
  },
  {
    "path": "src/main/java/Commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "package Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Database.MyList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Duke.UI;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Resources.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " * Commands.AddCommand is a Commands.Command that handles the adding of items"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " * into the list when user calls."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "public class AddCommand extends UserCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    private static String desc;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    private static String type;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    private Task t;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Instantiates a new Add command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    AddCommand() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        super(2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Instantiates a new Add command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param type the type"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param desc the desc"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    AddCommand(String type, String desc){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        super(2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public void reply(){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        System.out.println(UI.getReply(\"add\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public boolean action() throws DukeException, DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        if(type.equals(\"todo\")){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            t \u003d new ToDos(desc);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        else if(type.equals(\"event\")){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            t\u003d new Event(desc);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            t \u003d new Deadline(desc);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        MyList.addItem(t);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        MyList.printCount();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Deunitato": 59
    }
  },
  {
    "path": "src/main/java/Commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "package Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Database.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Duke.UI;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " * The class Commands.ByeCommand exit the bot swiftly by saving memory and stopping Invoker."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "public class ByeCommand extends UserCommand{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Instantiates a new Bye command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    ByeCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     super(1);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public void reply() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        System.out.println(UI.getReply(\"bye\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public boolean action() throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        Storage.saveMemory();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        CommandInvoker.stop();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Deunitato": 32
    }
  },
  {
    "path": "src/main/java/Commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "package Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " * An interface skeleton for all UserCommands"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Replies User when command is executed"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @throws DukeException the duke exception"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public void reply() throws DukeException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Executes the Action of the Commands.Command"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @return the boolean"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @throws DukeException the duke exception"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public boolean action() throws DukeException, DukeException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Returns the ID of the command"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @return the id"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public int getID();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Deunitato": 30
    }
  },
  {
    "path": "src/main/java/Commands/CommandHub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "package Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Duke.UI;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " * Commands.CommandHub class is for creation and initialisation of all commands."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " * Inclusive of setting up command specifics"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " * ie. setting up task to be removed"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " * \"Parser\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "public class CommandHub {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    private static HashMap\u003cString,UserCommand\u003e commandList \u003d new HashMap();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Instantiates a new Commands.Command hub."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    CommandHub(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    };"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Initialises the basic Commands."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public static void initCreator(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        commandList.put(\"null\",null);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        commandList.put(\"bye\",new ByeCommand());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        commandList.put(\"list\",new ListCommand());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Parses the Commands.UserCommand"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param userInput the user input"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @return String Array parsedCommand"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    private static String[] parseString(String userInput){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        userInput.toLowerCase();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        String[] parsedCommand \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        return parsedCommand;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Fetch user command."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param userInput the user input"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @return the user command"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @throws DukeException the duke exception"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public static UserCommand FetchCommand(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        String parsedCommand[] \u003d parseString(userInput);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        String ID \u003d parsedCommand[0];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        String desc \u003d \"null\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        if(parsedCommand.length\u003e1) {//check if exist second line"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            desc \u003d parsedCommand[1];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        if(commandList.containsKey(ID)) { //gets generic commands"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            return commandList.get(ID);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        else if(ID.contains(\"done\")){ //done command"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            if(desc.equals(\"null\")||desc.equals(\"\")){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "                throw new DukeException(UI.getReply(\"doneFieldEmpty\"));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            return new DoneCommand(Integer.parseInt(desc));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        else if(ID.contains(\"todo\")||ID.contains(\"deadline\")||ID.contains(\"event\")){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            if(desc.equals(\"null\")){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "                throw new DukeException(\"BAKA! Your not suppose to leave \"+ID+\" field empty!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            return new AddCommand(ID, desc);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        else if(ID.contains(\"delete\")){"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            if(desc.equals(\"null\")||desc.equals(\"\")){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "                throw new DukeException(UI.getReply(\"deleteFieldEmpty\"));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            return new DeleteCommand(Integer.parseInt(desc));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        else if(ID.contains(\"find\")){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            return new FindCommand(desc);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            throw new DukeException(UI.getReply(\"wrongCommand\"));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }}"
      }
    ],
    "authorContributionMap": {
      "Deunitato": 85
    }
  },
  {
    "path": "src/main/java/Commands/CommandInvoker.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "package Commands;/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "*  \"Duke.UI\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "* */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " * The type Commands.Command invoker."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "public class CommandInvoker {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    private static boolean isProgramEnd \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Instantiates a new Commands.Command invoker."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public CommandInvoker(){};"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Invoke userCommand"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param c the userCommand"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    CommandInvoker(UserCommand c){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        Invoke(c);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Invoke the Usercommand."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param c the Commands.UserCommand"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public static void Invoke(UserCommand c){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            c.action();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            c.reply();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        catch(DukeException e){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Stop the program. Sets the endProgram as true"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public static void stop(){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        isProgramEnd \u003d true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Check if program is quit"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @return the boolean"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public static boolean checkOff(){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        return isProgramEnd;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Deunitato": 61
    }
  },
  {
    "path": "src/main/java/Commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "package Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Database.MyList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Duke.UI;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " * The class Commands.DeleteCommand handles the deletion of tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "public class DeleteCommand extends UserCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    private static int id;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Instantiates a new Delete command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param id the id"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    DeleteCommand(int id){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        super(5);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        setDel(id);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Set the id of tasks"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param ID the id"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public static void setDel(int ID){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        id \u003d ID;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public void reply(){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        System.out.println(UI.getReply(\"delete\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public boolean action() throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        MyList.deleteItem(id);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        MyList.printCount();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Deunitato": 47
    }
  },
  {
    "path": "src/main/java/Commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "package Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Database.MyList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Duke.UI;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " * The class Commands.DoneCommand handles done commands when user has completed the task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "public class DoneCommand extends UserCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * The Id."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    static int id\u003d0;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Instantiates a new Done command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param id the id"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    DoneCommand(int id) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        super(4);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        setDone(id);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Set done."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param ID the id"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public static void setDone(int ID){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        id \u003d ID;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public void reply(){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        System.out.println(UI.getReply(\"markedDone\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        System.out.println(\"Marking item \" + id +\" as done\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public boolean action() throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        MyList.markDone(id);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Deunitato": 45
    }
  },
  {
    "path": "src/main/java/Commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "package Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Database.MyList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Resources.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " * FindCommand command handles when user wants to find something in list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "public class FindCommand extends UserCommand{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    private static ArrayList\u003cTask\u003e localList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    private static String keyword;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Instantiates a new User command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Set the ID"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param str the keyword"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    FindCommand(String str){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        super(6);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        keyword \u003d str;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Set keyword."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param str the str"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public static void setKeyword(String str){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        keyword \u003d str;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public boolean action() throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        System.out.println(MyList.find(keyword));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Deunitato": 40
    }
  },
  {
    "path": "src/main/java/Commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "package Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Database.MyList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " * The command handles when user calls list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "public class ListCommand extends UserCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Instantiates a new List command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    ListCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        super(3);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public void reply(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        MyList.printList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Deunitato": 20
    }
  },
  {
    "path": "src/main/java/Commands/LoadCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "package Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Database.MyList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " * Loads the memory back into list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "public class LoadCommand extends AddCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    private static boolean isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    private static int count \u003d 0;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Instantiates a new Load command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param type    the type of task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param setDone the set done status of tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param desc    the description of the task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public LoadCommand(String type, boolean setDone, String desc){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        super(type, desc);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        this.isDone \u003d setDone;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public boolean action() throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        super.action();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        count++;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        if(isDone){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            MyList.markDone(count);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Deunitato": 35
    }
  },
  {
    "path": "src/main/java/Commands/UserCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "package Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " * The class Commands.UserCommand acts as a parent class for commands"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "public class UserCommand implements Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    private int ID \u003d 0;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Instantiates a new User command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Set the ID"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param id the id"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    UserCommand(int id){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        ID \u003d id;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    };"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public void reply() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        System.out.println(\"This is some crazy event\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public boolean action() throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public int getID() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        return ID;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Deunitato": 37
    }
  },
  {
    "path": "src/main/java/Database/MyList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "package Database;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Duke.UI;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Resources.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " * Database.MyList handles everything to do with the list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "public class MyList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    private static ArrayList\u003cTask\u003e DaList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Add tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param t the t"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public static void addItem(Task t){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        System.out.println(\"added: \" + t);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        DaList.add(t);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Delete tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param ID the id"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @throws DukeException the duke exception"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public static void deleteItem(int ID)throws DukeException{"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        ID \u003d ID-1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        if(ID\u003e\u003dDaList.size()|| ID\u003c0){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            throw new DukeException(UI.getReply(\"deleteEmpty\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        System.out.println(\"Deleted: \" + DaList.get(ID));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        DaList.remove(ID);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Prints list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public static void printList(){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        if(DaList.size()\u003d\u003d0){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            System.out.println(UI.getReply(\"emptyList\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        for(Task t : DaList){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            System.out.println(count+ \". \"+ t);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Prints number of items in tasks."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public static void printCount(){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        System.out.println(\"Now you have \"+ DaList.size() + \" things in your bloody list..\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Mark list item as done."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param ID the id"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @throws DukeException the duke exception"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public static void markDone(int ID) throws DukeException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        ID \u003d ID-1;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        if(ID\u003e\u003dDaList.size()|| ID\u003c0){"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            throw new DukeException(UI.getReply(\"imaginary\"));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        DaList.get(ID).markDone();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        System.out.println(DaList.get(ID));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Get list array list."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @return the list of objects"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public static ArrayList getList(){"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        return DaList;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Find existing objects and prints"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param keyword takes in keyword"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @return String stating number of items find"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public static String find(String keyword) throws DukeException{"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        ArrayList\u003cTask\u003e localList \u003d populateFindList(keyword);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        boolean isFirst \u003d true;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        for(Task t: localList){"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            if(isFirst){"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "                System.out.println(\"Found these tasks: \");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "                isFirst \u003d false;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            System.out.println(count+ \". \"+ t);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        return \"Found in total of \" + localList.size() + \" items\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    private static ArrayList populateFindList(String str){"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        ArrayList\u003cTask\u003e localList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        for(Task t: DaList){"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            if(t.toString().contains(str)){"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "                localList.add(t);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        return localList;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Deunitato": 122
    }
  },
  {
    "path": "src/main/java/Database/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "package Database; /**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " * The class Database.Storage handles the memory segment of the Bot"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Commands.CommandInvoker;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Commands.LoadCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Duke.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Exceptions.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Resources.DateTimeHandler;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Resources.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    private static File file;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Initialises memory"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public static void memory_Init(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            file \u003d new File(\"memory.txt\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            if (file.createNewFile()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "                System.out.println(\"Init new memory\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            else{"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "                System.out.println(\"\\nPrevious data found, Loading memory...\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "                loadMemory();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        catch (IOException e){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Overwrites the current data memory"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param line the String to overwrite"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    private static void overwrite(String line){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(file,false));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            bw.write(line);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            bw.newLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            bw.flush();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            bw.close();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        catch (IOException e){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Appends to the current data memory in text file"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param line the String to append"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    private static void append(String line){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(file,true));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            bw.write(line);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            bw.newLine();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            bw.flush();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            bw.close();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        catch (IOException e){"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Saves the memory on close."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @throws DukeException the duke exception"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public static void saveMemory() throws DukeException{"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        ArrayList\u003cTask\u003e mylist \u003d MyList.getList();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        boolean first \u003d true;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        if(mylist.size()\u003d\u003d0){"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            overwrite(\"Wow..much emptiness\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        for(Task t: mylist){"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            String splitted[] \u003d t.toString().split(\" \", 3);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            String type \u003d parseType(splitted[0]);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            String isDone \u003d parseDone(splitted[1]);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            String desc \u003d parseDesc(splitted[2]);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            String buildLine \u003d type+ \"~\" + isDone + \"~\" + desc;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            if(first){"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "                first \u003d false;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "                overwrite(buildLine);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            append(buildLine);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Parses the type of task."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param s A String containing the type."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @return a String containing the type parsed for memory storage"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @throws DukeException the duke exception"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    private static String parseType(String s) throws DukeException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        if(s.equals(\"[D]\")){"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            return \"deadline\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        else if(s.equals(\"[E]\")){"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            return \"event\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        else if(s.equals(\"[T]\")){"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            return \"todo\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            throw new DukeException(UI.getReply(\"memParsedError\"));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Parses if the task is completed."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param s A String containing the symbol."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @return a String containing the boolean parsed for memory storage"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    private static String parseDone(String s){"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        if(s.equals(\"[\\u2713]\")){"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            return \"true\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            return \"false\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Parses the Description of the event"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param str A String containing the description."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @return a String containing the description for memory storage"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    private static String parseDesc(String str){"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        if(!str.contains(\"(\")){"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            return str;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        String typeSpecific \u003d str.substring(str.indexOf(\"(\")+1,str.indexOf(\":\"));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        String desc \u003d str.substring(0,str.indexOf(\"(\") -1 );"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        String datedesc \u003d str.substring(str.indexOf(\":\")+2,str.indexOf(\")\"));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        return  desc + \"/\"+typeSpecific+ \" \"+ DateTimeHandler.revertDateTime(datedesc);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Loads memory from available memory"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    private static void loadMemory(){"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        try (BufferedReader br \u003d new BufferedReader(new FileReader(file))) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "               if(line.equals(\"Wow..much emptiness\")){"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "                   return;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "               }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "                boolean markdone;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "                String splitted[] \u003d line.split(\"~\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "                if(splitted[1].equals(\"false\")){"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "                    markdone\u003d false;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "                }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "                else{"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "                    markdone \u003d true;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "                }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "                CommandInvoker.Invoke(new LoadCommand(splitted[0],markdone,splitted[2]));"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Deunitato": 182
    }
  },
  {
    "path": "src/main/java/Duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Commands.CommandHub;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Commands.CommandInvoker;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Commands.UserCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * The entry point of application."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param args the input arguments"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        DukeInit.initBot();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        CommandInvoker invoker \u003d new CommandInvoker();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        while(!CommandInvoker.checkOff()){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            String userInput \u003d getUserInput();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "                UserCommand c \u003d CommandHub.FetchCommand(userInput);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "                invoker.Invoke(c);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            catch(DukeException e){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    private static String getUserInput(){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        System.out.print(\"\u003e\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Deunitato": 41,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Duke/DukeInit.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Commands.CommandHub;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Database.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " * Initialises the bot"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "public class DukeInit {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Initalises bot."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public static void initBot(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        System.out.println(\"I am a very angry bot and I hate you\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        CommandHub.initCreator(); //init commands"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        Storage.memory_Init(); //init memory"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        System.out.println(\"Now what you want?\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Deunitato": 26
    }
  },
  {
    "path": "src/main/java/Duke/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " * Class Duke.UI handles all Duke.UI interaction with user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " * Includes normal replies and exception replies"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Returns a reply string according to id"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param id the str"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public static String getReply(String id){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        switch(id){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            return \"Erasing your tracks are you?\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        case \"emptyList\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            return \"Eto..(Twindle thumbs).. You have nothing inside your list\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            return \"Bye. Have a nice day lol you shit...\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        case \"add\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            return \"Sighhssss...I am your slave again?\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        case \"markedDone\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            return \"Okay whatever.. so you have completed this item.. so what?\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            return getErrorMsg(id);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Returns a error string according to id"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param id the str"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    private static String getErrorMsg(String id){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        switch(id){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        case \"imaginary\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            return \"You want to finish something imaginary??? Please.. are you stupid?\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        case \"emptyList\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            return \"Eto..(Twindle thumbs).. You have nothing inside your list\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        case \"deleteEmpty\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            return \"Lol.. how about you delete yourself first!\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        case \"doneAlready\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            return \"Its done already!\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        case \"memParsedError\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            return \"Invalid file parsed error! Please delete the memory file..\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        case \"doneFieldEmpty\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            return \"Done with what? Your life is it?\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        case \"wrongCommand\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            return \"Hello? You stupid? Wrong command lah please!\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        case \"deleteFieldEmpty\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            return \"Delete yourself!\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        case \"wrongDate\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            return \"Please input a proper date/time!\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        case \"wrongDateFormat\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            return \"Invalid date/time format\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            return \"What you want?\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Deunitato": 64
    }
  },
  {
    "path": "src/main/java/Exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " * The type Duke.Duke exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Instantiates a new Duke.Duke exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param message the message"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public DukeException(String message){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Deunitato": 15
    }
  },
  {
    "path": "src/main/java/Resources/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "package Resources; /**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " * The class Resources.DateTime creates LocalDateTime objects for functions"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    private static LocalDateTime date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Prints the time now."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public static void printNow() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        date \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        System.out.println(\"Today is \" + date);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Gets date time local date time."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param date the date"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param time the time"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @return the local date time"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public static LocalDateTime getDateTime(String date, String time){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            String[] dataArr \u003d date.split(\"/\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            int year \u003d Integer.parseInt(dataArr[2]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            int month \u003d Integer.parseInt(dataArr[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            int day \u003d Integer.parseInt(dataArr[0]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            int timeConverted \u003d Integer.parseInt(time);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            int hour \u003d timeConverted/100;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            int mins \u003d timeConverted % 100;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            return LocalDateTime.of(year,month,day,hour,mins);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Gets date local date time."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param date the date"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @return the local date time"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public static LocalDateTime getDate(String date){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            String[] dataArr \u003d date.split(\"/\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            int year \u003d Integer.parseInt(dataArr[2]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            int month \u003d Integer.parseInt(dataArr[1]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            int day \u003d Integer.parseInt(dataArr[0]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            return LocalDateTime.of(year,month,day,0,0,0,0);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Gets time local date time."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param time the time"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @return the local date time"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public static LocalDateTime getTime(String time){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        String[] dataArr \u003d time.split(\"/\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        int timeConverted \u003d Integer.parseInt(time);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        int hour \u003d timeConverted/100;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        int mins \u003d timeConverted % 100;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        int year \u003d LocalDateTime.now().getYear();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        int month \u003d LocalDateTime.now().getMonthValue();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        int day \u003d LocalDateTime.now().getDayOfMonth();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        return LocalDateTime.of(year,month,day,hour,mins);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Deunitato": 71
    }
  },
  {
    "path": "src/main/java/Resources/DateTimeHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "package Resources; /**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " * The class Resources.DateTimeHandler acts as a wrapper class for functions to getLocalDate time using only"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " * descriptions"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " * It also handles anything regarding datetime"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Duke.UI;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Exceptions.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "public class DateTimeHandler{"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Gets local date time."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param desc the desc"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @return the local date time"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @throws DukeException the duke exception"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public static LocalDateTime getLocalDateTime(String desc) throws DukeException{"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            if (containsTime(desc)) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "                String splitted[] \u003d desc.split(\" \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "                return DateTime.getDateTime(splitted[0], splitted[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            } else if (isValidDate(desc)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "                return DateTime.getDate(desc);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            } else if (isValidTime(desc)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "                return DateTime.getTime(desc);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "                throw new DukeException(UI.getReply(\"wrongDate\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        catch(DateTimeException e){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            throw new DukeException(UI.getReply(\"wrongDateFormat\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Prints local date time string."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param dateTime the date time"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public static String printsLocalDateTime(LocalDateTime dateTime){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        if(dateTime \u003d\u003d null){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        else if(dateTime.getHour() \u003d\u003d 0 \u0026\u0026 dateTime.getMinute() \u003d\u003d 0 \u0026\u0026dateTime.getNano() \u003d\u003d 0){ //only date"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            return printDate(dateTime);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            return printDateAndTime(dateTime);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Checks if given string contains time format"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param desc description"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @return boolean value if description contains time syntax"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    private static boolean containsTime(String desc){"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        String pattern \u003d \"[0-9]{2}/[0-9]{2}/[0-9]{4} [0-9]{4}\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        String patternEng \u003d \"[0-9]{2} [a-zA-Z]{3} [0-9]{4} [0-9]{2}:[0-9]{2}[apmAPM]{2}\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        String patternEng2 \u003d \"[0-9]{1} [a-zA-Z]{3} [0-9]{4} [0-9]{2}:[0-9]{2}[apmAPM]{2}\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        return Pattern.matches(pattern, desc)||Pattern.matches(patternEng, desc) || Pattern.matches(patternEng2, desc);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Checks if given string is valid date"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param date date in string"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @return boolean value if string is a valid date"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    private static boolean isValidDate(String date){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        String pattern \u003d \"[0-9]{2}/[0-9]{2}/[0-9]{4}\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        return Pattern.matches(pattern, date);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Checks if given string is valid time"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param time time in string"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @return boolean value if string is a valid time"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    private static boolean isValidTime(String time){"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        String pattern \u003d \"[0-9]{4}\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        return Pattern.matches(pattern, time);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Reformats the dateTime"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param dateTime"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @return String of the dateTime in correct format"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    private static String printDateAndTime(LocalDateTime dateTime){"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy hh:mma\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        return dateTime.format(formatter);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    private static String printDate(LocalDateTime dateTime){"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        return dateTime.format(formatter);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    private static String printTime(LocalDateTime dateTime){"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"hh:mm a\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        return dateTime.format(formatter);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Reverts date time string for easier parse to memory."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param dateTime the date time"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @return the string for memory storage"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public static String revertDateTime(String dateTime){"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy hh:mma\");;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        DateTimeFormatter formatterSave \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy hhmm\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        if(!containsTime(dateTime)) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            formatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            formatterSave \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            return LocalDate.parse(dateTime, formatter).format(formatterSave);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        return LocalDateTime.parse(dateTime, formatter).format(formatterSave);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Deunitato": 134
    }
  },
  {
    "path": "src/main/java/Resources/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "package Resources;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " * Deadlines is a type of task that accepts /by statements only"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    private LocalDateTime deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Instantiates a new Resources.Deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param description the description"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @throws DukeException the duke exception"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public Deadline(String description) throws DukeException{"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        super(\"default\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            String[] parsed \u003d getParse(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            deadline \u003d DateTimeHandler.getLocalDateTime(parsed[1]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            super.resetDesc(parsed[0]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Parses the command for better execution"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param desc the description"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @throws DukeException the duke exception"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @return A string array containing the parsed split desc and time"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    private String[] getParse(String desc) throws DukeException{"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        if(!desc.contains(\"/by \")){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            throw new DukeException(\"Hello? Missing your /by command!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        String[] parsed\u003d desc.split(\"/by \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        return parsed;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        return \"[D] \" +super.toString() + \" (by: \" + DateTimeHandler.printsLocalDateTime(deadline)+ \")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Deunitato": 47
    }
  },
  {
    "path": "src/main/java/Resources/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "package Resources;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " * Resources.Event is a type of task that accepts /at statements only"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    private LocalDateTime endDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Instantiates a new Resources.Event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param description the description"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @throws DukeException the duke exception"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public Event(String description)throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        super(\"default\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            String[] parsed \u003d getParse(description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            endDate \u003d DateTimeHandler.getLocalDateTime(parsed[1]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            super.resetDesc(parsed[0]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Parses the command for better execution"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param desc the description"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @throws DukeException the duke exception"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @return A string array containing the parsed split desc and time"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    private String[] getParse(String desc) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        if(!desc.contains(\"/at \")){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            throw new DukeException(\"Hello? Missing your /at command!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        String[] parsed\u003d desc.split(\"/at \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        return parsed;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        return \"[E] \" +super.toString() + \" (at: \" + DateTimeHandler.printsLocalDateTime(endDate)+ \")\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Deunitato": 51
    }
  },
  {
    "path": "src/main/java/Resources/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "package Resources;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Duke.UI;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import Exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " * The type Resources.Task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    private String Description \u003d \"\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    protected boolean isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Instantiates a new Resources.Task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param description the description"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        this.Description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Reset desc."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param desc the desc"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    protected void resetDesc(String desc){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        Description \u003d desc;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Mark done."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @throws DukeException the duke exception"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public void markDone() throws DukeException{"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        if(isDone){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "            throw new DukeException(UI.getReply(\"doneAlready\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Gets status icon."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @return the status icon"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        return \"[\"+getStatusIcon() +\"] \" +Description;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Deunitato": 57
    }
  },
  {
    "path": "src/main/java/Resources/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "package Resources;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " * ToDo is a type of task that accepts /at statements only"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * Instantiates a new To dos."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     * @param description the description"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public ToDos(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        return \"[T] \" + super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Deunitato": 20
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "        assertEquals(2,2);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Deunitato": 13
    }
  },
  {
    "path": "text-ui-test/ACTUAL.TXT",
    "fileType": "TXT",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Deunitato"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "I am a very angry bot and I hate you"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Init new memory"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "Now what you want?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "\u003eLOL.. You have nothing inside your list!"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "\u003e"
      }
    ],
    "authorContributionMap": {
      "Deunitato": 12
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "hi"
      }
    ],
    "authorContributionMap": {
      "Deunitato": 1
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "todo hello"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "event cancer /at I hate this project"
      }
    ],
    "authorContributionMap": {
      "Deunitato": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ")"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "java -cp ..\\bin Duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Deunitato": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "java -classpath ../bin Duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Deunitato"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Deunitato"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Deunitato": 34
    }
  }
]
