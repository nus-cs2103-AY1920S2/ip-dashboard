[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine:5.1.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    testCompileOnly \u0027junit:junit:4.12\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    testRuntimeOnly \u0027org.junit.vintage:junit-vintage-engine:5.1.0\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    implementation \u0027junit:junit:4.12\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    implementation \u0027junit:junit:4.12\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "test {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dargohzy": 18,
      "-": 20
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " * Main class file for \u0027Duke\u0027 program for the individual project in CS2103T, AY19/20 Semester 2."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " * Duke serves as a reminder/scheduler for tasks that the user has to complete."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " * @author Dargo"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    private final static String filepath \u003d"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            \"..\\\\..\\\\..\\\\duke.txt\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    public static void main(String[] args) throws DukeException{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        DukeUserInterface UI \u003d new DukeUserInterface(filepath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        UI.runDuke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dargohzy": 16,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " * DukeException occurs when commands pertaining to the Duke program are invalid."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    private String error;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    private final static String LINE \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    private final static String INVALID_COMMAND \u003d LINE + \"\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            + \"     :(  OOPS! I\u0027m sorry, but I don\u0027t know what that means :(\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                + \"\\n\" + LINE;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    private final static String INVALID_DATE_TIME \u003d  LINE + \"\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            + \"     :(  OOPS! Please input deadline DATE and TIME in the format: \u003ctask\u003e /by DD/MM/YYYY 2359.\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                + \"\\n\" + LINE;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        this.error \u003d error;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        String output \u003d LINE + \"\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        if (this.error.equals(\"todo\") || this.error.equals(\"deadline\") || this.error.equals(\"event\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            output +\u003d \"     :(  OOPS! The description of a \" + this.error + \" cannot be empty.\" + \"\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            output +\u003d LINE;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        } else if (this.error.equals(\"dateTime\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            output \u003d INVALID_DATE_TIME;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            output \u003d INVALID_COMMAND;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dargohzy": 40
    }
  },
  {
    "path": "src/main/java/duke/DukeUserInterface.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "import duke.command.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " * Driver class for the Duke program."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " * All classes needed for the execution of Duke comes from the DukeUserInterface."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " * Also reads in user input and determines when Duke terminates."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " * @author Dargo"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "public class DukeUserInterface {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    private static final String LINE \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    private static final String OPENING_GREETING \u003d \"     Hello! I\u0027m Duke\\n\" + \"     What can I do for you?\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    private static final String FAREWELL_CLOSING \u003d LINE + \"\\n\" + \"     Bye. Hope to see you again soon!\" + \"\\n\" + LINE;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    private InputStreamReader stringReader;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    private BufferedReader commandReader;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    private Storage internalStorage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    private Parser commandParser;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    private TaskList listOfTasks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    private static final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * Serves as the driver class for the Duke program."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * Contains the data, the parser, and reads in inputs from the user."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * @param filePath Filepath of saved data in Duke"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * @throws DukeException If commands given in command line are not valid"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    public DukeUserInterface(String filePath) throws DukeException{"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        System.out.println(\"Hello from\\n\" + LOGO);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        System.out.println(LINE + \"\\n\" + OPENING_GREETING + \"\\n\" + LINE);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        this.stringReader \u003d new InputStreamReader(System.in);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        this.commandReader \u003d new BufferedReader(this.stringReader);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        this.internalStorage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        this.listOfTasks \u003d new TaskList(this.internalStorage.load());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        this.commandParser \u003d new Parser(this.listOfTasks);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     *  Runs the Duke program."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     *  Reads in input Strings from the user."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     *  Terminates the program when \"bye\" command is given."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    public void runDuke() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            String input \u003d commandReader.readLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                commandParser.executeCommand(input);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                input \u003d commandReader.readLine();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            this.internalStorage.save(this.listOfTasks.getData());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            System.out.println(FAREWELL_CLOSING);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        } catch(Exception e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dargohzy": 75
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "import java.io.ObjectInputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " * Serves as the class that helps in saving Duke program data into the disk as well as load"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " * data back into the program from the disk when Duke starts up again."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " * @author Dargo"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    // filepath of the stored data"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * Loads data into Duke program at startup."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * Saves data into the disk when Duke program terminates."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * @param filepath Filepath of saved data in Duke."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        this.filePath \u003d filepath;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * Loads previously added tasks from last usage when Duke program starts."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * @return ArrayList\u003cTask\u003e\u003c/Task\u003e of previously added tasks."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        File file \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        ArrayList\u003cTask\u003e storedData \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            if (file.length() !\u003d 0) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                FileInputStream fileIn \u003d new FileInputStream(this.filePath);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                ObjectInputStream objectIn \u003d new ObjectInputStream(fileIn);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                storedData \u003d (ArrayList\u003cTask\u003e) objectIn.readObject();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        return storedData;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * Saves added tasks into the disk when Duke program terminates."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * @param savedData ArrayList\u003cTask\u003e\u003c/Task\u003e of current state of added tasks."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e savedData) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            FileOutputStream fileOut \u003d new FileOutputStream(this.filePath);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            ObjectOutputStream objectOut \u003d new ObjectOutputStream(fileOut);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            objectOut.writeObject(savedData);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            objectOut.close();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dargohzy": 71
    }
  },
  {
    "path": "src/main/java/duke/command/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " * Acts as the parser for Duke program commands."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " * Makes sense of user commands and helps to execute it in Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " * @author Dargo"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    private TaskList listOfTasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * Identifies user input to pinpoint specific command given."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * Executes the command in the TaskList object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * @param listOfTasks TaskList of current Duke program"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    public Parser(TaskList listOfTasks) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        this.listOfTasks \u003d listOfTasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * Executes the command on TaskList based on user input given."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * @param inputCommand String command given by user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    public void executeCommand(String inputCommand) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        String[] commandSplit \u003d inputCommand.split(\" \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        String basicCommand \u003d commandSplit[0];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        if (basicCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            // List command lists out all tasks"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            this.listOfTasks.list();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        } else if (basicCommand.equals(\"done\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            // Checks the task as \u0027Done\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            this.listOfTasks.done(commandSplit[1]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        } else if (basicCommand.equals(\"todo\") || basicCommand.equals(\"deadline\") || basicCommand.equals(\"event\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            String type \u003d commandSplit[0];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                // Test string to see if exception should be thrown"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                if (commandSplit.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                    throw new DukeException(type);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                // Adds the task into the list of tasks"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                this.listOfTasks.add(type, inputCommand);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            } catch (DukeException dukeException) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                System.out.println(dukeException);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        } else if (basicCommand.equals(\"delete\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            // Deletes the task"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            this.listOfTasks.delete(commandSplit[1]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        } else if (basicCommand.equals(\"find\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            // Finds task with keywords."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            this.listOfTasks.find(commandSplit[1]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            System.out.println(new DukeException(\"error\"));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dargohzy": 75
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " * Deadline is a subtype of Task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " * An event is meant to be for when a task should be done before a certain date."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " * Eg. Return book 19/01/2020"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " * @author Dargo"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    private LocalDate deadlineDate;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    private LocalTime deadlineTime;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * Deadline subtype of Task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * @param type Type of task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * @param task Input command for the task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * @throws DukeException When input command is not valid."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    public Deadline(String type, String task) throws DukeException{"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        super(type, task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            String[] deadline \u003d task.substring(task.indexOf(\"/\")).split(\" \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            if (deadline.length !\u003d 3) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                throw new DukeException(\"dateTime\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            String deadlineDateString \u003d deadline[1];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            String deadlineTimeString \u003d deadline[2];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            this.deadlineDate \u003d formatDate(deadlineDateString);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            this.deadlineTime \u003d formatTime(deadlineTimeString);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            throw new DukeException(\"dateTime\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * Returns the formatted string."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * @return Formatted string of task object in question."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        String checkmark \u003d \"N\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        if (this.isDone \u003d\u003d true) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            checkmark \u003d \"Y\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        String output \u003d \"[\" + this.type + \"]\" + \"[\" + checkmark + \"] \";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        String task_Name2 \u003d task.substring(task.indexOf(\" \"), task.indexOf(\"/\") - 1);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        output +\u003d task_Name2 + \" (by: \" + deadlineDate.format("
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \" \" + deadlineTime.format("
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                            DateTimeFormatter.ofPattern(\"h:mm a\")) + \")\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dargohzy": 72
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " * Event is a subtype of Task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " * Event is meant to be for when an event is going to happen."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " * Eg. Dargo\u0027s Birthday 19/01"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " * @author Dargo"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    private LocalDate eventDate;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    private LocalTime eventTime;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * Event subtype of Task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * @param type Type of task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * @param task Input command for the task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * @throws DukeException When input command is not valid."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    public Event(String type, String task) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        super(type, task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            String[] event \u003d task.substring(task.indexOf(\"/\")).split(\" \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            if(event.length !\u003d 3) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                throw new DukeException(\"dateTime\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            String eventDateString \u003d event[1];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            String eventTimeString \u003d event[2];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            this.eventDate \u003d formatDate(eventDateString);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            this.eventTime \u003d formatTime(eventTimeString);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        } catch(Exception e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            throw new DukeException(\"dateTime\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * Returns the formatted string."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * @return Formatted string of task object in question."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        String checkmark \u003d \"N\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        if (this.isDone \u003d\u003d true) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            checkmark \u003d \"Y\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        String output \u003d \"[\" + this.type + \"]\" + \"[\" + checkmark + \"] \";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        String task_Name2 \u003d task.substring(task.indexOf(\" \"), task.indexOf(\"/\") - 1);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        output +\u003d task_Name2 + \" (by: \" + eventDate.format("
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \" \" + eventTime.format("
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                DateTimeFormatter.ofPattern(\"h:mm a\")) + \")\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "}"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "dargohzy": 70
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " * Duke helps to serve as a reminder/scheduler."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " * The user\u0027s tasks are be keyed into Duke, and will be held by Duke."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " * The task class represents the task objects that will be keyed into Duke."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " * @author Dargo"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    String task;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    String type;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    boolean isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    static final DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    static final DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    private final static String TODO \u003d \"T\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    private final static String DEADLINE \u003d \"D\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    private final static String EVENT \u003d \"E\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * Task is the representation of a task that someone inputs into Duke."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * A task is classified into 3 types: todo, deadline and event."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * @param type Type of task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * @param task Input command for the task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    public Task(String type, String task) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            this.type \u003d TODO;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        } else if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            this.type \u003d DEADLINE;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        } else if (type.equals(\"event\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            this.type \u003d EVENT;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    public void taskDone() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * Formats the string that is outputted by the program."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * Follows the style set by CS2103T website."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * @return Formatted string representing the task in question."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * @throws DukeException If any of the task classes do not have an appropriate command input."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    public String print_Format() throws DukeException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            String checkmark \u003d \"N\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            if (this.isDone \u003d\u003d true) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                checkmark \u003d \"Y\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            String output \u003d \"[\" + this.type + \"]\" + \"[\" + checkmark + \"] \";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            if (this.type.equals(EVENT)) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                String task_Name1 \u003d task.substring(task.indexOf(\" \"), task.indexOf(\"/\") - 1);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                String day_And_Time \u003d task.substring(task.indexOf(\"/\") + 4);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                output +\u003d task_Name1 + \" (at: \" + day_And_Time + \")\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            } else if (this.type.equals(DEADLINE)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                String task_Name2 \u003d task.substring(task.indexOf(\" \"), task.indexOf(\"/\") - 1);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                String day \u003d task.substring(task.indexOf(\"/\") + 4);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                output +\u003d task_Name2 + \" (by: \" + day + \")\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                String task_Name3 \u003d task.substring(task.indexOf(\" \"));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                output +\u003d task_Name3;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            throw new DukeException(type);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * Formats date into appropriate format."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * @param dateString Date input in String format."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * @return LocalDate object in proper format."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    public LocalDate formatDate(String dateString) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        return LocalDate.parse(dateString, dateFormatter);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * Formats time into appropriate format."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * @param timeString Time input in String format."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * @return LocalTime object in proper format."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    public LocalTime formatTime(String timeString) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        return LocalTime.parse(timeString, timeFormatter);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * Returns the formatted string."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * @return Formatted string of task object in question."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            output +\u003d this.print_Format();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dargohzy": 132
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " * Holds all the tasks that have been input into the Duke program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " * Execution of commands happen here."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " * Commands include: list, find, add, delete and done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " * @author Dargo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    private ArrayList\u003cTask\u003e storageData;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    private final static String LINE \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    private final static String LIST_HEADER \u003d \"     Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    private final static String FIND_HEADER \u003d \"     Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    private final static String TASK_DONE_MESSAGE \u003d \"     Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    private final static String TASK_ADD_MESSAGE \u003d \"     Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    private final static String DELETE_MESSAGE \u003d \"     Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * TaskList holds the list of tasks that are in the Duke program."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * TaskList is also the class that executes the given commands."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * @param storageData Data of the current Duke program."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * @throws DukeException Storage data is invalid."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e storageData) throws DukeException{"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        this.storageData \u003d storageData;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * Get the ArrayList of tasks of the current Duke program."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * @return Current ArrayList of tasks of Duke."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    public ArrayList\u003cTask\u003e getData() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        return this.storageData;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * List out the tasks in Duke at the moment."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    public void list() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        System.out.println(LIST_HEADER);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        for (int i \u003d 0; i \u003c storageData.size(); i++) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            String output \u003d \"     \" + (i + 1) + \".\" + storageData.get(i);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            System.out.println(output);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * Find the tasks with the given keyword and list them out."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * @param keyword"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    public void find(String keyword) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        System.out.println(FIND_HEADER);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        for (int i \u003d 0; i \u003c storageData.size(); i++) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            Task task \u003d storageData.get(i);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            String taskFullInput \u003d task.task;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            if(taskFullInput.contains(keyword)) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                System.out.println(\"     \" + counter + \".\" + task);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * Add tasks into the Duke program."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * @param type Type of task."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * @param inputCommand Full input command."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    public void add(String type, String inputCommand) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                Task new_Task \u003d new Todo(type, inputCommand);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                this.storageData.add(new_Task);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            } else if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                Task new_Task \u003d new Deadline(type, inputCommand);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                this.storageData.add(new_Task);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                Task new_Task \u003d new Event(type, inputCommand);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                this.storageData.add(new_Task);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        } catch (DukeException dukeException) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            System.out.println(dukeException);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        String output \u003d LINE + \"\\n\" +"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                TASK_ADD_MESSAGE + \"\\n\" +"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                \"       \" + this.storageData.get(this.storageData.size() - 1) + \"\\n\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        output +\u003d \"     Now you have \" + this.storageData.size() + \" task(s) in the list.\" + \"\\n\" + LINE;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * Deletes a task from Duke."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * @param position Position of the task in the list."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    public void delete(String position) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        int indexPosition \u003d Integer.parseInt(position);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            String output \u003d LINE + \"\\n\" + DELETE_MESSAGE + \"\\n\" + \"       \" + this.storageData.get(indexPosition - 1) + \"\\n\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            output +\u003d \"     Now you have \" + (this.storageData.size() - 1) + \" task(s) in the list.\" + \"\\n\" + LINE;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            System.out.println(output);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            this.storageData.remove(indexPosition - 1);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "            System.out.println(LINE + \"\\n     :(  OOPS! That number is not valid. You have \" +"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "                    this.storageData.size() + \" task(s) in your list.\" + \"\\n\" + LINE);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * @param position Position of the task in the list."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    public void done(String position) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        int task_Done \u003d Integer.parseInt(position);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        this.storageData.get(task_Done - 1).taskDone();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        System.out.println(TASK_DONE_MESSAGE);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        System.out.println(\"       \" + this.storageData.get(task_Done - 1));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dargohzy": 145
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " * Todo is a subtype of Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " * Todo is meant for when a task is needed to be done without a deadline."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " * Eg. Read book."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " * @author Dargo"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * Event subtype of Task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * @param type Type of task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * @param task Input command for the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    public Todo(String type, String task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        super(type, task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * Returns the formatted string."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     * @return Formatted string of task object in question."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        return super.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "dargohzy": 33
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    private static final String LIST_TEST \u003d \"list\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    private static final String TODO_TEST \u003d \"todo read book\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    private static final String DEADLINE_TEST \u003d \"deadline pao /by 02/02/2020 1800\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    private static final String EVENT_TEST \u003d \"event siewmai /by 12/12/2020 1800\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    public String list() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        return LIST_TEST;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    public void testTodo() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        Todo todo \u003d new Todo(\"todo\", TODO_TEST);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        assert(todo.toString().equals(\"[T][N]  read book\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    public void testDeadline() throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"deadline\", DEADLINE_TEST);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        assert(deadline.toString().equals(\"[D][N]  pao (by: 02 Feb 2020 6:00 PM)\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    public void testEvent() throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        Event event \u003d new Event(\"event\", EVENT_TEST);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        assert(event.toString().equals(\"[E][N]  siewmai (by: 12 Dec 2020 6:00 PM)\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    public void testTaskList() throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        TaskList taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        taskList.add(\"todo\", TODO_TEST);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        assert(taskList.getData().size() \u003d\u003d 1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        taskList.delete(\"1\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "        assert(taskList.getData().size() \u003d\u003d 0);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dargohzy": 42
    }
  },
  {
    "path": "src/text-ui-testing/expected.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dargohzy"
        },
        "content": " ____        _"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "|  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     Got it. I\u0027ve added this task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "       [T][N]  borrow book"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     Now you have 1 task(s) in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     Got it. I\u0027ve added this task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "       [D][N]  return book (by: Sunday)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     Now you have 2 task(s) in the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     Got it. I\u0027ve added this task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "       [E][N]  project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     Now you have 3 task(s) in the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     1.[T][N]  borrow book"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     2.[D][N]  return book (by: Sunday)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     3.[E][N]  project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "       [T][Y]  borrow book"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "dargohzy": 36
    }
  },
  {
    "path": "src/text-ui-testing/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "dargohzy": 6
    }
  },
  {
    "path": "src/text-ui-testing/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d C:\\Users\\Dargo\\Documents\\NUS\\CS\\CS2103T Software Engineering\\CS2103 Duke\\src\\main\\java*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "java -classpath C:\\Users\\Dargo\\Documents\\NUS\\CS\\CS2103T Software Engineering\\CS2103 Duke\\src\\main\\java \u003c input.txt \u003e actual.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dargohzy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dargohzy"
        },
        "content": "FC actual.txt EXPECTED.txt"
      }
    ],
    "authorContributionMap": {
      "dargohzy": 21
    }
  }
]
