[
  {
    "path": ".gitignore",
    "fileType": "gitignore",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# IDEA files"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "/.idea/"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/out/"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "/*.iml"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "# Gradle build files"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/.gradle/"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/build/"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "src/main/resources/docs/"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "# MacOS custom attributes files created by Finder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ".DS_Store"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "*.iml"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "bin/"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "# Ignore changes to save and load"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "data/duke.txt"
      }
    ],
    "authorContributionMap": {
      "-": 14,
      "chrisjwelly": 3
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public Deadline(String desc, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        // by variable must be in YYYY-mm-dd"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        this.by \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    private String formatDate() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        return by.format(DateTimeFormatter.ofPattern(\"dd MMM yy\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public LocalDate getBy() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        return String.format(\"D | %s | %s | %s\\n\", super.getStatusInteger(), super.getDesc(),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                this.getBy().toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + formatDate() + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrisjwelly": 31
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            tasks \u003d new TaskList(storage.loadTasksFromSaveFile());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            // Since we can successfully load it, we save all in TaskList"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            storage.writeTasks(tasks);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            // Load an empty one"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            Ui.printLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            Ui.indent(\"It seems that there is no save file in: \" + filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            Ui.printLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        Ui.greet();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        while (Parser.stillHasInputs()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                String input \u003d Parser.readLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                if (Parser.commandEquals(\"bye\", input)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                    Ui.sayGoodbye();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                } else if (Parser.commandEquals(\"list\", input)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                    Ui.displayList(tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                } else if (Parser.commandEquals(\"done\", input)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                    int taskNo \u003d Parser.getTaskNo(input);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                    tasks.markTaskAsDone(taskNo);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                } else if (Parser.commandEquals(\"delete\", input)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                    int taskNo \u003d Parser.getTaskNo(input);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                    tasks.deleteTask(taskNo);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                } else if (Parser.commandEquals(\"deadline\", input)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                    if (Parser.hasNoArgs(input)) throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                    if (tasks.isFull()) throw new TooManyTasksException();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                    tasks.addDeadline(Parser.getArgs(input));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                } else if (Parser.commandEquals(\"event\", input)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                    if (Parser.hasNoArgs(input)) throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                    if (tasks.isFull()) throw new TooManyTasksException();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                    tasks.addEvent(Parser.getArgs(input));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                } else if (Parser.commandEquals(\"todo\", input)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                    if (Parser.hasNoArgs(input)) throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                    if (tasks.isFull()) throw new TooManyTasksException();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                    tasks.addTodo(Parser.getArgs(input));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                } else if (Parser.commandEquals(\"find\", input)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                    if (Parser.hasNoArgs(input)) throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                    tasks.find(Parser.getArgs(input));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                    throw new UnknownCommandException();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                // Rewrites the entire file for every update you make here"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                // Probably O(n^2) time where n is the number of tasks but this is the simplest change we can make"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                storage.writeTasks(tasks);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                Ui.printLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                Ui.indent(e.toString());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                Ui.printLine();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                Ui.printLine();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                Ui.indent(\"It seems that you have entered a format we don\u0027t understand. \");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                Ui.indent(\"Please use the YYYY-MM-DD format.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                Ui.printLine();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "chrisjwelly": 79
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrisjwelly": 2
    }
  },
  {
    "path": "src/main/java/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    private static final String space \u003d \"    \";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        return \"You are required to specify the description for the task. \\n\" + space +"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                \"Please try again.\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrisjwelly": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public Event(String desc, String at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        // at variable must be in YYYY-mm-dd"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        this.at \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    private String formatDate() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        return at.format(DateTimeFormatter.ofPattern(\"dd MMM yy\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public LocalDate getAt() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        return String.format(\"E | %s | %s | %s\\n\", super.getStatusInteger(), super.getDesc(),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                this.getAt().toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + formatDate() + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrisjwelly": 31
    }
  },
  {
    "path": "src/main/java/InvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "public class InvalidIndexException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        return \"You have entered an invalid index. Please try again.\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrisjwelly": 6
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    static Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * Reads the next line of input."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * @return the String that has been read"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public static String readLine() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * Checks if there is still input in the next line"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * @return true if there is, false if not"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public static boolean stillHasInputs() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        return sc.hasNext();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * Extracts and returns the command from the input line"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * @param input A string of a single command, or a command with arguments"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * @return the command represented as a String"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public static String getCommand(String input) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        String[] inputs \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        return inputs[0];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * Extracts and returns the arguments from the input line"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * @param input A String of command with arguments"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * @return the arguments represented as a String"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public static String getArgs(String input) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        String[] inputs \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        return inputs[1];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * Checks if the command in the input line is the same as the command expected"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * @param command The command expected represented as a string"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * @param input A String of a single command or a command with arguments"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * @return true if the expected command matches, false otherwise"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public static boolean commandEquals(String command, String input) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        return getCommand(input).equals(command);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * Checks if the command does not have any arguments. I.e. Input is a single command or a command with arguments"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * @return true if it is a single command, false otherwise"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public static boolean hasNoArgs(String input) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        String[] inputs \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        return inputs.length \u003d\u003d 1;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * Obtains the task number from the input line"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * @param input A command with a number as an argument"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * @return an integer of the argument"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public static int getTaskNo(String input) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        return Integer.parseInt(getArgs(input));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrisjwelly": 70
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    // private static final String storagePath \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    private final String storagePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        this.storagePath \u003d filePath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public void appendToFile(String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        FileWriter fw \u003d new FileWriter(storagePath, true);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * Write to the file whose address is specified by storagePath."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * @param textToAdd The text that is added to the file"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public void writeToFile(String textToAdd) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            FileWriter fw \u003d new FileWriter(storagePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            fw.write(textToAdd);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            System.out.println(e.toString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * Take the tasks in taskList and write all of them into the file who address is specified by storagePath"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * @param taskList The List of Tasks to be written"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public void writeTasks(TaskList taskList) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        List\u003cTask\u003e tasks \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        for (Task task: tasks) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            sb.append(task.toStorageString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        writeToFile(sb.toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * Read the file that is pointed by storagePath and write store them as a List\u003cList\u003cString\u003e\u003e."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * The List\u003cString\u003e can be a list of a single command or a command with the arguments"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * @return The List\u003cList\u003cString\u003e\u003e version of the file being read"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public List\u003cList\u003cString\u003e\u003e loadTasksFromSaveFile() throws FileNotFoundException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        List\u003cList\u003cString\u003e\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        File f \u003d new File(storagePath);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        System.out.println(\"Am I called\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            // It\u0027s formatted with the pipe"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            String[] separated \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            // Turn the String array into an array list"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            List\u003cString\u003e al \u003d Arrays.asList(separated);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            tasks.add(al);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrisjwelly": 75
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    protected String desc;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public Task(String desc) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public String getStatusInteger() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        return isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public String getDesc() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        return this.desc;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        // empty, specified by each subclasses"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        String doneStatus \u003d \"[\" + getStatusIcon() + \"]\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        return doneStatus + \" \" + desc;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrisjwelly": 36
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * Initialises the TaskList according to a list of tasks that have been saved"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * @param savedTasks Tasks that have been saved represented as a List\u003cList\u003cString\u003e\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public TaskList(List\u003cList\u003cString\u003e\u003e savedTasks) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        for (List\u003cString\u003e savedTask : savedTasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            String type \u003d savedTask.get(0);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            Task taskObject;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                taskObject \u003d new Deadline(savedTask.get(2), savedTask.get(3));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            } else if (type.equals(\"E\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                taskObject \u003d new Event(savedTask.get(2), savedTask.get(3));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                // type equals (\"T\")"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                taskObject \u003d new Todo(savedTask.get(2));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            tasks.add(taskObject);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            if (savedTask.get(1).equals(\"1\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                // That means task was initially done"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                taskObject.markAsDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * Gets the concrete representation of the tasks"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * @return A List of Tasks"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * Adds a deadline object to the task list"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * @param args A String in the format of: \"\u003cdesc\u003e /by \u003cdate\u003e\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public void addDeadline(String args) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        String[] descAndBy \u003d args.split(\" /by \");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        Deadline deadline \u003d new Deadline(descAndBy[0], descAndBy[1]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        tasks.add(deadline);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        Ui.printLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        Ui.indent(\"Acknowledged. I have added: \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        Ui.doubleIndent( deadline.toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        Ui.printTaskCount(this);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        Ui.printLine();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * Adds an Event object to the task list"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * @param args A String in the format of: \"\u003cdesc\u003e /at \u003cdate\u003e\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public void addEvent(String args) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        String[] descAndAt \u003d args.split(\" /at \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        Event event \u003d new Event(descAndAt[0], descAndAt[1]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        tasks.add(event);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        Ui.printLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        Ui.indent(\"Acknowledged. I have added: \");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        Ui.doubleIndent(event.toString());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        Ui.printTaskCount(this);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        Ui.printLine();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * Add a Todo object to the task list"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * @param args A String in the format of: \"\u003cdesc\u003e\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public void addTodo(String args) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        Todo todo \u003d new Todo(args);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        tasks.add(todo);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        Ui.printLine();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        Ui.indent(\"Acknowledged. I have added: \");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        Ui.doubleIndent(todo.toString());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        Ui.printTaskCount(this);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        Ui.printLine();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    private void add(Task task) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * The number of tasks in the TaskList"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * @return The number of tasks in the TaskList"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * The Task at a the index specified by the param"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * @param idx 0-based indexing to get the Task object"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public Task get(int idx) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        return tasks.get(idx);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * Mark a Task (specified by the index) as done"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * @param taskNo A 1-based indexing of the position of the Task in the list"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * @throws InvalidIndexException"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public void markTaskAsDone(int taskNo) throws InvalidIndexException {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        if (taskNo \u003c 1 || taskNo \u003e tasks.size()) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        Task task \u003d tasks.get(taskNo - 1); // The user starts counting from 1"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        Ui.printLine();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        Ui.indent(\"Excellent! You have completed this task: \");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        Ui.doubleIndent(task.toString());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        Ui.printLine();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * Delete a Task (specified by the index)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * @param taskNo A 1-based indexing of the position of the Task in the list"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * @throws InvalidIndexException"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public void deleteTask(int taskNo) throws InvalidIndexException {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        if (taskNo \u003c 1 || taskNo \u003e tasks.size()) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        Task task \u003d tasks.get(taskNo - 1); // The user starts counting from 1"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        tasks.remove(taskNo - 1);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        Ui.printLine();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        Ui.indent(\"Understood. I have now removed this task: \");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        Ui.doubleIndent(task.toString());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        Ui.printTaskCount(this);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        Ui.printLine();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * Checks if the TaskList is full (full is defined by 100 tasks)"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     * @return true if TaskList is full"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public boolean isFull() {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        return tasks.size() \u003d\u003d 100;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public void find(String args) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        TaskList matches \u003d new TaskList();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        for (Task task: tasks) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            if (task.toString().contains(args)) matches.add(task);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        if (matches.size() \u003d\u003d 0)  {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "           Ui.printLine();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "           Ui.indent(\"No match found.\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "           Ui.printLine();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            Ui.displayList(matches, \"We have found the following matches:\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrisjwelly": 172
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public Todo(String desc) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public String toStorageString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        return String.format(\"T | %s | %s\\n\", super.getStatusInteger(), super.getDesc());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrisjwelly": 15
    }
  },
  {
    "path": "src/main/java/TooManyTasksException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "public class TooManyTasksException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    private static final String space \u003d \"    \";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        return \"You currently have 100 tasks! \\n\" + space +"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                \"Perhaps it would be good to complete the tasks at hand. \";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrisjwelly": 9
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    private static final String line \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    private static final String space \u003d \"    \";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public static void printLine() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public static void indent(String toIndent) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        System.out.printf(space);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        System.out.println(toIndent);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public static void doubleIndent(String toIndent) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        System.out.printf(space);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        System.out.printf(space);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        System.out.println(toIndent);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public static void greet() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        String logo \u003d space"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                + \" ____        _        \\n\" + space"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\" + space"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\" + space"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\" + space"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        indent(\"Greetings, you may call me\\n\" + logo);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        indent(\"How may I help you in this fine day today?\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public static void sayGoodbye() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        indent(\"I bid you adieu. Until the day we meet again.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public static void displayList(TaskList taskList) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        // TODO: Set up the tasks"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            indent((i + 1) + \". \" + taskList.get(i).toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public static void displayList(TaskList taskList, String comment) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        // TODO: Set up the tasks"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        indent(comment);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            indent((i + 1) + \". \" + taskList.get(i).toString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public static void printTaskCount(TaskList taskList) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        int len \u003d taskList.size();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        if (len \u003d\u003d 0 || len \u003d\u003d 1) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            indent(\"As of now, you have \" + len + \" task in the list.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "            indent(\"As of now, you have \" + len + \" tasks in the list.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrisjwelly": 66
    }
  },
  {
    "path": "src/main/java/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "public class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    private static final String space \u003d \"    \";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        return \"Unfortunately, I do not understand the command that you have just entered. \\n\" +"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "                space + \"Please try once again.\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrisjwelly": 9
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrisjwelly": 12
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public void hasNoArgs_reallyHasNoArgs_returnsTrue() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        assertTrue(Parser.hasNoArgs(\"list\"));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public void hasNoArgs_hasArgs_returnsFalse() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        assertFalse(Parser.hasNoArgs(\"done 1\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrisjwelly": 16
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public void addTodo_sizeIncreases() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        assertEquals(taskList.size(), 0);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        taskList.addTodo(\"homework\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        assertEquals(taskList.size(), 1);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public void addDeadline_sizeIncreases() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        assertEquals(taskList.size(), 0);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        taskList.addDeadline(\"submission /by 2019-12-15\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        assertEquals(taskList.size(), 1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    public void addEvent_sizeIncreases() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        assertEquals(taskList.size(), 0);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        taskList.addEvent(\"carnival /at 2020-11-13\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        assertEquals(taskList.size(), 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "chrisjwelly": 31
    }
  },
  {
    "path": "text-ui-test/ACTUAL.TXT",
    "fileType": "TXT",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    Greetings, you may call me"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     ____        _        "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    How may I help you in this fine day today?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    Unfortunately, I do not recognise what you have entered. "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    Please try again."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    Unfortunately, I do not recognise what you have entered. "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    Please try again."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    Acknowledged. I have added: "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        [D][?] CS2103T duke (by: Thursday 23:59)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    As of now, you have 1 task in the list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    Acknowledged. I have added: "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        [T][?] CS2103T duke"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    As of now, you have 2 tasks in the list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    Acknowledged. I have added: "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        [E][?] CS2101 CA component 1 (at: Thursday 08:00)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    As of now, you have 3 tasks in the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    I bid you adieu. Until the day we meet again."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "chrisjwelly": 36
    }
  },
  {
    "path": "text-ui-test/EXPECTED.TXT",
    "fileType": "TXT",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    Greetings, you may call me"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "     ____        _        "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    How may I help you in this fine day today?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    Unfortunately, I do not recognise what you have entered. "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    Please try again."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    Unfortunately, I do not recognise what you have entered. "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    Please try again."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    Acknowledged. I have added: "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        [D][?] CS2103T duke (by: Thursday 23:59)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    As of now, you have 1 task in the list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    Acknowledged. I have added: "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        [T][?] CS2103T duke"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    As of now, you have 2 tasks in the list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    Acknowledged. I have added: "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "        [E][?] CS2101 CA component 1 (at: Thursday 08:00)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    As of now, you have 3 tasks in the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    I bid you adieu. Until the day we meet again."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "chrisjwelly": 36
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "hello world"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "deadline CS2103T duke /by Thursday 23:59"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "todo CS2103T duke"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "event CS2101 CA component 1 /at Thursday 08:00"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "chrisjwelly": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrisjwelly"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "chrisjwelly": 21
    }
  }
]
