[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "artlee06"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "artlee06"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "artlee06"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "artlee06"
        },
        "content": "test {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "artlee06"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "artlee06"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "artlee06"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "artlee06"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "artlee06"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "artlee06"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "artlee06": 30,
      "-": 19
    }
  },
  {
    "path": "gradle/wrapper/gradle-wrapper.properties",
    "fileType": "properties",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "artlee06"
        },
        "content": "#Fri Jan 31 13:45:48 SGT 2020"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "artlee06"
        },
        "content": "distributionUrl\u003dhttps\\://services.gradle.org/distributions/gradle-5.5.1-all.zip"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "distributionBase\u003dGRADLE_USER_HOME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "distributionPath\u003dwrapper/dists"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "zipStorePath\u003dwrapper/dists"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "artlee06"
        },
        "content": "zipStoreBase\u003dGRADLE_USER_HOME"
      }
    ],
    "authorContributionMap": {
      "artlee06": 3,
      "-": 3
    }
  },
  {
    "path": "src/main/java/META-INF/MANIFEST.MF",
    "fileType": "MF",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "artlee06"
        },
        "content": "Manifest-Version: 1.0"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "artlee06"
        },
        "content": "Main-Class: duke.Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "artlee06": 3
    }
  },
  {
    "path": "src/main/java/duke/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "artlee06"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "artlee06"
        },
        "content": "/** AddCommand extends command and adds to the taskList based on the input */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "artlee06"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  AddCommand(String input) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    super(input);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * Executes the add command based on the task type. Adds accordingly."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * @param tasks from Tasklist initialised from duke."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * @param ui from UI initialised from duke."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * @param storage from storage initialised from duke."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * @throws DukeException might throw DukeException from saveData."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  protected void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    String[] strArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    String type \u003d strArr[0];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    switch (type) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    case \"deadline\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      Deadline d \u003d new Deadline(input);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      tasks.add(d);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      ui.printWithFormat(d.toString(), \"task\", tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      storage.saveData(tasks);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    case \"event\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      Event e \u003d new Event(input);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      tasks.add(e);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      ui.printWithFormat(e.toString(), \"task\", tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      storage.saveData(tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    case \"todo\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      Todo td \u003d new Todo(input);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      tasks.add(td);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      ui.printWithFormat(td.toString(), \"task\", tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      storage.saveData(tasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  protected String executeAndGetResponse(TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "artlee06"
        },
        "content": "          throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    String[] strArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    String type \u003d strArr[0];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    switch (type) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    case \"deadline\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      Deadline d \u003d new Deadline(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      tasks.add(d);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      storage.saveData(tasks);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      return ui.stringWithFormat(d.toString(), \"task\", tasks);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    case \"event\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      Event e \u003d new Event(input);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      tasks.add(e);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      storage.saveData(tasks);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      return ui.stringWithFormat(e.toString(), \"task\", tasks);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    case \"todo\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      Todo td \u003d new Todo(input);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      tasks.add(td);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      storage.saveData(tasks);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      return ui.stringWithFormat(td.toString(), \"task\", tasks);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    default:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      return (\"Wrong format added!\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "artlee06"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "artlee06": 67
    }
  },
  {
    "path": "src/main/java/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "artlee06"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "artlee06"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  String input;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  Command(String input) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    this.input \u003d input;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  protected abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  protected abstract String executeAndGetResponse(TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      throws DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  protected boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "artlee06"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "artlee06": 18
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "artlee06"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import java.lang.StringBuilder;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "artlee06"
        },
        "content": "/** Deadline task that extends the task abstract class, has a timing as well. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "artlee06"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  LocalDate timing;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  Deadline(String input) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    super(input);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    this.timing \u003d getTiming(input);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    this.description \u003d getDescription(input);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * Gets timing from the input parsed in the LocalDate format."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * @param input from the string input user keys in."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * @return timing as LocalData object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * @throws DukeException if date is the wrong format."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  private LocalDate getTiming(String input) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      String[] strArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      int index \u003d 0;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      for (int j \u003d 0; j \u003c strArr.length; j++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        String stringItem \u003d strArr[j];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        if (stringItem.equals(\"/by\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "artlee06"
        },
        "content": "          index \u003d j;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "artlee06"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      StringBuilder str \u003d new StringBuilder();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      for (int i \u003d index + 1; i \u003c strArr.length; i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        str.append(\" \").append(strArr[i]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      String date \u003d str.toString().trim();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      return LocalDate.parse(date);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    } catch (DateTimeParseException d) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      throw new DukeException(\"date\", \"\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * Gets description based on the input parsed."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * @param input from the string input user keys in."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * @return description as a String."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  private String getDescription(String input) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    StringBuilder str \u003d new StringBuilder();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    String[] strArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    for (int i \u003d 1; i \u003c strArr.length; i++) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      if (strArr[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      str.append(strArr[i]).append(\" \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    return str.toString();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    StringBuilder str \u003d new StringBuilder(\"[D]\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    str.append(this.getStatusIcon())"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        .append(\" \")"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        .append(description)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        .append(\"(by: \")"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        .append(timing.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")))"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        .append(\")\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    return str.toString();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "artlee06"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "artlee06": 77
    }
  },
  {
    "path": "src/main/java/duke/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "artlee06"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "artlee06"
        },
        "content": "/** Command for deleting a task. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "artlee06"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  DeleteCommand(String input) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    super(input);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * Parses the index and finds the task to be deleted and deletes it accordingly."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * @param tasks from the TaskList initialised from duke."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * @param ui from the UI initialised from duke."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * @param storage from the Storage initialised from duke."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * @throws DukeException from saveData."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  protected void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    String[] strArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    int index \u003d Integer.parseInt(strArr[1]) - 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    Task taskToBeDeleted \u003d tasks.delete(index);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    ui.printWithFormat(taskToBeDeleted.toString(), \"delete\", tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    storage.saveData(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  protected String executeAndGetResponse(TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    String[] strArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    int index \u003d Integer.parseInt(strArr[1]) - 1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    Task taskToBeDeleted \u003d tasks.delete(index);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    storage.saveData(tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    return ui.stringWithFormat(taskToBeDeleted.toString(), \"delete\", tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "artlee06"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "artlee06": 34
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "artlee06"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "artlee06"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "artlee06"
        },
        "content": " * An example of a custom control using FXML. This control represents a dialog box consisting of an"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "artlee06"
        },
        "content": " * ImageView to represent the speaker\u0027s face and a label containing text from the speaker."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "artlee06"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "artlee06"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  @FXML private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  @FXML private ImageView displayPicture;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      fxmlLoader.load();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    dialog.setText(text);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    displayPicture.setImage(img);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  /** Flips the dialog box such that the ImageView is on the left and text on the right. */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  private void flip() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    Collections.reverse(tmp);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    return new DialogBox(text, img);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    db.flip();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    return db;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "artlee06"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "artlee06": 56
    }
  },
  {
    "path": "src/main/java/duke/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "artlee06"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "artlee06"
        },
        "content": "/** Command for setting a task as done. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "artlee06"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  DoneCommand(String input) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    super(input);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * Parses out the index, find the task and sets it as done."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * @param tasks from Tasklist initialised from duke."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * @param ui from UI initialised from duke."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * @param storage from storage initialised from duke."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * @throws DukeException might throw DukeException from saveData."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  protected void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    String[] strArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    int index \u003d Integer.parseInt(strArr[1]) - 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    Task taskToBeDone \u003d tasks.get(index);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    taskToBeDone.setDone();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    ui.printWithFormat(taskToBeDone.toString(), \"done\", tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    storage.saveData(tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  protected String executeAndGetResponse(TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    String[] strArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    int index \u003d Integer.parseInt(strArr[1]) - 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    Task taskToBeDone \u003d tasks.get(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    taskToBeDone.setDone();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    storage.saveData(tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    return ui.stringWithFormat(taskToBeDone.toString(), \"done\", tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "artlee06"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "artlee06": 36
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "artlee06"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "artlee06"
        },
        "content": "/** Duke has run method that runs the duke programme and is initalised by the filePath. */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "artlee06"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  private Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  private TaskList tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  private Ui ui;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  private VBox dialogContainer;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  private TextField userInput;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  private Button sendButton;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  private Scene scene;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/Me.jpg\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.jpeg\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  public Duke(String filePath) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    ui \u003d new Ui();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      tasks \u003d new TaskList(storage.loadData());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  public Duke() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    super();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * You should have your own function to generate a response to user input. ideas: instead of just"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * printing the response"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  public String getResponse(String input) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      return c.executeAndGetResponse(tasks, ui, storage);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    } catch (DukeException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      return e.getMessage();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  public void run() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    ui.showWelcome();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    boolean isExit \u003d false;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    while (!isExit) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      } catch (DukeException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      } finally {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  public static void main(String[] args) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    new Duke(\"../../../data/duke.txt\").run();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "artlee06": 78,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "artlee06"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "artlee06"
        },
        "content": "/** Exception that returns the error message according to errorType given. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "artlee06"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  String errorType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  String inputType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  DukeException(String errorType, String inputType) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    super();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    this.errorType \u003d errorType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    this.inputType \u003d inputType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  public String getMessage() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    String message \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    switch (errorType) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    case \"empty\":"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      message \u003d \"OOPS!!! The description of a \" + inputType + \" cannot be empty.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      break;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    case \"invalid\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      message \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    case \"date\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      message \u003d \"OOPS!!! Your date needs to be in yyyy-mm-dd format!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    case \"file\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      message \u003d \"OOPS!!! The save file cannot be found!\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    case \"read\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      message \u003d \"OOPS!!! The save file cannot be read. A new task list will be created!\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    case \"emptyLoad\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      message \u003d \"OOPS!!! The save file is empty. A new task list will be created!\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    return message;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "artlee06"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "artlee06": 39
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "artlee06"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import java.lang.StringBuilder;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "artlee06"
        },
        "content": "/** Event that inherits from task, parses out the timing and description from input. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "artlee06"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  LocalDate timing;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  Event(String input) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    super(input);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    this.timing \u003d getTiming(input);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    this.description \u003d getDescription(input);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * Gets timing from the input parsed in the LocalDate format."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * @param input from the string input user keys in."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * @return timing as LocalData object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * @throws DukeException if date is the wrong format."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  private LocalDate getTiming(String input) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      String[] strArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      int index \u003d 0;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      for (int j \u003d 0; j \u003c strArr.length; j++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        String stringItem \u003d strArr[j];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        if (stringItem.equals(\"/at\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "artlee06"
        },
        "content": "          index \u003d j;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "artlee06"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      StringBuilder str \u003d new StringBuilder();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      for (int i \u003d index + 1; i \u003c strArr.length; i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        str.append(\" \").append(strArr[i]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      String date \u003d str.toString().trim();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      return LocalDate.parse(date);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    } catch (DateTimeParseException d) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      throw new DukeException(\"date\", \"\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * Gets description based on the input parsed."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * @param input from the string input user keys in."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * @return description as a String."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  private String getDescription(String input) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    StringBuilder str \u003d new StringBuilder();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    String[] strArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    for (int i \u003d 1; i \u003c strArr.length; i++) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      if (strArr[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      str.append(strArr[i]).append(\" \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    return str.toString();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    StringBuilder str \u003d new StringBuilder(\"[E]\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    str.append(this.getStatusIcon())"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        .append(\" \")"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        .append(description)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        .append(\"(at: \")"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        .append(timing.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")))"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        .append(\")\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    return str.toString();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "artlee06"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "artlee06": 77
    }
  },
  {
    "path": "src/main/java/duke/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "artlee06"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "artlee06"
        },
        "content": "/** Exits when bye is detected. isExit() is true this time. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "artlee06"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  ExitCommand(String input) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    super(input);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  protected void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    ui.printWithFormat(\"\", \"bye\", tasks);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  protected String executeAndGetResponse(TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    return ui.stringWithFormat(\"\", \"bye\", tasks);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  protected boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    return true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "artlee06"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "artlee06": 22
    }
  },
  {
    "path": "src/main/java/duke/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "artlee06"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "artlee06"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  FindCommand(String input) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    super(input);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  protected void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    String[] strArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    String keyword \u003d strArr[1];"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    TaskList matchingList \u003d tasks.find(keyword);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    ui.printWithFormat(\"\", \"find\", matchingList);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  protected String executeAndGetResponse(TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    String[] strArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    String keyword \u003d strArr[1];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    TaskList matchingList \u003d tasks.find(keyword);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    return ui.stringWithFormat(\"\", \"find\", matchingList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "artlee06"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "artlee06": 24
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "artlee06"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "artlee06"
        },
        "content": "/** A launcher class to workaround classpath issues. */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "artlee06"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "artlee06"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "artlee06": 10
    }
  },
  {
    "path": "src/main/java/duke/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "artlee06"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "artlee06"
        },
        "content": "/** Lists all the available tasks. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "artlee06"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  ListCommand(String input) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    super(input);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  protected void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    ui.printWithFormat(\"\", \"list\", tasks);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  protected String executeAndGetResponse(TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    return ui.stringWithFormat(\"\", \"list\", tasks);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "artlee06"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "artlee06": 17
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "artlee06"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "artlee06"
        },
        "content": "/** A GUI for Duke using FXML. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "artlee06"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  private Duke duke \u003d new Duke(\"data/duke.txt\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "artlee06"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "artlee06": 29
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "artlee06"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "artlee06"
        },
        "content": "/** Controller for duke.MainWindow. Provides the layout for the other controls. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "artlee06"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  @FXML private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  @FXML private VBox dialogContainer;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  @FXML private TextField userInput;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  @FXML private Button sendButton;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  private Duke duke;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Me.jpg\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.jpeg\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  public void initialize() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    duke \u003d d;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * appends them to the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  private void handleUserInput() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    dialogContainer"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        .getChildren()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        .addAll("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "artlee06"
        },
        "content": "            DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "artlee06"
        },
        "content": "            DialogBox.getDukeDialog(response, dukeImage));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    userInput.clear();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "artlee06"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "artlee06": 46
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "artlee06"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "artlee06"
        },
        "content": "/** Parser class has parses the input and returns the appropiate command. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "artlee06"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    String line \u003d \"-----------------------------------\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    String[] strArr \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    String command \u003d strArr[0];"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    int length \u003d strArr.length;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    switch (command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    case \"bye\":"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      return new ExitCommand(fullCommand);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    case \"list\":"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      return new ListCommand(fullCommand);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    case \"done\":"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      if (length \u003e 1) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        return new DoneCommand(fullCommand);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        throw new DukeException(\"empty\", command);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    case \"deadline\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    case \"todo\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    case \"event\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      if (length \u003e 1) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        return new AddCommand(fullCommand);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        throw new DukeException(\"empty\", command);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    case \"delete\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      if (length \u003e 1) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        return new DeleteCommand(fullCommand);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        throw new DukeException(\"empty\", command);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    case \"find\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      if (length \u003e 1) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        return new FindCommand(fullCommand);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        throw new DukeException(\"empty\", command);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    default:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      throw new DukeException(\"invalid\", command);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "artlee06"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "artlee06": 46
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "artlee06"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "artlee06"
        },
        "content": "/** Storage class stores and loads the task information in Duke.txt. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "artlee06"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  String filePath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  File file;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  Scanner fileScanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  Storage(String filePath) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      this.fileScanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    } catch (FileNotFoundException f) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      throw new DukeException(\"file\", \"\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  public void saveData(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      PrintWriter writer \u003d new PrintWriter(filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      for (int i \u003d 0; i \u003c tasks.getLength(); i++) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        Task t \u003d tasks.get(i);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        writer.println(t.getFormatForSave());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      writer.close();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      throw new DukeException(\"file\", \"\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  public ArrayList\u003cTask\u003e loadData() throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    ArrayList\u003cTask\u003e loadedList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    while (fileScanner.hasNextLine()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      String inputLine \u003d fileScanner.nextLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      loadedList.add(interpretLine(inputLine));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    if (loadedList.size() \u003c 1) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      throw new DukeException(\"emptyLoad\", \"\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    return loadedList;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * Interprets each line in Duke.txt and returns the appropiate task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * @param inputLine each line of Duke.txt file."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * @return Task parsed from the line."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * @throws DukeException if the line is not any of the task types."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  public static Task interpretLine(String inputLine) throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    String[] strArr \u003d inputLine.split(\" \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    String doneStatus \u003d strArr[0];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    String type \u003d strArr[1];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    String input \u003d inputLine.substring(2);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    switch (type) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      case \"deadline\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        Deadline d \u003d new Deadline(input);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        if (doneStatus.equals(\"1\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "artlee06"
        },
        "content": "          d.setDone();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        return d;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      case \"event\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        Event e \u003d new Event(input);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        if (doneStatus.equals(\"1\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "artlee06"
        },
        "content": "          e.setDone();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        return e;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      case \"todo\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        Todo td \u003d new Todo(input);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        if (doneStatus.equals(\"1\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "artlee06"
        },
        "content": "          td.setDone();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        return td;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      default:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        throw new DukeException(\"read\", \"\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "artlee06"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "artlee06": 85
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "artlee06"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import java.lang.StringBuilder;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "artlee06"
        },
        "content": "/** Task abstract class that Deadline, Event and Todo inherit from. */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "artlee06"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  String input;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  Task(String input) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    this.input \u003d input;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  public void setDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    this.isDone \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  //"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  //    public String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  //        return (isDone ? \"[done]\" : \"[undone]\" ); //return tick or X symbols"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  //    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * Returns a string of 1 and 0 for done and undone respectively."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * @return String"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  public String getIsDone() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    return (isDone ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * Returns the string for the save format for each task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * @return String for each task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  protected String getFormatForSave() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    StringBuilder str \u003d new StringBuilder(getIsDone());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    str.append(\" \").append(input);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    return str.toString();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  public String getStatusIcon() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    return (isDone ? \"[\\u2713]\" : \"[\\u2718]\"); // return tick or X symbols"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    StringBuilder str \u003d new StringBuilder(this.getStatusIcon());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    str.append(\" \").append(input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    return str.toString();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "artlee06"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "artlee06": 53
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "artlee06"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "artlee06"
        },
        "content": "/** TaskList utitlises an ArrayList to hold it\u0027s tasks. */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "artlee06"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  TaskList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * Second constructor for loading from an existing list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   * @param existingList from the list returned from loadData in storage method."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "artlee06"
        },
        "content": "   */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  TaskList(ArrayList\u003cTask\u003e existingList) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    this.list \u003d existingList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  public void add(Task task) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    list.add(task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  public Task delete(int index) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    return list.remove(index);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  public Task get(int index) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    return list.get(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  public int getLength() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    return list.size();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    return list.toString();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  public TaskList find(String keyword) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    ArrayList\u003cTask\u003e matchingList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    for (Task t : list) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      if (t.input.contains(keyword)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        matchingList.add(t);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    return new TaskList(matchingList);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "artlee06"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "artlee06": 52
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "artlee06"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import java.lang.StringBuilder;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "artlee06"
        },
        "content": "/** Todo inherits from task. Only has a description. */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "artlee06"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  Todo(String input) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    super(input);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    this.description \u003d getDescription(input);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  protected String getDescription(String input) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    StringBuilder str \u003d new StringBuilder();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    String[] strArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    for (int i \u003d 1; i \u003c strArr.length; i++) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      str.append(strArr[i]).append(\" \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    return str.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    StringBuilder str \u003d new StringBuilder(\"[T]\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    str.append(this.getStatusIcon()).append(\" \").append(description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    return str.toString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "artlee06"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "artlee06": 29
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "artlee06"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "artlee06"
        },
        "content": "/** Contains interaction with user, meaning printing and reading through the scanner. */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "artlee06"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  Scanner scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  Ui() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  public void showLine() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    String line \u003d \"-----------------------------------\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    System.out.println(line);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    showLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    System.out.println(errorMessage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    showLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  public void showWelcome() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    showLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    String logo \u003d"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "artlee06"
        },
        "content": "            \" ____        _        \\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "artlee06"
        },
        "content": "                    + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "artlee06"
        },
        "content": "                    + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "artlee06"
        },
        "content": "                    + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "artlee06"
        },
        "content": "                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    showLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  public void printWithFormat(String input, String type, TaskList tasks) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    switch (type) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    case \"list\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      for (int i \u003d 1; i \u003c\u003d tasks.getLength(); i++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        StringBuilder str \u003d new StringBuilder();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        Task task \u003d tasks.get(i - 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        String output \u003d str.append(i).append(\". \").append(task.toString()).toString();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    case \"task\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      System.out.println(input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      int arrlength \u003d tasks.getLength();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      System.out.println(\"Now you have \" + arrlength + \" tasks in the list.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    case \"bye\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    case \"done\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      System.out.println(input);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    case \"delete\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      System.out.println(input);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      System.out.println(\"Now you have \" + tasks.getLength() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    case \"find\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      for (int i \u003d 1; i \u003c\u003d tasks.getLength(); i++) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        StringBuilder str \u003d new StringBuilder();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        Task task \u003d tasks.get(i - 1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        String output \u003d str.append(i).append(\". \").append(task.toString()).toString();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    default:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      System.out.println(input);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  public String stringWithFormat(String input, String type, TaskList tasks) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    StringBuilder result \u003d new StringBuilder();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    switch (type) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    case \"list\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      result.append(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      for (int i \u003d 1; i \u003c\u003d tasks.getLength(); i++) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        StringBuilder str \u003d new StringBuilder();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        Task task \u003d tasks.get(i - 1);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        String output \u003d"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "artlee06"
        },
        "content": "                str.append(i).append(\". \").append(task.toString()).append(\"\\n\").toString();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        result.append(output);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    case \"task\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      result.append(\"Got it. I\u0027ve added this task:\\n\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      result.append(input + \"\\n\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      int arrlength \u003d tasks.getLength();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      result.append(\"Now you have \" + arrlength + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    case \"bye\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      result.append(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    case \"done\":"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      result.append(\"Nice! I\u0027ve marked this task as done: \\n\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      result.append(input);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    case \"delete\":"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      result.append(\"Noted. I\u0027ve removed this task:\\n\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      result.append(input + \"\\n\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      result.append(\"Now you have \" + tasks.getLength() + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      break;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    case \"find\":"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      result.append(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      for (int i \u003d 1; i \u003c\u003d tasks.getLength(); i++) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        StringBuilder str \u003d new StringBuilder();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        Task task \u003d tasks.get(i - 1);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        String output \u003d"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "artlee06"
        },
        "content": "                str.append(i).append(\". \").append(task.toString()).append(\"\\n\").toString();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    default:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      result.append(input);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "artlee06"
        },
        "content": "      break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    return result.toString();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  public String readCommand() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    return scanner.nextLine();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "artlee06"
        },
        "content": "  }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "artlee06"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "artlee06": 133
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "artlee06"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "artlee06"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "artlee06"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "artlee06"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "artlee06"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "artlee06"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-label-padding: 10px;\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "artlee06"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "artlee06": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "artlee06"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "artlee06"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "artlee06"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "artlee06"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "artlee06"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "artlee06"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "artlee06"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "artlee06"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "artlee06"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "artlee06"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "artlee06"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "artlee06": 19
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "artlee06"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "artlee06"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "artlee06"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    public void testTodo() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        Todo td \u003d new Todo(\"todo jakcnkaj\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        assertEquals(\"[T][✘] jakcnkaj \", td.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    public void testTaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        Todo td \u003d new Todo(\"todo jakcnkaj\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        list.add(td);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        assertEquals(1 , list.getLength());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    public void testTaskListDelete() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        Todo td \u003d new Todo(\"todo jakcnkaj\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        Todo tdTwo \u003d new Todo(\"todo jnkaj\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        list.add(td);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        list.add(tdTwo);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        list.delete(1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "artlee06"
        },
        "content": "        assertEquals(1 , list.getLength());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "artlee06"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "artlee06": 34
    }
  },
  {
    "path": "text-ui-test/ACTUAL.TXT",
    "fileType": "TXT",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "artlee06"
        },
        "content": "-----------------------------------"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "artlee06"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "artlee06"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "artlee06"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "artlee06"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "artlee06"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "artlee06"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "artlee06"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "artlee06"
        },
        "content": "-----------------------------------"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "artlee06"
        },
        "content": "-----------------------------------"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "artlee06"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "artlee06"
        },
        "content": "[D][undone] return book (by: Sunday)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "artlee06"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "artlee06"
        },
        "content": "-----------------------------------"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "artlee06"
        },
        "content": "-----------------------------------"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "artlee06"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "artlee06"
        },
        "content": "[D][undone] byebyebye (by: Monday)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "artlee06"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "artlee06"
        },
        "content": "-----------------------------------"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "artlee06"
        },
        "content": "-----------------------------------"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "artlee06"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "artlee06"
        },
        "content": "[T][undone] todo borrow book"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "artlee06"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "artlee06"
        },
        "content": "-----------------------------------"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "artlee06"
        },
        "content": "-----------------------------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "artlee06"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "artlee06"
        },
        "content": "[E][undone] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "artlee06"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "artlee06"
        },
        "content": "-----------------------------------"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "artlee06"
        },
        "content": "-----------------------------------"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "artlee06"
        },
        "content": "Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "artlee06"
        },
        "content": "[D][done] return book (by: Sunday)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "artlee06"
        },
        "content": "-----------------------------------"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "artlee06"
        },
        "content": "-----------------------------------"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "artlee06"
        },
        "content": "Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "artlee06"
        },
        "content": "[E][done] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "artlee06"
        },
        "content": "-----------------------------------"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "artlee06"
        },
        "content": "-----------------------------------"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "artlee06"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "artlee06"
        },
        "content": "1. [D][done] return book (by: Sunday)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "artlee06"
        },
        "content": "2. [D][undone] byebyebye (by: Monday)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "artlee06"
        },
        "content": "3. [T][undone] todo borrow book"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "artlee06"
        },
        "content": "4. [E][done] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "artlee06"
        },
        "content": "-----------------------------------"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "artlee06"
        },
        "content": "-----------------------------------"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "artlee06"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "artlee06"
        },
        "content": "-----------------------------------"
      }
    ],
    "authorContributionMap": {
      "artlee06": 48
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "artlee06"
        },
        "content": "-----------------------------------"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "artlee06"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "artlee06"
        },
        "content": " ____        _"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "artlee06"
        },
        "content": "|  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "artlee06"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "artlee06"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "artlee06"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "artlee06"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "artlee06"
        },
        "content": "-----------------------------------"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "artlee06"
        },
        "content": "-----------------------------------"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "artlee06"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "artlee06"
        },
        "content": "[D][undone] return book (by: Sunday)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "artlee06"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "artlee06"
        },
        "content": "-----------------------------------"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "artlee06"
        },
        "content": "-----------------------------------"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "artlee06"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "artlee06"
        },
        "content": "[D][undone] byebyebye (by: Monday)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "artlee06"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "artlee06"
        },
        "content": "-----------------------------------"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "artlee06"
        },
        "content": "-----------------------------------"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "artlee06"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "artlee06"
        },
        "content": "[T][undone] todo borrow book"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "artlee06"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "artlee06"
        },
        "content": "-----------------------------------"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "artlee06"
        },
        "content": "-----------------------------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "artlee06"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "artlee06"
        },
        "content": "[E][undone] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "artlee06"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "artlee06"
        },
        "content": "-----------------------------------"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "artlee06"
        },
        "content": "-----------------------------------"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "artlee06"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "artlee06"
        },
        "content": "[D][done] return book (by: Sunday)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "artlee06"
        },
        "content": "-----------------------------------"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "artlee06"
        },
        "content": "-----------------------------------"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "artlee06"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "artlee06"
        },
        "content": "[E][done] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "artlee06"
        },
        "content": "-----------------------------------"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "artlee06"
        },
        "content": "-----------------------------------"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "artlee06"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "artlee06"
        },
        "content": "1. [D][done] return book (by: Sunday)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "artlee06"
        },
        "content": "2. [D][undone] byebyebye (by: Monday)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "artlee06"
        },
        "content": "3. [T][undone] todo borrow book"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "artlee06"
        },
        "content": "4. [E][done] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "artlee06"
        },
        "content": "-----------------------------------"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "artlee06"
        },
        "content": "-----------------------------------"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "artlee06"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "artlee06"
        },
        "content": "-----------------------------------"
      }
    ],
    "authorContributionMap": {
      "artlee06": 48
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "artlee06"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "artlee06"
        },
        "content": "deadline byebyebye /by Monday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "artlee06"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "artlee06"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "artlee06"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "artlee06"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "artlee06"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "artlee06"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "artlee06": 8
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "artlee06"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "artlee06"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "artlee06"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "artlee06"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "artlee06"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "artlee06"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "artlee06"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "artlee06"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "artlee06"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "artlee06"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "artlee06"
        },
        "content": "if ! javac -cp ../src/main/java/ -Xlint:none -d ../bin ../src/main/java/duke/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "artlee06"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "artlee06"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "artlee06"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "artlee06"
        },
        "content": "java -classpath ../bin duke/duke.Main \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "artlee06"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "artlee06"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "artlee06"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "artlee06"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "artlee06"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "artlee06"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "artlee06"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "artlee06"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "artlee06": 34
    }
  }
]
