[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "test {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}  "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joycelynteo": 41,
      "-": 20
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "T@1@read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "D@1@project@2016-08-23T22:12:45"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "T@1@sleep"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "T@0@read"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "T@0@eat"
      }
    ],
    "authorContributionMap": {
      "joycelynteo": 5
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joycelynteo": 61
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " * Duke is the main class of the program"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.png\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        storage \u003d new Storage(\"data/duke.txt\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        } catch (DukeException | FileNotFoundException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            return c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        } catch (IOException | DukeException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        stage.setTitle(\"todo list\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        // You will need to import javafx.scene.layout.Region for this."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        });"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        });"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                DialogBox.getUserDialog(userText.toString(), new ImageView(user).getImage()),"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                DialogBox.getDukeDialog(dukeText.toString(), new ImageView(duke).getImage())"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        );"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joycelynteo": 145,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joycelynteo": 13
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "joycelynteo": 31
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        startDuke();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    private void startDuke() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                DialogBox.getDukeDialog(Ui.showWelcome(), dukeImage)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        );"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    private void handleUserInput() throws IOException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        );"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joycelynteo": 66
    }
  },
  {
    "path": "src/main/java/duke/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " * AddCommand adds an event to the task list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public AddCommand(String command) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        String arr[] \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        String firstWord \u003d arr[0];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        if (firstWord.equals(\"todo\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            if (arr.length \u003e 1) { //check for errors"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                //CALL TASKLIST: add task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                tasks.addTodo(arr[1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                //CALL STORAGE: write new file"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                storage.addTodo(tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                //CALL UI: print output"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                return ui.printAddTask(tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        } else if (firstWord.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            if (arr.length \u003e 1) { //check for errors"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                //separate task and deadline"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                String arr2[] \u003d arr[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                if (arr2.length \u003e 1) { //check that deadline is specified"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                    String arr3[] \u003d arr2[1].split(\" \", 2);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                    //CALL TASKLIST: add task"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                    tasks.addDeadline(arr2[0], arr3[1]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                    //CALL STORAGE: write new file"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                    storage.addDeadline(tasks);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                    //CALL UI: print output"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                    return ui.printAddTask(tasks);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! Please specify the deadline in the format 2015-02-20T06:30:00.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        } else if (firstWord.equals(\"event\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            if (arr.length \u003e 1) { //check for errors"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                //separate task and time"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                String arr2[] \u003d arr[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                if (arr2.length \u003e 1) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                    String arr3[] \u003d arr2[1].split(\" \", 2);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                    //CALL TASKLIST: add task"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                    tasks.addEvent(arr2[0], arr3[1]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                    //CALL STORAGE: write new file"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                    storage.addEvent(tasks);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                    //CALL UI: print output"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                    return ui.printAddTask(tasks);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! Please specify event time in the format 2015-02-20T06:30:00\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joycelynteo": 81
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " * Abstract class command for all types of command"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    String command;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public Command(String command) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException ;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joycelynteo": 24
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " * DeleteCommand deletes an event from the task list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public DeleteCommand(String command) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        String arr[] \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        String firstWord \u003d arr[0];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        if (arr.length \u003e 1) { //check for errors"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            //which task to delete"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            String secNum \u003d arr[1];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            int deleteTask \u003d Integer.parseInt(secNum) - 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            assert deleteTask \u003e tasks.getList().size(): \"number not valid\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            //CALL STORAGE: write new file"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            storage.deleteTask(deleteTask, tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            //CALL UI: print output"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            String output \u003d ui.printDelete(tasks, deleteTask);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            //CALL TASKLIST: delete task"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            tasks.deleteTask(deleteTask);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please specify which task to delete.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joycelynteo": 47
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " * DoneCommand updates an event in the task from undone to done"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public DoneCommand(String command) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        String arr[] \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        String firstWord \u003d arr[0];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        if (arr.length \u003e 1) { //check for errors"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            //which task done"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            String secNum \u003d arr[1];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            int doneTask \u003d Integer.parseInt(secNum) - 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            assert doneTask \u003e tasks.getList().size(): \"number not valid\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            //CALL TASKLIST: set that task to done"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            tasks.setDone(doneTask);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            //CALL STORAGE: write new file"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            storage.updateTask(doneTask, tasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            //CALL UI: print output"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            return ui.printDone(tasks, doneTask);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please specify which task you\u0027ve done.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joycelynteo": 45
    }
  },
  {
    "path": "src/main/java/duke/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " * ExitCommand exits the program"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.util.concurrent.Executors;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.util.concurrent.TimeUnit;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public ExitCommand(String command) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        Executors.newSingleThreadScheduledExecutor()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                .schedule(() -\u003e System.exit(0), 1, TimeUnit.SECONDS);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joycelynteo": 31
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " * FindCommand finds the corresponding tasks in the task list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public FindCommand(String command) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        output +\u003d \"Here are the matching tasks in your list:\" + \"\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        List\u003cTask\u003e matchList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        String arr[] \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        String word \u003d arr[1];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        List\u003cTask\u003e list \u003d tasks.getList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            Task task \u003d list.get(i);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            String taskDescription \u003d task.getDescription();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            if (taskDescription.contains(word)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                matchList.add(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        output +\u003d ui.printList(matchList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joycelynteo": 45
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " * ListCommand outputs the task list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public ListCommand(String command) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        output +\u003d \"Here are the tasks in your list:\" + \"\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        List\u003cTask\u003e list \u003d tasks.getList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        output +\u003d ui.printList(list);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joycelynteo": 34
    }
  },
  {
    "path": "src/main/java/duke/commands/NullCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " * NullCommand takes care of all commands and errors"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "public class NullCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public NullCommand(String command) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joycelynteo": 25
    }
  },
  {
    "path": "src/main/java/duke/commands/UndoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.tasks.Events;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.tasks.ToDos;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "public class UndoCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public UndoCommand(String command) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        String lastCommand \u003d Parser.lastCommand;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        Parser.lastCommand \u003d \"undo\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        String arr[] \u003d lastCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        String firstWord \u003d arr[0];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            return \"undo not applicable\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            return \"undo not applicable\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        } else if (firstWord.equals(\"done\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            if (arr.length \u003e 1) { //check for errors"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                //which task done"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                String secNum \u003d arr[1];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                int doneTask \u003d Integer.parseInt(secNum) - 1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                //CALL TASKLIST: set that task to done"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                tasks.undoDone(doneTask);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                //CALL STORAGE: write new file"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                storage.undoUpdateTask(doneTask, tasks);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                //CALL UI: print output"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                return ui.printUndoDone(tasks, doneTask);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Previous command had an error.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        } else if (firstWord.equals(\"delete\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            if (arr.length \u003e 1) { //check for errors"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                //which task to delete"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                String delete \u003d Parser.lastDeleted;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                String[] deletedTask \u003d delete.split(\"@\", 4);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                if (deletedTask[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                    ToDos t \u003d new ToDos(deletedTask[2]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                    if (deletedTask[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                        t.setDone();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                    tasks.getList().add(t);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                    storage.addTodo(tasks);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                } else if (deletedTask[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                    Deadline d \u003d new Deadline(deletedTask[2], deletedTask[3]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                    if (deletedTask[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                        d.setDone();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                    tasks.getList().add(d);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                    storage.addDeadline(tasks);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                } else if (deletedTask[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                    Events e \u003d new Events(deletedTask[2], deletedTask[3]);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                    if (deletedTask[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                        e.setDone();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                    tasks.getList().add(e);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                    storage.addEvent(tasks);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Previous command had an error.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            return \"undo deleted\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        } else if (firstWord.equals(\"find\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            return \"undo not applicable\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        } else if (firstWord.equals(\"todo\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            int lastTask \u003d tasks.getList().size();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            return new DeleteCommand(\"delete \" + lastTask).execute(tasks,ui, storage);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        } else if (firstWord.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            int lastTask \u003d tasks.getList().size();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            return new DeleteCommand(\"delete \" + lastTask).execute(tasks,ui, storage);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        } else if (firstWord.equals(\"event\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            int lastTask \u003d tasks.getList().size();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            return new DeleteCommand(\"delete \" + lastTask).execute(tasks,ui, storage);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        } else if (firstWord.equals(\"undo\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            return \"undo not applicable\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Previous command had an error.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joycelynteo": 104
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " * DukeException handles all kinds of exceptions that arise from Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joycelynteo": 11
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " * Parser makes sense of the user command and calls"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " * the respective command class"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.commands.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public static String lastCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public static String lastDeleted;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public Parser() {}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public static Command parse(String command) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        String arr[] \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        String firstWord \u003d arr[0];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            lastCommand \u003d command;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            return new ExitCommand(command);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            lastCommand \u003d command;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            return new ListCommand(command);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        } else if (firstWord.equals(\"done\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            lastCommand \u003d command;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            return new DoneCommand(command);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        } else if (firstWord.equals(\"delete\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            lastCommand \u003d command;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            return new DeleteCommand(command);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        } else if (firstWord.equals(\"find\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            lastCommand \u003d command;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            return new FindCommand(command);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        } else if (firstWord.equals(\"todo\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            lastCommand \u003d command;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            return new AddCommand(command);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        } else if (firstWord.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            lastCommand \u003d command;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            return new AddCommand(command);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        } else if (firstWord.equals(\"event\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            lastCommand \u003d command;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            return new AddCommand(command);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        } else if (firstWord.equals(\"undo\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            return new UndoCommand(command);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joycelynteo": 54
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " * Storage stores and updates the duke text file"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " * of any changes in the text list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.tasks.Events;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.tasks.ToDos;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    File file;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    String filepath;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        file \u003d new File(filepath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        file.getParentFile().mkdir();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "     * load() fetches existing information from the text file and"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "     * updates the task list. load() is called when Duke starts."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        Scanner scanExisting \u003d new Scanner(file);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        while (scanExisting.hasNext()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            String line \u003d scanExisting.nextLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            String[] addLine \u003d line.split(\"@\", 4);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            if (addLine[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                ToDos t \u003d new ToDos(addLine[2]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                if (addLine[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                    t.setDone();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                list.add(t);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            } else if (addLine[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                Deadline d \u003d new Deadline(addLine[2], addLine[3]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                if (addLine[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                    d.setDone();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                list.add(d);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            } else if (addLine[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                Events e \u003d new Events(addLine[2], addLine[3]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                if (addLine[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                    e.setDone();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                list.add(e);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "     * updateTask() updates the information int the text file when a task is completed"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public void updateTask(int doneTask, TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        List\u003cTask\u003e list \u003d tasks.getList();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        FileReader fr \u003d new FileReader(filepath);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        List\u003cString\u003e tempArr \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            if (i \u003d\u003d doneTask) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                String oldLine \u003d br.readLine();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                String updatedLine \u003d oldLine.replaceFirst(\"0\", \"1\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                tempArr.add(updatedLine);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                tempArr.add(br.readLine());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        Files.delete(Paths.get(filepath));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        File newFile \u003d new File(filepath);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filepath);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        for (int j \u003d 0; j \u003c tempArr.size(); j++) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            if (j \u003d\u003d 0) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                fw.write(tempArr.get(j));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                fw.write(\"\\n\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                fw.write(tempArr.get(j));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "     * undoUpdateTask() updates the information int the text file when a task is undone"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public void undoUpdateTask(int doneTask, TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        List\u003cTask\u003e list \u003d tasks.getList();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        FileReader fr \u003d new FileReader(filepath);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        List\u003cString\u003e tempArr \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            if (i \u003d\u003d doneTask) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                String oldLine \u003d br.readLine();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                String updatedLine \u003d oldLine.replaceFirst(\"1\", \"0\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                tempArr.add(updatedLine);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                tempArr.add(br.readLine());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        Files.delete(Paths.get(filepath));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        File newFile \u003d new File(filepath);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filepath);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        for (int j \u003d 0; j \u003c tempArr.size(); j++) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            if (j \u003d\u003d 0) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                fw.write(tempArr.get(j));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                fw.write(\"\\n\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                fw.write(tempArr.get(j));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "     * deleteTask() updates the information int the text file when a task is deleted"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public void deleteTask(int deleteTask, TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        List\u003cTask\u003e list \u003d tasks.getList();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        FileReader fr \u003d new FileReader(filepath);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        List\u003cString\u003e tempArr \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            if (i \u003d\u003d deleteTask) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                String delete \u003d br.readLine();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                Parser.lastDeleted \u003d delete;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                tempArr.add(br.readLine());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        Files.delete(Paths.get(filepath));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        File newFile \u003d new File(filepath);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filepath);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        for (int j \u003d 0; j \u003c tempArr.size(); j++) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            if (j \u003d\u003d 0) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                fw.write(tempArr.get(j));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                fw.write(\"\\n\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                fw.write(tempArr.get(j));"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "     * addTodo() adds the new todo task to the text file"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public void addTodo(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        List\u003cTask\u003e list \u003d tasks.getList();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        Task t \u003d list.get(list.size() - 1);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filepath, true);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        fw.write(\"\\n\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        fw.write(\"T@\" + t.getStatusNumber() + \"@\" + t.getDescription());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "     * addDeadline() adds the new deadline task to the text file"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public void addDeadline(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        List\u003cTask\u003e list \u003d tasks.getList();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        Task t \u003d list.get(list.size() - 1);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filepath, true);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        fw.write(\"\\n\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        fw.write(\"D@\" + t.getStatusNumber() + \"@\" + t.getDescription() + \"@\" + t.getDetails());"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "     * addEvent() adds the new event task to the text file"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public void addEvent(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        List\u003cTask\u003e list \u003d tasks.getList();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        Task t \u003d list.get(list.size() - 1);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filepath, true);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        fw.write(\"\\n\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        fw.write(\"E@\" + t.getStatusNumber() + \"@\" + t.getDescription() + \"@\" + t.getDetails());"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joycelynteo": 203
    }
  },
  {
    "path": "src/main/java/duke/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " * contains the task list, including operations to add/delete tasks in that list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "//contains the task list (contains operations to add/delete tasks in the list)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.tasks.Events;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.tasks.ToDos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    private List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public TaskList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public void setDone(int doneTask) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        Task t \u003d list.get(doneTask);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        t.setDone();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public void undoDone(int doneTask) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        Task t \u003d list.get(doneTask);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        t.undoDone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public void deleteTask(int deleteTask) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        Task t \u003d list.get(deleteTask);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        list.remove(deleteTask);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public void addTodo(String task) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        ToDos t \u003d new ToDos(task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        list.add(t);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public void addDeadline(String task, String deadline) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        Deadline d \u003d new Deadline(task, deadline);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        list.add(d);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public void addEvent(String event, String time) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        Events e \u003d new Events(event, time);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        list.add(e);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joycelynteo": 61
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " * Deadline is a type of task that can be stored in the task list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    protected LocalDateTime dateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        dateTime \u003d LocalDateTime.parse(by);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public String getDetails() { return by; }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                + DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                .format(dateTime) + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joycelynteo": 32
    }
  },
  {
    "path": "src/main/java/duke/tasks/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " * Events is a type of task that can be stored in the task list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    protected LocalDateTime dateTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public Events(String description, String at) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        dateTime \u003d LocalDateTime.parse(at);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public String getDetails() { return at; }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                + DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                .format(dateTime) + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joycelynteo": 33
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " * Task is the parent class of all types of events, contains methods that all events share"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public String getStatusNumber() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        return (isDone ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public void undoDone() { isDone \u003d false; }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public String getDetails() { return \"\"; }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joycelynteo": 40
    }
  },
  {
    "path": "src/main/java/duke/tasks/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " * ToDos is a type of task that can be stored in the task list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public ToDos(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joycelynteo": 18
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " * Ui deals with user inputs and outputs"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    Scanner sc;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public static String showWelcome() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        return \"Hello I\u0027m Duke.\" + \"\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                + \"What can I do for you?\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public String showLine() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        return \"____________________________________________________________\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        return line;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public String showLoadingError() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        return \"no data to load, new list is empty.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public String showError(String message) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public String printList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        if (!list.isEmpty()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                Task t \u003d list.get(i);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                output +\u003d (i+1) + \".\" + t.toString() + \"\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public String printDone(TaskList tasks, int doneTask) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        output +\u003d \"Nice! I\u0027ve marked this task as done:\" + \"\\n\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        Task t \u003d tasks.getList().get(doneTask);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        output +\u003d t.toString();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public String printUndoDone(TaskList tasks, int doneTask) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        output +\u003d \"I\u0027ve set this task back to undone\" + \"\\n\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        Task t \u003d tasks.getList().get(doneTask);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        output +\u003d t.toString();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public String printDelete(TaskList tasks, int deleteTask) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        List\u003cTask\u003e list \u003d tasks.getList();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        output +\u003d \"Noted. I\u0027ve removed this task:\" + \"\\n\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        Task t \u003d list.get(deleteTask);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        output +\u003d t.toString() + \"\\n\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        output +\u003d \"Now you have \" + (list.size() - 1) + \" tasks in the list.\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public String printAddTask(TaskList tasks) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        List\u003cTask\u003e list \u003d tasks.getList();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        Task t \u003d list.get(list.size() - 1);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        output +\u003d \"Got it. I\u0027ve added this task:\" + \"\\n\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        output +\u003d t.toString() + \"\\n\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        output +\u003d \"Now you have \" + list.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joycelynteo": 90
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "joycelynteo": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "joycelynteo": 19
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joycelynteo": 10
    }
  },
  {
    "path": "src/test/java/tasks/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public void deadlineTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        Task t \u003d new Deadline(\"project\", \"2016-08-23T22:12:45\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        String expected \u003d \"[D][\\u2718] project (by: 23 Aug 2016, 10:12:45 PM)\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        assertEquals(expected, t.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joycelynteo": 15
    }
  },
  {
    "path": "src/test/java/tasks/ToDosTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import duke.tasks.ToDos;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "public class ToDosTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    public void todosTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        Task t \u003d new ToDos(\"assignment\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        String expected \u003d \"[T][\\u2718] assignment\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "        assertEquals(expected, t.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joycelynteo": 15
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "Hello I\u0027m Duke."
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "[T][✘] borrow book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "joycelynteo": 6
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "joycelynteo": 2
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin /Users/joycelyn/duke/src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joycelynteo"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "joycelynteo": 34
    }
  }
]
