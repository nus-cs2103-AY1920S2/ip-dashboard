[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "nathanaelseen": 2
    }
  },
  {
    "path": "src/main/java/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private CommandType commandType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private String[] params;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public Command(CommandType commandType, String[] params) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        this.commandType \u003d commandType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        this.params \u003d params;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public CommandType getCommandType() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return commandType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String[] getParams() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return params;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nathanaelseen": 19
    }
  },
  {
    "path": "src/main/java/duke/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    LIST_CMD(\"list\"),"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    DONE_CMD(\"done\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    DELETE_CMD(\"delete\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    TODO_CMD(\"todo\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    DEADLINE_CMD(\"deadline\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    EVENT_CMD(\"event\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    BYE_CMD(\"bye\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private CommandType(String name) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nathanaelseen": 22
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private LocalDate by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public Deadline(String name, LocalDate by) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public Deadline(String name, LocalDate by, boolean isDone) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return by.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String getMnemonic() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return \"[\" + getMnemonic() + \"]\" + super.toString()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyy\")) + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nathanaelseen": 33
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public Duke(String filePath) throws IOException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        taskList \u003d storage.load();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private void addAndPrintTask(Task t, TaskList taskList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        taskList.addTask(t);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        ui.printAddedTask(t, taskList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private int extractTaskIndexFromCmdParam(Command command) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return (Integer.parseInt(command.getParams()[0]) - 1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        ui.printWelcomeMsg();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                t \u003d null;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                Command command \u003d parser.parse(ui.readCmd(), taskList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                switch (command.getCommandType()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                    case LIST_CMD:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                        ui.printTaskList(taskList);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                    case DONE_CMD:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                        index \u003d extractTaskIndexFromCmdParam(command);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                        t \u003d taskList.getTask(index);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                        taskList.markAsDone(index);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                        ui.printTaskMarkedDone(t);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                        storage.saveTasksToFile(taskList);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                    case DELETE_CMD:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                        index \u003d extractTaskIndexFromCmdParam(command);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                        t \u003d taskList.getTask(index);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                        taskList.deleteTask(index);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                        ui.printTaskDeleted(t, taskList);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                        storage.saveTasksToFile(taskList);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                    case TODO_CMD:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                        t \u003d new Todo(command.getParams()[0]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                        addAndPrintTask(t, taskList);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                        storage.saveTasksToFile(taskList);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                    case DEADLINE_CMD:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                        t \u003d new Deadline(command.getParams()[0], LocalDate.parse(command.getParams()[1]));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                        addAndPrintTask(t, taskList);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                        storage.saveTasksToFile(taskList);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                    case EVENT_CMD:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                        t \u003d new Event(command.getParams()[0], LocalDate.parse(command.getParams()[1]));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                        addAndPrintTask(t, taskList);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                        storage.saveTasksToFile(taskList);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                    case BYE_CMD:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                        ui.printByeMsg();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                ui.printLine(e + Ui.LF);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            new Duke(Storage.DUKE_TXT_FILE_PATH).run();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            ui.printLine(\"Sorry, an IO error has occurred:\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "nathanaelseen": 96
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        // Call constructor of parent Exception"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return \"OOPS!!! \" + getMessage();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nathanaelseen": 13
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private LocalDate at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public Event(String name, LocalDate at) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public Event(String name, LocalDate at, boolean isDone) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return at.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String getMnemonic() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return \"[\" + getMnemonic() + \"]\" + super.toString()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"MMM d yyy\")) +  \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nathanaelseen": 33
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private  boolean canSplitStr(String str, String regex) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        String[] strArr \u003d str.split(regex);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return (strArr.length \u003d\u003d 2);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private  boolean validId(String strId, TaskList tasks) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        int id;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            id \u003d Integer.parseInt(strId);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        if ((id - 1) \u003e tasks.getNumTasks() - 1 || (id - 1) \u003c 0) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public Command parse(String cmd, TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        String[] strArr;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        String str1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        if (cmd.equals(CommandType.LIST_CMD.toString())) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            return new Command(CommandType.LIST_CMD, null);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        } else if (cmd.startsWith(CommandType.DONE_CMD.toString())) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            if (!canSplitStr(cmd, \"done\\\\s+\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                throw new DukeException(\"The task to mark done cannot be empty\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            str1 \u003d cmd.split(\"done\\\\s+\")[1];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            if (!validId(str1, tasks)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                throw new DukeException(\"The task to mark done is not in the list\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            return new Command(CommandType.DONE_CMD, new String[] { str1 });"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        } else if (cmd.startsWith(CommandType.DELETE_CMD.toString())) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            if (!canSplitStr(cmd, \"delete\\\\s+\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                throw new DukeException(\"The task to delete cannot be empty\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            str1 \u003d cmd.split(\"delete\\\\s+\")[1];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            if (!validId(str1, tasks)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                throw new DukeException(\"The task to mark delete is not in the list\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            return new Command(CommandType.DELETE_CMD, new String[] { str1 });"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        } else if (cmd.startsWith(CommandType.TODO_CMD.toString())) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            if (!canSplitStr(cmd, \"todo\\\\s+\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                throw new DukeException(\"The description of a todo cannot be empty\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            str1  \u003d cmd.split(\"todo\\\\s+\")[1];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            return new Command(CommandType.TODO_CMD, new String[] { str1 });"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        } else if (cmd.startsWith(CommandType.DEADLINE_CMD.toString())) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            if (!canSplitStr(cmd, \"deadline\\\\s+\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                throw new DukeException(\"The description and timing of a deadline cannot be empty\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            str1 \u003d cmd.split(\"deadline\\\\s+\")[1];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            if (!canSplitStr(str1, \"\\\\s+/by\\\\s+\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                throw new DukeException(\"Both the description and timing of a deadline cannot be empty\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            strArr \u003d str1.split(\"\\\\s+/by\\\\s+\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            String name \u003d strArr[0];"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            String by \u003d strArr[1];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            return new Command(CommandType.DEADLINE_CMD, new String[] { name, by });"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        } else if (cmd.startsWith(CommandType.EVENT_CMD.toString())) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            if (!canSplitStr(cmd, \"event\\\\s+\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                System.out.println(\"went here\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                throw new DukeException(\"The description and timing of an event cannot be empty\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            str1 \u003d cmd.split(\"event\\\\s+\")[1];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            if (!canSplitStr(str1, \"\\\\s+/at\\\\s+\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                System.out.println(\"went here 2\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                throw new DukeException(\"Both the description and timing of an event cannot be empty\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            strArr \u003d str1.split(\"\\\\s+/at\\\\s+\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            String name \u003d strArr[0];"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            String at \u003d strArr[1];"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            return new Command(CommandType.DEADLINE_CMD, new String[] { name, at });"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        } else if (cmd.equals(CommandType.BYE_CMD.toString())) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            return new Command(CommandType.BYE_CMD, null);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nathanaelseen": 109
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private static final String PIPE \u003d \"|\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private static final String LF \u003d \"\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public static final String DUKE_TXT_FILE_PATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public Storage(String filePath) throws IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        file \u003d new File(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            // Create file if it does not already exists"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        scanner \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public TaskList load() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        String[] strArr;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            String line \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            strArr \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            String type \u003d strArr[0];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            boolean isDone \u003d strArr[1].equals(\"1\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            String name \u003d strArr[2];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            t \u003d null;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                t \u003d new Todo(name, isDone);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            } else if (type.equals(\"E\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                t \u003d new Event(name, LocalDate.parse(strArr[3]), isDone);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            } else if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                t \u003d new Deadline(name, LocalDate.parse(strArr[3]), isDone);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            // Add task t to ArrayList"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            taskList.addTask(t);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public void saveTasksToFile(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        int len \u003d taskList.getNumTasks();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        for (int i \u003d 0; i \u003c len; ++i) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            Task t \u003d taskList.getTask(i);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            String name \u003d t.getName();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            String doneStatus \u003d t.getDone() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            String mnemonic \u003d t.getMnemonic();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            if (t instanceof Todo) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                sb.append(mnemonic + PIPE + doneStatus + PIPE + name);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            } else if (t instanceof Event) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                sb.append(mnemonic + PIPE + doneStatus + PIPE + name + PIPE + ((Event) t).getAt());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            } else if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                sb.append(mnemonic + PIPE + doneStatus + PIPE + name + PIPE + ((Deadline) t).getBy());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            if (i \u003c (len - 1)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                sb.append(LF);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        fw.write(sb.toString());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nathanaelseen": 88
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public Task(String name, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public abstract String getMnemonic();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return (\"[\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"] \" + name);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nathanaelseen": 35
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public int getNumTasks() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public void markAsDone(int index) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        tasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nathanaelseen": 32
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public Todo(String name) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public Todo(String name, boolean isDone) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String getMnemonic() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return \"[\" + getMnemonic() + \"]\" + super.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nathanaelseen": 22
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public static final String LF \u003d \"\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private static final String WELCOME_MSG \u003d \"Hello! I\u0027m duke.Duke\" + LF + \"What can I do for you?\" + LF;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private static final String BYE_MSG \u003d \"Bye, hope to see you again soon!\" + LF;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private BufferedReader br;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        br \u003d new BufferedReader(new InputStreamReader(System.in));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public void printWelcomeMsg() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        System.out.println(WELCOME_MSG);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public void printByeMsg() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        System.out.println(BYE_MSG);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String readCmd() throws IOException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return br.readLine().trim();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public void printLine(String line) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public void printLine() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public void printAddedTask(Task t, TaskList taskList) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        this.printLine(\"Got it! I\u0027ve added this task:\" + Ui.LF + \"    \" + t + Ui.LF"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                + \"Now, you have \" + taskList.getNumTasks() + \" item(s) in your list.\" + Ui.LF);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public void printTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        this.printLine(\"Here are your task(s):\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        int len \u003d taskList.getNumTasks();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        for (int i \u003d 0; i \u003c len; ++i) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            Task t \u003d taskList.getTask(i);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            this.printLine(\"    \" + (i + 1) + \". \" + t);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        this.printLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public void printTaskMarkedDone(Task t) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        this.printLine(\"Nice! I\u0027ve marked this task as done:\" + Ui.LF + \"    \" + t + Ui.LF);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public void printTaskDeleted(Task t, TaskList taskList) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        this.printLine(\"Noted! I\u0027ve removed this task:\" + Ui.LF + \"    \" + t + Ui.LF"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                + \"Now, you have \" + taskList.getNumTasks() + \" item(s) in your list.\" + Ui.LF);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nathanaelseen": 64
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import duke.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public void getMnemonic() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        Task task \u003d new Deadline(\"\", null, false);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        assertEquals(\"D\", task.getMnemonic());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public void getName() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        Task task \u003d new Deadline(\"abc\", null, false);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        assertEquals(\"abc\", task.getName());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nathanaelseen": 18
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import duke.Event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public void getMnemonic() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        Task task \u003d new Event(\"\", null, false);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        assertEquals(\"E\", task.getMnemonic());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public void getName() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        Task task \u003d new Event(\"abc\", null, false);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        assertEquals(\"abc\", task.getName());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nathanaelseen": 18
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "Hello! I\u0027m duke.Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "Here are your task(s):"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "Got it! I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    [T][✘] borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "Now, you have 1 item(s) in your list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "Here are your task(s):"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    1. [T][✘] borrow book"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "Got it! I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "Now, you have 2 item(s) in your list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "Here are your task(s):"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    1. [T][✘] borrow book"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    2. [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    [D][✓] return book (by: Sunday)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "Here are your task(s):"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    1. [T][✘] borrow book"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    2. [D][✓] return book (by: Sunday)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "Got it! I\u0027ve added this task:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    [E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "Now, you have 3 item(s) in your list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "Here are your task(s):"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    1. [T][✘] borrow book"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    2. [D][✓] return book (by: Sunday)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    3. [E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    [T][✓] borrow book"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "Here are your task(s):"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    1. [T][✓] borrow book"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    2. [D][✓] return book (by: Sunday)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    3. [E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    [E][✓] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "Here are your task(s):"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    1. [T][✓] borrow book"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    2. [D][✓] return book (by: Sunday)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    3. [E][✓] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "Bye, hope to see you again soon!"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "nathanaelseen": 54
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "nathanaelseen": 14
    }
  },
  {
    "path": "text-ui-test/runtime.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke.Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "nathanaelseen": 34
    }
  }
]
