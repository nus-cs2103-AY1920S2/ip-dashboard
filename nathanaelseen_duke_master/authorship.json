[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "nathanaelseen": 2
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.8\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    archiveVersion \u003d \"0.2.0\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "sourceCompatibility \u003d 11"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027 , \u0027javafx.fxml\u0027]"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "test {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    applicationDefaultJvmArgs \u003d [\u0027-ea\u0027]"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 18,
      "nathanaelseen": 43
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "# Features\u003cbr/\u003e\u003cbr/\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "## Adding Todo Tasks"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Adds a Todo Task to the task list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "### \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Usage"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Example of usage: "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;`todo [task name]`\u003cbr/\u003e\u003cbr/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "## Adding Deadline Tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Adds a Deadline Task to the task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "### \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Usage"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Example of usage: "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;`deadline [task name] [date]`\u003cbr/\u003e\u003cbr/\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "## Adding Event Tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Adds a Event Task to the task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "### \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Usage"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Example of usage: "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;`event [task name] [date]`\u003cbr/\u003e\u003cbr/\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "## Listing all Tasks "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Displays all Tasks in the current task list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "### \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Usage"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Example of usage: "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;`list`\u003cbr/\u003e\u003cbr/\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "## Marking a Task as Done"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Marks the current Task with the \u0027Done\u0027 status."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "### \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Usage"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Example of usage: "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;`done [task index]`\u003cbr/\u003e\u003cbr/\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "## Removing a current Task"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Deletes the current Task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "### \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Usage"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Example of usage: "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;`delete [task index]`\u003cbr/\u003e\u003cbr/\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "## Displaying Help Message"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Displays a help message listing all possible commands."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "### \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Usage"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Example of usage: "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;`help`\u003cbr/\u003e\u003cbr/\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "## Exiting the Application"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Terminates the program."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "### \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Usage"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;Example of usage: "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;`bye`\u003cbr/\u003e\u003cbr/\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 14,
      "nathanaelseen": 63
    }
  },
  {
    "path": "src/main/java/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": " * Represents a Command entered by the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private CommandType commandType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private String[] params;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Constructs a Command object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param commandType A specific command type entered by the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param params The arguments related to the command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public Command(CommandType commandType, String[] params) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        this.commandType \u003d commandType;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        this.params \u003d params;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Returns the specific command type for the command entered by the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @return Command type."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public CommandType getCommandType() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return commandType;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Returns the arguments related to the command entered by the user."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @return Command arguments."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String[] getParams() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return this.params;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nathanaelseen": 38
    }
  },
  {
    "path": "src/main/java/duke/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": " * Represents the type of command entered by the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    LIST_CMD(\"list\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    DONE_CMD(\"done\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    DELETE_CMD(\"delete\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    TODO_CMD(\"todo\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    DEADLINE_CMD(\"deadline\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    EVENT_CMD(\"event\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    FIND_CMD(\"find\"),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    HELP_CMD(\"help\"),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    BYE_CMD(\"bye\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    CommandType(String name) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nathanaelseen": 27
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": " * Represents a Deadline Task the user would record."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private LocalDate by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Constructs a new Deadline object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param name Name of Deadline Task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param by Deadline of the Task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public Deadline(String name, LocalDate by) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Constructs a new Deadline object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param name Name of Deadline Task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param by Deadline of the Task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param isDone Done status of the Task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public Deadline(String name, LocalDate by, boolean isDone) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Returns a string representation of the deadline of the Task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @return Deadline of the Task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return by.toString();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String getMnemonic() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return \"[\" + getMnemonic() + \"]\" + super.toString()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyy\")) + \")\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nathanaelseen": 54
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import javafx.scene.control.TextArea;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private TextArea dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Returns the user dialog box."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param text Text to place in dialog box."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param img Image to place in dialog box."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @return User dialog box."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Returns the Duke dialog box."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param text Text to place in dialog box."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param img Image to place in dialog box."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @return Duke dialog box."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "}"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "nathanaelseen": 76
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": " * Embeds the main logic of the program and acts as the program driver, invoking relevant classes."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Constructs a new Duke object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            parser \u003d new Parser();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            storage \u003d new Storage(Storage.DUKE_TXT_FILE_PATH);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            taskList \u003d storage.load();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Adds a Task to the task-list and prints the added Task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param t Task to be added to the list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param taskList Current collection of all Tasks so far."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @return The task that was added to list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @throws IOException If IO error occurred."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private String addPrintStoreTask(Task t, TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        taskList.addTask(t);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        storage.saveTasksToFile(taskList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return ui.printAddedTask(t, taskList);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Extracts the Task index, as per the task-list, from the Command object."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param command Command object representing command enetered by user."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @return Task index, as per the task-list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private int extractTaskIndexFromCmdParam(Command command) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return (Integer.parseInt(command.getParams()[0]) - 1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String getResponse(String input) throws IOException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        TaskList foundTaskList;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            t \u003d null;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            Command command \u003d parser.parse(ui.readCmd(input), taskList);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            assert command !\u003d null;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            switch (command.getCommandType()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            case LIST_CMD:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                return ui.printTaskList(taskList);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            case DONE_CMD:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                index \u003d extractTaskIndexFromCmdParam(command);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                t \u003d taskList.getTask(index);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                taskList.markAsDone(index);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                storage.saveTasksToFile(taskList);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                return ui.printTaskMarkedDone(t);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            case DELETE_CMD:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                index \u003d extractTaskIndexFromCmdParam(command);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                t \u003d taskList.getTask(index);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                taskList.deleteTask(index);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                storage.saveTasksToFile(taskList);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                return ui.printTaskDeleted(t, taskList);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            case TODO_CMD:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                t \u003d new Todo(command.getParams()[0]);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                return addPrintStoreTask(t, taskList);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            case DEADLINE_CMD:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                t \u003d new Deadline(command.getParams()[0], LocalDate.parse(command.getParams()[1]));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                return addPrintStoreTask(t, taskList);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            case EVENT_CMD:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                t \u003d new Event(command.getParams()[0], LocalDate.parse(command.getParams()[1]));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                return addPrintStoreTask(t, taskList);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            case FIND_CMD:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                foundTaskList \u003d taskList.findByKeyword(command.getParams()[0]);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                return ui.printFoundTaskList(foundTaskList);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            case HELP_CMD:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                return ui.printHelpMsg();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            case BYE_CMD:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                return ui.printByeMsg();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            return ui.printLine(e + Ui.LF);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return \"error\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "nathanaelseen": 116
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": " * Represents any error that occurs in the context of Duke (excluding IO application)."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Constructs a new Duke Exception object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param s The message of the error."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return \"OOPS!!! \" + getMessage();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nathanaelseen": 20
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": " * Represents an Event Task the user would record."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private LocalDate at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Constructs a new Event object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param name Name of Event Task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param at Timing of the Event Task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public Event(String name, LocalDate at) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Constructs a new Event object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param name Name of Event Task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param at timing of the event task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param isDone Done status of the task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public Event(String name, LocalDate at, boolean isDone) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Returns a string representation of the timing of the Event Task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @return Timing of the Event Task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return at.toString();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String getMnemonic() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return \"[\" + getMnemonic() + \"]\" + super.toString()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"MMM d yyy\")) +  \")\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nathanaelseen": 54
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nathanaelseen": 9
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": " * A GUI for duke.Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Creates a Main instance object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public Main() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        duke \u003d new Duke();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nathanaelseen": 37
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": " * Controller for duke.MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public MainWindow() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Sets the Duke object instance."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param d Duke object instance to set to."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        assert d !\u003d null;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing duke.Duke\u0027s reply and"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * then appends them to"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        String response \u003d null;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            if (response.equals(Ui.BYE_MSG)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                System.exit(0);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            System.out.println(\"Sorry, an IO error has occurred:\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        );"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nathanaelseen": 80
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": " * Helps to parse and handle raw user commands from the user to commands \u0027understandable\u0027 by the rest of Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Creates a new Parser object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Determines if a string can be split (into 2 parts), based on a certain delimiter."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param str The string which is to be split."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param regex The delimiter or regex to split the string by."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @return True if string can be split, false otherwise."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private boolean canSplitStr(String str, String regex) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        String[] strArr \u003d str.split(regex);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return (strArr.length \u003d\u003d 2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Checks if the integer ID for accessing the Task in the task-list is valid."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param strId Integer ID in String format."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param tasks The task-list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @return True if the string represents a valid ID, false otherwise."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private boolean isValidId(String strId, TaskList tasks) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        int id;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            id \u003d Integer.parseInt(strId);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return (!((id - 1) \u003e tasks.getNumTasks() - 1 || (id - 1) \u003c 0));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Parses raw commands from user input."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param cmd The raw command entered by user."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param tasks The current task-list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @return Command object representing the parsed user command."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @throws DukeException If the command is invalid or if there were errors parsing the command."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public Command parse(String cmd, TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        String[] strArr;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        String str1;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        if (cmd.equals(CommandType.LIST_CMD.toString())) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            return new Command(CommandType.LIST_CMD, null);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        } else if (cmd.startsWith(CommandType.DONE_CMD.toString())) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            if (!canSplitStr(cmd, \"done\\\\s+\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                throw new DukeException(\"The task to mark done cannot be empty\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            str1 \u003d cmd.split(\"done\\\\s+\")[1];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            if (!isValidId(str1, tasks)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                throw new DukeException(\"The task to mark done is not in the list\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            return new Command(CommandType.DONE_CMD, new String[] { str1 });"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        } else if (cmd.startsWith(CommandType.DELETE_CMD.toString())) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            if (!canSplitStr(cmd, \"delete\\\\s+\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                throw new DukeException(\"The task to delete cannot be empty\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            str1 \u003d cmd.split(\"delete\\\\s+\")[1];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            if (!isValidId(str1, tasks)) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                throw new DukeException(\"The task to mark delete is not in the list\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            return new Command(CommandType.DELETE_CMD, new String[] { str1 });"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        } else if (cmd.startsWith(CommandType.TODO_CMD.toString())) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            if (!canSplitStr(cmd, \"todo\\\\s+\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                throw new DukeException(\"The description of a todo cannot be empty\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            str1  \u003d cmd.split(\"todo\\\\s+\")[1];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            return new Command(CommandType.TODO_CMD, new String[] { str1 });"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        } else if (cmd.startsWith(CommandType.DEADLINE_CMD.toString())) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            if (!canSplitStr(cmd, \"deadline\\\\s+\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                throw new DukeException(\"The description and timing of a deadline cannot be empty\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            str1 \u003d cmd.split(\"deadline\\\\s+\")[1];"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            if (!canSplitStr(str1, \"\\\\s+/by\\\\s+\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                throw new DukeException(\"Both the description and timing of a deadline cannot be empty\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            strArr \u003d str1.split(\"\\\\s+/by\\\\s+\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            String name \u003d strArr[0];"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            String by \u003d strArr[1];"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            return new Command(CommandType.DEADLINE_CMD, new String[] { name, by });"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        } else if (cmd.startsWith(CommandType.EVENT_CMD.toString())) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            if (!canSplitStr(cmd, \"event\\\\s+\")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                throw new DukeException(\"The description and timing of an event cannot be empty\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            str1 \u003d cmd.split(\"event\\\\s+\")[1];"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            if (!canSplitStr(str1, \"\\\\s+/at\\\\s+\")) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                throw new DukeException(\"Both the description and timing of an event cannot be empty\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            strArr \u003d str1.split(\"\\\\s+/at\\\\s+\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            String name \u003d strArr[0];"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            String at \u003d strArr[1];"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            return new Command(CommandType.EVENT_CMD, new String[] { name, at });"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        } else if (cmd.startsWith(CommandType.FIND_CMD.toString())) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            if (!canSplitStr(cmd, \"find\\\\s+\")) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                throw new DukeException(\"The description of a todo cannot be empty\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            str1  \u003d cmd.split(\"find\\\\s+\")[1];"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            return new Command(CommandType.FIND_CMD, new String[] { str1 });"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        } else if (cmd.equals(CommandType.HELP_CMD.toString())) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            return new Command(CommandType.HELP_CMD, null);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        } else if (cmd.equals(CommandType.BYE_CMD.toString())) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            return new Command(CommandType.BYE_CMD, null);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nathanaelseen": 141
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": " * Interfaces with the Java File IO API, to open, read, and write to the data (text) file."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private static final String PIPE \u003d \"|\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private static final String LF \u003d \"\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public static final String DUKE_TXT_FILE_PATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Constructs a new Storage object. Opens the file if it exists, else creates a new one."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param filePath The relative file path of the data (text) file on the computer."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @throws IOException If there are any IO-related exceptions while trying to open or create a file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public Storage(String filePath) throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        file \u003d new File(filePath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        File dir \u003d new File(\"data\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        if (!dir.exists()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            dir.mkdirs();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            if (!file.createNewFile()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                System.out.println(\"error\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        scanner \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Reads data (Tasks) from text file and converts them to a task-list array."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @return The task-list containing all read Tasks from the data (text) file."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public TaskList load() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        String[] strArr;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            String line \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            strArr \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            String type \u003d strArr[0];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            boolean isDone \u003d strArr[1].equals(\"1\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            String name \u003d strArr[2];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            t \u003d null;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                t \u003d new Todo(name, isDone);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            } else if (type.equals(\"E\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                t \u003d new Event(name, LocalDate.parse(strArr[3]), isDone);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            } else if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                t \u003d new Deadline(name, LocalDate.parse(strArr[3]), isDone);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            // Add task t to ArrayList"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            taskList.addTask(t);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Saves the current Tasks in the task-list to the data (text) file, overwriting current file contents."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param taskList The task-list containing all currently added Tasks."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @throws IOException If there are any IO-related exception, while trying to write to file."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public void saveTasksToFile(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        int len \u003d taskList.getNumTasks();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        for (int i \u003d 0; i \u003c len; ++i) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            Task t \u003d taskList.getTask(i);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            String name \u003d t.getName();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            String doneStatus \u003d t.getDone() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            String mnemonic \u003d t.getMnemonic();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            if (t instanceof Todo) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                sb.append(mnemonic + PIPE + doneStatus + PIPE + name);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            } else if (t instanceof Event) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                sb.append(mnemonic + PIPE + doneStatus + PIPE + name + PIPE + ((Event) t).getAt());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            } else if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                sb.append(mnemonic + PIPE + doneStatus + PIPE + name + PIPE + ((Deadline) t).getBy());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            if (i \u003c (len - 1)) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                sb.append(LF);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        fw.write(sb.toString());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nathanaelseen": 113
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": " * Represents an Abstract Task (which could either be Deadline, Todo, or Event)."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Constructs a given Task object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param name The name for the Task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Constructs a given Task object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param name The name for the Task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param isDone Indicates whether the Task has been completed or not."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public Task(String name, boolean isDone) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Returns the name of the Task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @return The Task name."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Marks a Task as completed."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Returns the status of the Task, whether done or not."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @return True, if the Task has been completed or done, false otherwise."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Returns a short character differentiating between the various types of classes."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @return A string containing the above  mentioned  short-character."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public abstract String getMnemonic();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return (\"[\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"] \" + name);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nathanaelseen": 67
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": " * Represents the task-list containing all Tasks the user would record."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Creates a new Task-List object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Adds a new Task to the list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param t Task to be added."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Removes a Task from the list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param index Index of Task from the task-list to remove."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Retrieves a certain Task from the list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param index Index of Task from the task-list to retrieve."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @return The task extracted from the task-list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Looks up a Task or set of Tasks whose name matches a certain keyword."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param keyword String to search Tasks by."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @return Task-List containing Tasks whose names match the keyword."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public TaskList findByKeyword(String keyword) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        TaskList foundTaskList \u003d new TaskList();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            if (t.getName().contains(keyword)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                foundTaskList.addTask(t);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return foundTaskList;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Returns the total number of Tasks in the task-list."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @return The number of Tasks in the task-list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public int getNumTasks() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Marks a Task as having the done status."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param index Index of Task from the task-list to mark as done."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public void markAsDone(int index) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        tasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nathanaelseen": 82
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": " * Represents a Todo Task the user would record."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Constructs a new Todo object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param name Name of Todo Task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public Todo(String name) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Constructs a new Todo object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param name Name of Todo Task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param isDone Done status of the Todo task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public Todo(String name, boolean isDone) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String getMnemonic() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return \"[\" + getMnemonic() + \"]\" + super.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nathanaelseen": 35
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": " * Performs basic \u0027interaction\u0027 with the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public static final String LF \u003d \"\\r\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    private static final String WELCOME_MSG \u003d \"Hello! I\u0027m duke.Duke\" + LF + \"What can I do for you?\" + LF;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public static final String BYE_MSG \u003d \"Bye, hope to see you again soon!\" + LF;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public static final String HELP_MSG \u003d \"Here are the list of supported commands:\" + LF"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            + \"list - Lists all Tasks\" + LF"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            + \"done [Task index] - Marks the specified task as done\" + LF"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            + \"delete [Task index] - Deletes the specified task\" + LF"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            + \"todo [Task name] - Creates a new Task\" + LF"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            + \"deadline [Task name] [date] - Creates a new (Deadline) Task\" + LF"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            + \"event [Task name] [date] - Creates a new (Event) Task\" + LF"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            + \"find [Task name] - Finds a Task based on a certain name keyword\" + LF"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            + \"help - Prints this Help message\" + LF"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            + \"bye - Exits the application\" + LF;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Constructs a new UI object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Prints the welcome message."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @return The string to be printed."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String printWelcomeMsg() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return WELCOME_MSG;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Print the bye message."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String printByeMsg() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return BYE_MSG;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Print the bye message."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String printHelpMsg() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return HELP_MSG;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Reads and trim a raw user command, for parsing."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @return A trimmed version of the user command."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @throws IOException If there\u0027s an IO error which has occurred."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String readCmd(String cmd) throws IOException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return cmd.trim();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Prints the content using a line feed thereafter."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param line Content to be printed."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @return The string to be printed."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String printLine(String line) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return line + LF;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Prints a blank line."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @return The string to be printed."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String printLine() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return LF;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Print the Task which has been added to the task-list."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param t Task to add to the task-list."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param taskList The task-list containing all currently added Tasks."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @return The string to be printed."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String printAddedTask(Task t, TaskList taskList) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return this.printLine(\"Got it! I\u0027ve added this task:\" + Ui.LF + \"    \" + t + Ui.LF"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                + \"Now, you have \" + taskList.getNumTasks() + \" item(s) in your list.\" + Ui.LF);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Prints all Tasks in the task-list."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param taskList The current task-list containing all Tasks."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @return The string to be printed."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String printTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        String result \u003d this.printLine(\"Here are your task(s):\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        int len \u003d taskList.getNumTasks();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        for (int i \u003d 0; i \u003c len; ++i) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            Task t \u003d taskList.getTask(i);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            result +\u003d this.printLine(\"    \" + (i + 1) + \". \" + t);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        result +\u003d this.printLine();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Prints all Tasks found in the task-list."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param taskList The current task-list containing all Tasks."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @return The string to be printed."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String printFoundTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        String result \u003d this.printLine(\"Here are the matching task(s) your list:\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        int len \u003d taskList.getNumTasks();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        for (int i \u003d 0; i \u003c len; ++i) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            Task t \u003d taskList.getTask(i);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            result +\u003d this.printLine(\"    \" + (i + 1) + \". \" + t);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        result +\u003d this.printLine();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Prints feedback on Tasks being marked as done."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param t Task being marked as done."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @return The string to be printed."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String printTaskMarkedDone(Task t) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return this.printLine(\"Nice! I\u0027ve marked this task as done:\" + Ui.LF + \"    \" + t + Ui.LF);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * Prints feedback on the Task being deleted from the task-list."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param t Task which has been removed."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @param taskList The current task-list representing all Tasks currently in the list."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     * @return The string to be printed."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public String printTaskDeleted(Task t, TaskList taskList) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        return this.printLine(\"Noted! I\u0027ve removed this task:\" + Ui.LF + \"    \" + t + Ui.LF"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                + \"Now, you have \" + taskList.getNumTasks() + \" item(s) in your list.\" + Ui.LF);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nathanaelseen": 156
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u003c?import javafx.scene.control.TextArea?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "      \u003cTextArea fx:id\u003d\"dialog\" editable\u003d\"false\" prefHeight\u003d\"99.0\" text\u003d\"text\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "nathanaelseen": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "nathanaelseen": 19
    }
  },
  {
    "path": "src/test/java/duke/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public void getMnemonic() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        Task task \u003d new Deadline(\"\", null, false);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        assertEquals(\"D\", task.getMnemonic());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public void getName() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        Task task \u003d new Deadline(\"abc\", null, false);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        assertEquals(\"abc\", task.getName());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nathanaelseen": 18
    }
  },
  {
    "path": "src/test/java/duke/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "import duke.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public void getMnemonic() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        Task t \u003d new Event(\"\", null, false);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        assertEquals(\"E\", t.getMnemonic());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    public void getName() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        Task t \u003d new Event(\"abc\", null, false);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "        assertEquals(\"abc\", t.getName());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nathanaelseen": 21
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "Hello! I\u0027m duke.Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "Here are your task(s):"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "Got it! I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    [T][✘] borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "Now, you have 1 item(s) in your list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "Here are your task(s):"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    1. [T][✘] borrow book"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "Got it! I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "Now, you have 2 item(s) in your list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "Here are your task(s):"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    1. [T][✘] borrow book"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    2. [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    [D][✓] return book (by: Sunday)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "Here are your task(s):"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    1. [T][✘] borrow book"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    2. [D][✓] return book (by: Sunday)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "Got it! I\u0027ve added this task:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    [E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "Now, you have 3 item(s) in your list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "Here are your task(s):"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    1. [T][✘] borrow book"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    2. [D][✓] return book (by: Sunday)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    3. [E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    [T][✓] borrow book"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "Here are your task(s):"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    1. [T][✓] borrow book"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    2. [D][✓] return book (by: Sunday)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    3. [E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    [E][✓] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "Here are your task(s):"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    1. [T][✓] borrow book"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    2. [D][✓] return book (by: Sunday)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    3. [E][✓] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "Bye, hope to see you again soon!"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "nathanaelseen": 54
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "nathanaelseen": 14
    }
  },
  {
    "path": "text-ui-test/runtime.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke.Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nathanaelseen"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "nathanaelseen": 34
    }
  }
]
