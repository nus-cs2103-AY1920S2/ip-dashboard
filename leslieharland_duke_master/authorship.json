[
  {
    "path": ".gitignore",
    "fileType": "gitignore",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# IDEA files"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "/.idea/"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "/out/"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "/*.iml"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "# Gradle build files"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/.gradle/"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/build/"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "src/main/resources/docs/"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "# MacOS custom attributes files created by Finder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ".DS_Store"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "*.iml"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "bin/"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/*.class"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 3,
      "-": 14
    }
  },
  {
    "path": ".travis.yml",
    "fileType": "yml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "language: java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "os: osx"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 2
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    sourceSets \u003d []"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "test {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 28,
      "-": 20
    }
  },
  {
    "path": "gradle.properties",
    "fileType": "properties",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "org.gradle.parallel\u003dtrue"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 1
    }
  },
  {
    "path": "gradle/wrapper/gradle-wrapper.properties",
    "fileType": "properties",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "#Sat Feb 01 18:50:30 SGT 2020"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "distributionUrl\u003dhttps\\://services.gradle.org/distributions/gradle-6.1.1-all.zip"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "distributionBase\u003dGRADLE_USER_HOME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "distributionPath\u003dwrapper/dists"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "zipStorePath\u003dwrapper/dists"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "zipStoreBase\u003dGRADLE_USER_HOME"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 3,
      "-": 3
    }
  },
  {
    "path": "gradlew",
    "fileType": "gradlew",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "##############################################################################"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "##"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "##  Gradle start up script for UN*X"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "##"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "##############################################################################"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# Attempt to set APP_HOME"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "# Resolve links: $0 may be a link"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "PRG\u003d\"$0\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "# Need this for relative symlinks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "while [ -h \"$PRG\" ]; do"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  ls\u003d$(ls -ld \"$PRG\")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  link\u003d$(expr \"$ls\" : \u0027.*-\u003e \\(.*\\)$\u0027)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  if expr \"$link\" : \u0027/.*\u0027 \u003e/dev/null; then"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    PRG\u003d\"$link\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  else"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    PRG\u003d$(dirname \"$PRG\")\"/$link\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "done"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "SAVED\u003d\"$(pwd)\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "cd \"$(dirname \\\"$PRG\\\")/\" \u003e/dev/null"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "APP_HOME\u003d\"$(pwd -P)\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "cd \"$SAVED\" \u003e/dev/null"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "APP_NAME\u003d\"Gradle\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "APP_BASE_NAME\u003d$(basename \"$0\")"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "DEFAULT_JVM_OPTS\u003d\u0027\"-Xmx64m\"\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "# Use the maximum available, or set MAX_FD !\u003d -1 to use that value."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "MAX_FD\u003d\"maximum\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "warn() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  echo \"$*\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "die() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  echo"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  echo \"$*\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  echo"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  exit 1"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "# OS specific support (must be \u0027true\u0027 or \u0027false\u0027)."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "cygwin\u003dfalse"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "msys\u003dfalse"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "darwin\u003dfalse"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "nonstop\u003dfalse"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "case \"$(uname)\" in"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "CYGWIN*)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  cygwin\u003dtrue"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  ;;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "Darwin*)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "  darwin\u003dtrue"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  ;;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "MINGW*)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  msys\u003dtrue"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  ;;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "NONSTOP*)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  nonstop\u003dtrue"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  ;;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "esac"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "CLASSPATH\u003d$APP_HOME/gradle/wrapper/gradle-wrapper.jar"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "# Determine the Java command to use to start the JVM."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -n \"$JAVA_HOME\" ]; then"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  if [ -x \"$JAVA_HOME/jre/sh/java\" ]; then"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    # IBM\u0027s JDK on AIX uses strange locations for the executables"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    JAVACMD\u003d\"$JAVA_HOME/jre/sh/java\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  else"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    JAVACMD\u003d\"$JAVA_HOME/bin/java\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  fi"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "  if [ ! -x \"$JAVACMD\" ]; then"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "location of your Java installation.\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "  fi"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "  JAVACMD\u003d\"java\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "  which java \u003e/dev/null 2\u003e\u00261 || die \"ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "location of your Java installation.\""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "# Increase the maximum file descriptors if we can."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "if [ \"$cygwin\" \u003d \"false\" -a \"$darwin\" \u003d \"false\" -a \"$nonstop\" \u003d \"false\" ]; then"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  MAX_FD_LIMIT\u003d$(ulimit -H -n)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "  if [ $? -eq 0 ]; then"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    if [ \"$MAX_FD\" \u003d \"maximum\" -o \"$MAX_FD\" \u003d \"max\" ]; then"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "      MAX_FD\u003d\"$MAX_FD_LIMIT\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    ulimit -n $MAX_FD"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    if [ $? -ne 0 ]; then"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "      warn \"Could not set maximum file descriptor limit: $MAX_FD\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "  else"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "  fi"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "# For Darwin, add options to specify how the application appears in the dock"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "if $darwin; then"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "  GRADLE_OPTS\u003d\"$GRADLE_OPTS \\\"-Xdock:name\u003d$APP_NAME\\\" \\\"-Xdock:icon\u003d$APP_HOME/media/gradle.icns\\\"\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "# For Cygwin, switch paths to Windows format before running java"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "if $cygwin; then"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  APP_HOME\u003d$(cygpath --path --mixed \"$APP_HOME\")"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  CLASSPATH\u003d$(cygpath --path --mixed \"$CLASSPATH\")"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  JAVACMD\u003d$(cygpath --unix \"$JAVACMD\")"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "  # We build the pattern for arguments to be converted via cygpath"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  ROOTDIRSRAW\u003d$(find -L / -maxdepth 1 -mindepth 1 -type d 2\u003e/dev/null)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "  SEP\u003d\"\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "  for dir in $ROOTDIRSRAW; do"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    ROOTDIRS\u003d\"$ROOTDIRS$SEP$dir\""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    SEP\u003d\"|\""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "  done"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "  OURCYGPATTERN\u003d\"(^($ROOTDIRS))\""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "  # Add a user-defined pattern to the cygpath arguments"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "  if [ \"$GRADLE_CYGPATTERN\" !\u003d \"\" ]; then"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    OURCYGPATTERN\u003d\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "  fi"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "  # Now convert the arguments - kludge to limit ourselves to /bin/sh"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "  i\u003d0"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "  for arg in \"$@\"; do"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    CHECK\u003d$(echo \"$arg\" | egrep -c \"$OURCYGPATTERN\" -)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    CHECK2\u003d$(echo \"$arg\" | egrep -c \"^-\") ### Determine if an option"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    if [ $CHECK -ne 0 ] \u0026\u0026 [ $CHECK2 -eq 0 ]; then ### Added a condition"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "      eval $(echo args$i)\u003d$(cygpath --path --ignore --mixed \"$arg\")"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    else"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "      eval $(echo args$i)\u003d\"\\\"$arg\\\"\""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    i\u003d$((i + 1))"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "  done"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "  case $i in"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  0) set -- ;;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  1) set -- \"$args0\" ;;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  2) set -- \"$args0\" \"$args1\" ;;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  3) set -- \"$args0\" \"$args1\" \"$args2\" ;;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "  esac"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "# Escape application args"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "save() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  for i; do printf %s\\\\n \"$i\" | sed \"s/\u0027/\u0027\\\\\\\\\u0027\u0027/g;1s/^/\u0027/;\\$s/\\$/\u0027 \\\\\\\\/\"; done"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "  echo \" \""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "APP_ARGS\u003d$(save \"$@\")"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "# Collect all arguments for the java command, following the shell quoting and substitution rules"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname\u003d$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "if [ \"$(uname)\" \u003d \"Darwin\" ] \u0026\u0026 [ \"$HOME\" \u003d \"$PWD\" ]; then"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "  cd \"$(dirname \"$0\")\""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "exec \"$JAVACMD\" \"$@\""
      }
    ],
    "authorContributionMap": {
      "leslieharland": 28,
      "-": 144
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private DialogBox(String text, Image img, boolean isSimpleDialogBox) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String resourceName;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        if (!isSimpleDialogBox) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            resourceName \u003d \"/view/DialogBox.fxml\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            resourceName \u003d \"/view/SimpleDialogBox.fxml\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(resourceName));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        if (img !\u003d null) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            displayPicture.setImage(img);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *  Returns the dialog for displaying what the user has written ."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return new DialogBox(text, img, false);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *  Returns the dialog for displaying replies from Duke."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        var db \u003d new DialogBox(text, img, false);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *  Returns the text message without the avatar."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *  Ui: SimpleDialogBox.fxml"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public static DialogBox getTextDialog(String text) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        var db \u003d new DialogBox(text, null, true);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 83
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * @author leslieharland"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.command.Operation;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.task.SearchTask;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * The Class Duke."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * The i."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    static int i;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/avatar.jpg\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * The storage."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * The tasks."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private TaskList temp;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * The ui."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Instantiates a new duke."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param filePath the file path"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        temp \u003d new TaskList();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String command \u003d \"\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String[] current \u003d input.split(\" \");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        command \u003d current[0];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        if ((command).equalsIgnoreCase(Operation.BYE.toString())) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            return ui.clean();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } else if (command.equalsIgnoreCase(Operation.LIST.toString())) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            temp.getTasks().clear();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            tasks \u003d storage.loadTasks();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            return ui.showTasks(tasks, false);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } else if (command.equalsIgnoreCase(Operation.TODO.toString())"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                || command.equalsIgnoreCase(Operation.DEADLINE.toString())"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                || command.equalsIgnoreCase(Operation.EVENT.toString())) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                Task t \u003d tasks.addTask(current, storage);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                return ui.taskAddSuccess(t, tasks.getSize());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                return ui.showMessage(Arrays.asList(ex.getMessage()));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } else if (command.equalsIgnoreCase(Operation.FIND.toString())) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            temp \u003d storage.findTasks(Arrays.stream(current).skip(1).toArray(String[]::new));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            return ui.showTasks(temp, true);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } else if (command.equalsIgnoreCase(Operation.DONE.toString())) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            int value \u003d Integer.parseInt(current[1]);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                Task cur \u003d tasks.get(value - 1);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                if (!temp.getTasks().isEmpty()) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    cur \u003d tasks.get(((SearchTask) temp.get(value - 1)).getKey() - 1);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    value \u003d ((SearchTask) temp.get(value - 1)).getKey();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                cur.markAsDone();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                tasks.deleteTask(value, storage);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                tasks.addTask(value - 1, cur);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                for (Task t : tasks.getTasks()) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    sb.append(t.print() + \"\\n\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                storage.writeToFile(sb.toString());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                return ui.taskMarkDone(cur);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                return ui.taskNumberError();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } else if (command.equalsIgnoreCase(Operation.DELETE.toString())) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                int keyToDelete \u003d Integer.parseInt(current[1]);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                if (!temp.getTasks().isEmpty()) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    keyToDelete \u003d ((SearchTask) temp.get(keyToDelete - 1)).getKey();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                temp.getTasks().clear();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                Task cur \u003d tasks.deleteTask(keyToDelete, storage);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                return ui.taskRemoveSuccess(cur, tasks.getSize());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                return ui.taskNumberError();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                throw new DukeException("
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        \" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            } catch (Exception ex) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                return ui.showMessage(Arrays.asList(ex.getMessage()));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 156
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * @author leslieharland"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * The Class DukeException."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class DukeException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Instantiates a new duke exception."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param message the message"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 22
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private Duke duke \u003d new Duke(\"../data/duke.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 31
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/avatar.jpg\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/avatar.jpg\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Sets up the javafx ui widgets."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                DialogBox.getTextDialog(Ui.logo()),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                DialogBox.getDukeDialog(Ui.welcome(), dukeImage)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        );"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        );"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 65
    }
  },
  {
    "path": "src/main/java/duke/command/Operation.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public enum Operation {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    DONE, LIST, EVENT, TODO, DEADLINE, DELETE, BYE, FIND"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 5
    }
  },
  {
    "path": "src/main/java/duke/storage/CheckTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "interface CheckTask {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    boolean test(String task);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 5
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * @author leslieharland"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.task.EventObj;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.task.SearchTask;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * The Class Storage."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class Storage implements CheckTask {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String filePath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Instantiates a new storage."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param filePath the file path"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Write to file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param myContent stores the string format of the task"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public void writeToFile(String myContent) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        BufferedWriter writer \u003d null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            writer \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            writer.write(myContent);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            writer.flush();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            ioe.printStackTrace();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                if (writer !\u003d null) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    writer.close();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            } catch (Exception ex) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Load tasks."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the task list"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public TaskList loadTasks() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            BufferedReader rd \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            while ((line \u003d rd.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                String type \u003d line.split(\"|\")[0];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                if (type.equals(\"E\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    tasks.addTask(EventObj.parse(line));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                } else if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    tasks.addTask(Deadline.parse(line));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                } else if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    tasks.addTask(Todo.parse(line));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    //add code"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            rd.close();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Find tasks containing the user search term."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the task list"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public TaskList findTasks(String... searchTerm) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        TaskList tasks \u003d loadTasks();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        TaskList temp \u003d new TaskList();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        int pos \u003d 1;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            if (Arrays.stream(searchTerm).parallel().anyMatch(task.getDescription()::contains)) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                temp.addTask(new SearchTask(pos, task.isDone(), task.getDescription(), task.getType()));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            pos++;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public boolean test(String task) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return task.equals(\"T\") || task.equals(\"E\") || task.equals(\"D\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 127
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * @author leslieharland"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * The Class Deadline."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Instantiates a new deadline."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param description the description"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param date        the date"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public Deadline(String description, String date) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        super(description, date);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        type \u003d \"D\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Parses the."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param taskString the task string"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the deadline"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public static Deadline parse(String taskString) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        assert (!taskString.isEmpty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String[] parts \u003d taskString.split(\"\\\\|\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String desc \u003d parts[2];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        Deadline t \u003d new Deadline(desc, \"\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        if (parts.length \u003e 3) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            t \u003d new Deadline(desc, parts[3]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        t.isDone \u003d parts[1].trim().equals(\"1\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * To string."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return super.toString() + \"(by: \" + printDateTime() + \")\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Prints the."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String print() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return getType() + \" | \" + (isDone ? String.valueOf(1) : String.valueOf(0))"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                + \" | \" + getDescription() + (!userKeyedDateString.equals(\"\") ? \" | \""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                + printDateTime() : \"\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 63
    }
  },
  {
    "path": "src/main/java/duke/task/EventObj.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * @author leslieharland"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * The Class EventObj."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class EventObj extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Instantiates a new event obj."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param description the description"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param datetime    the datetime"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public EventObj(String description, String datetime) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        super(description, datetime);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        type \u003d \"E\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Parses the event."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param taskString the task string"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the event obj"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public static EventObj parse(String taskString) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String[] parts \u003d taskString.split(\"\\\\|\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String desc \u003d parts[2];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        EventObj t \u003d new EventObj(desc, \"\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        if (parts.length \u003e 3) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            t \u003d new EventObj(desc,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    String.join(\"\", java.util.Arrays.stream(parts).skip(3).toArray(String[]::new)));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        t.isDone \u003d parts[1].trim().equals(\"1\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * To string."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return super.toString() + \"(at: \" + printDateTime() + \")\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Prints the event."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String print() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return getType() + \" | \" + (isDone ? String.valueOf(1)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                : String.valueOf(0)) + \" | \" + getDescription()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                + (!userKeyedDateString.equals(\"\") ? \" | \" + printDateTime() : \"\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 63
    }
  },
  {
    "path": "src/main/java/duke/task/Parseable.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * @author leslieharland"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * The Interface Parseable."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public interface Parseable {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Parses the."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param taskString the task string"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the parseable"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    static Parseable parse(String taskString) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return new Parseable() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        };"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 22
    }
  },
  {
    "path": "src/main/java/duke/task/SearchTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class SearchTask extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    protected int key;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public SearchTask(int key, boolean isDone, String description, String type) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        super(isDone, description, type);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.key \u003d key;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public int getKey() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return key;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 14
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * @author leslieharland"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.command.Operation;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * The Class Task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public abstract class Task implements TaskPrintable, Parseable {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    protected String userKeyedDateString;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    protected java.time.LocalDate datetime;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Instantiates a new task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param description the description"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * This constructor is used to retain most useful properties needed to create"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * task at its core."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param description the description"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public Task(boolean isDone, String description, String type) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Instantiates a new task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param description the description"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param datetime    the datetime"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public Task(String description, String datetime) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.userKeyedDateString \u003d datetime;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        setDatetime(datetime);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Instantiates a new task."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param isDone      the is done"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param description the description"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private Task(boolean isDone, String description) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Sets the datetime."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param dt the new datetime"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    protected void setDatetime(String dt) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        assert (!dt.isEmpty());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        dt \u003d dt.replaceAll(\"\\\\s\", \"\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            java.time.format.DateTimeFormatter formatter"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    \u003d java.time.format.DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            datetime \u003d java.time.LocalDate.parse(dt, formatter);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                java.time.format.DateTimeFormatter formatter"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        \u003d java.time.format.DateTimeFormatter.ofPattern(\"dd/MM/yyyy hhmm\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                datetime \u003d java.time.LocalDate.parse(dt, formatter);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            } catch (Exception ex2) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Prints the date time."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String printDateTime() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        DateTimeFormatter outputformatter"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                \u003d java.time.format.DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            String output \u003d (datetime).format(outputformatter);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            return userKeyedDateString;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Gets the status icon."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the status icon"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Checks if is done."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return true, if is done"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Gets the description."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the description"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Gets the type."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the type"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Sets the type."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param type the new type"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public void setType(String type) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        if (type.equalsIgnoreCase(Operation.TODO.toString())) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            this.type \u003d \"T\";"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } else if (type.equalsIgnoreCase(Operation.DEADLINE.toString())) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            this.type \u003d \"D\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } else if (type.equalsIgnoreCase(Operation.EVENT.toString())) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            this.type \u003d \"E\";"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            this.type \u003d \"\";"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Mark as done."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * To string."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return \"[\" + getType() + \"]\""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                + \" [\" + getStatusIcon() + \"]  \" + getDescription();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Prints the."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String print() {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return getType() + \" | \" + (isDone ? String.valueOf(1) : String.valueOf(0))"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                + \" | \" + getDescription();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 192
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * @author leslieharland"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.command.Operation;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * The Class TaskList."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Instantiates a new task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Gets the tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the tasks"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Gets the."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param v the v"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the task"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public Task get(int v) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return tasks.get(v);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Gets the size."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the size"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Adds the task."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param t the t"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Adds the task."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param pos the pos"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param t   the t"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public void addTask(int pos, Task t) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        tasks.add(pos, t);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Adds the task."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param current the current"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param storage the storage"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @throws DukeException the duke exception"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public Task addTask(String[] current, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        assert (storage !\u003d null);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String[] words \u003d Arrays.stream(current).skip(1).toArray(String[]::new);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String command \u003d current[0];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        if (words.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a \""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    + command + \" cannot be empty.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        if (command.equalsIgnoreCase(Operation.DEADLINE.toString())) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            int position \u003d 0;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            boolean specifyDate \u003d false;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            for (String w : words) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                if (w.equals(\"/by\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    String description \u003d String.join(\" \", List.of(words).subList(0, position));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    String date \u003d List.of(words).stream().skip(position + 1)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                            .collect(Collectors.joining(\" \"));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    Task t \u003d new Deadline(description, date);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    tasks.add(getSize(), t);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    specifyDate \u003d true;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    position++;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            if (!specifyDate) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                String description \u003d String.join(\" \", words);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                Task t \u003d new Deadline(description, \"\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                tasks.add(getSize(), t);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } else if (command.equalsIgnoreCase(Operation.EVENT.toString())) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            int position \u003d 0;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            boolean specifyDate \u003d false;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            for (String w : words) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                if (w.equals(\"/at\")) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    String description \u003d String.join(\" \", List.of(words).subList(0, position));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    String datetime \u003d List.of(words).stream().skip(position + 1)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                            .collect(Collectors.joining(\" \"));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    Task t \u003d new EventObj(description, datetime);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    tasks.add(getSize(), t);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    specifyDate \u003d true;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    position++;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            if (!specifyDate) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                String description \u003d String.join(\" \", words);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                Task t \u003d new EventObj(description, \"\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                tasks.add(getSize(), t);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } else if (command.equalsIgnoreCase(Operation.TODO.toString())) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            Task t \u003d new Todo(String.join(\" \", words));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            tasks.add(getSize(), t);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            assert (Arrays.stream(Operation.values()).noneMatch(o -\u003e o.name().equals(command)));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        tasks.forEach(t -\u003e sb.append(t.print() + \"\\n\"));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        assert (storage !\u003d null);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        assert (sb.toString().split(\"\\\\|\").length \u003e 1);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        storage.writeToFile(sb.toString());"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return tasks.get(getSize() - 1);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Delete task."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param value   the value"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param storage the storage"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public Task deleteTask(int value, Storage storage) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        Task cur \u003d tasks.get(value - 1);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        tasks.remove(cur);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        if (tasks.size() \u003e 0) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            tasks.forEach(t -\u003e sb.append(t.print() + \"\\n\"));"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        storage.writeToFile(sb.toString());"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return cur;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    //TODO add multiple tasks"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    //e.g event borrow book /at 6pm, deadline return book /by 6pm"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    //TODO delete multiple tasks"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    //e.g. delete 1, 2"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    //TODO file multiple tasks"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    //e.g. todo/event borrow book"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 189
    }
  },
  {
    "path": "src/main/java/duke/task/TaskPrintable.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * @author leslieharland"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * The Interface TaskPrintable."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public interface TaskPrintable {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    String print();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 12
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * @author leslieharland"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * The Class Todo."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Instantiates a new todo."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param description the description"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        type \u003d \"T\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Parses the."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param taskString the task string"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the todo"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public static Todo parse(String taskString) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String[] parts \u003d taskString.split(\"\\\\|\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        boolean d \u003d parts[1].trim().equals(\"1\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String desc \u003d parts[2].trim();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        Todo t \u003d new Todo(desc);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        t.isDone \u003d d;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * To string."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return super.toString();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Prints the."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String print() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return getType() + \" | \" + (isDone ? String.valueOf(1) : String.valueOf(0)) + \" | \" + getDescription();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 56
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * @author leslieharland"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * The Class Ui."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    static Scanner sc;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Gets the single instance of Ui."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return single instance of Ui"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public static Ui getInstance() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return new Ui();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Prints the application logo."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return logo string"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public static String logo() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sb.append(logo);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Welcome."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public static String welcome() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sb.append(\"Hello I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public static String makeLine() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Gets the scanner."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the scanner"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public Scanner getScanner() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return sc;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Clean."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String clean() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        List\u003cString\u003e msgs \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        msgs.add(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return showMessage(msgs);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Show loading error."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String showLoadingError() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        List\u003cString\u003e msgs \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        msgs.add(\"Cannot start program\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return showMessage(msgs);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Show message."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param msg the msg"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String showMessage(List\u003cString\u003e msg) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        for (String m : msg) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            sb.append(\"     \" + m);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Show tasks."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param tl the tl"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String showTasks(TaskList tl, boolean isFind) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sb.append(\"      Here are the \" + (isFind ? \"matching \" : \"\") + \"tasks in your list: \\n\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        for (int count \u003d 0; count \u003c tl.getSize(); count++) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            sb.append(\"      \" + (count + 1) + \". \");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            sb.append(tl.get(count) + \"\\n\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Task mark done."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param cur the cur"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String taskMarkDone(Task cur) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sb.append(\"Nice! I\u0027ve marked this task as done: \\n\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sb.append(cur.getStatusIcon() + \" \""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                + cur.getDescription());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Task number error."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String taskNumberError() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sb.append(\"Please enter a valid task number \\n\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Task remove success."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param cur  the cur"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param size the size"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String taskRemoveSuccess(Task cur, int size) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sb.append(\"      Noted. I\u0027ve removed this task: \\n\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sb.append(\"      \" + cur + \"\\n\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sb.append(\"      Now you have \" + size + \" tasks in the list.  \\n\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Task add success."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param cur  the cur"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param size the size"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String taskAddSuccess(Task cur, int size) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sb.append(\"      Got it. I\u0027ve added this task:  \\n\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sb.append(\"      \" + cur + \"\\n\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sb.append(\"      Now you have \" + size + \" tasks in the list.  \\n\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 166
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" HBox.hgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 19
    }
  },
  {
    "path": "src/main/resources/view/SimpleDialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 16
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public void runTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 10
    }
  },
  {
    "path": "src/test/java/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public void runTest() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        TaskList tl \u003d new TaskList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        tl.addTask(Arrays.asList(\"todo\", \"borrow\", \"book\").toArray(String[]::new), new Storage(\"../data/duke.txt\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        assert (tl.getSize() \u003d\u003d 1);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 16
    }
  },
  {
    "path": "src/test/java/duke/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.task.EventObj;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public void printDateTimeTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String desc \u003d \"project meeting\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String datetime \u003d \"2020-01-15\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        Task t \u003d new EventObj(desc, datetime);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        Task t2 \u003d new Deadline(desc, datetime);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        assert (t.printDateTime().equals(\"Jan 15 2020\")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                \u0026\u0026 t2.printDateTime().equals(\"Jan 15 2020\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 20
    }
  },
  {
    "path": "src/test/java/duke/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public void parseTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String taskString \u003d \"T | 0 | borrow book\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String[] parts \u003d taskString.split(\"\\\\|\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        Task todo \u003d Todo.parse(taskString);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        assert (!todo.isDone());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        assert (todo.getType().equals(\"T\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        assert (todo.getDescription().equals(\"borrow book\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 18
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "if [ ! -d \"../bin\" ]; then"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  mkdir ../bin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "fi"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]; then"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  rm ACTUAL.TXT"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "fi"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java; then"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  exit 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "fi"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "java -classpath ../bin Duke \u003cinput.txt \u003eACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "if [ $? -eq 0 ]; then"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  exit 0"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "else"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  exit 1"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 30
    }
  }
]
