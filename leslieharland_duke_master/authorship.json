[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "# Usage"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "**To Run the Application**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "1. Type \u0027./gradlew build\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "1. In Intellij,right click on \u0027main/java/duke/Launcher.java\u0027 and select Run."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "# What commands can I enter?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "For todos | sample user command"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "`todo \u003cdescription of task\u003e` | todo borrow book"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "For events | sample user command"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "`event \u003cdescription of task\u003e /at \u003cdatetime\u003e` | event project meeting /at 2020-02-12"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "`...` | event project meeting /at mon 6pm"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "For deadline | sample user command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "`deadline \u003cdescription of task\u003e /by \u003cdatetime\u003e` | event return book /by 2020-02-12"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "`...` | event project meeting /by mon 6pm"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "* Note that specifiers **/by** and **/at** are not interchangeable"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  e.g. events have to use **/at**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  deadlines have to use **/by**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "Steps to export your project with javafx"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "1. Add this to your build.gradle"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "```"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "apply plugin: \u0027java-library-distribution\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "distZip.shouldRunAfter(build)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "jar {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    exclude \u0027META-INF/*.SF\u0027, \u0027META-INF/*.DSA\u0027, \u0027META-INF/*.RSA\u0027, \u0027META-INF/*.MF\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    manifest {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        attributes \u0027Main-Class\u0027: \u0027duke.Launcher\u0027,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                \u0027Class-Path\u0027: configurations.runtime.files.collect { \"build/libs/$it.name\" }.join(\u0027 \u0027)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "```"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "Run these commands in a terminal (java -jar has to be run)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "In the root project, "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "1.    ./gradlew build "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "1.   ./gradlew jar"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "1.   run java -jar duke-xxx.jar"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "you will receive noclassdeferr"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "1. Open eclipse"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "1. Import the project by General \u003e projects from file system"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "1. Setup javafx as an external library "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "Eclipse \u003e Preferences \u003e Build Path \u003e Add user library external jars (using the zip attached)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "1. Edit run configuration by right clicking Run As \u003e Edit Run Configuration. Update the project and Main class to Launcher file"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "1. Add the user library to your project\u0027s build path. Right Click project \u003e build path \u003e Configure..."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "Add the javafx11 library u just defined to the project under classpath"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "Almost done"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "1. Right click and select export \u003e Java \u003e Java runnable jar"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "1. Select \u0027Package dependencies\u0027 and a location to save the jar file"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "Your jar file should now work on cross-platform"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 63,
      "-": 10
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    sourceSets \u003d []"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "version \u00270.2.0\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "apply plugin: \u0027java\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "sourceCompatibility \u003d 11"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "targetCompatibility \u003d 11"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "jar {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    exclude \u0027META-INF/*.SF\u0027, \u0027META-INF/*.DSA\u0027, \u0027META-INF/*.RSA\u0027, \u0027META-INF/*.MF\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    manifest {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        attributes \u0027Main-Class\u0027: \u0027duke.Launcher\u0027,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                \u0027Class-Path\u0027: configurations.runtime.files.collect { \"build/libs/$it.name\" }.join(\u0027 \u0027)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "test {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 43,
      "-": 17
    }
  },
  {
    "path": "data/expenses.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "FOOD 15.0 2020-02-13 "
      }
    ],
    "authorContributionMap": {
      "leslieharland": 1
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private DialogBox(String text, Image img, boolean isSimpleDialogBox) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String resourceName;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        if (!isSimpleDialogBox) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            resourceName \u003d \"/view/DialogBox.fxml\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            resourceName \u003d \"/view/SimpleDialogBox.fxml\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(resourceName));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        if (img !\u003d null) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            displayPicture.setImage(img);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Returns the dialog for displaying what the user has written ."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return new DialogBox(text, img, false);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Returns the dialog for displaying replies from Duke."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        var db \u003d new DialogBox(text, img, false);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Returns the text message without the avatar."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Ui: SimpleDialogBox.fxml"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public static DialogBox getTextDialog(String text) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        var db \u003d new DialogBox(text, null, true);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 82
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * @author leslieharland"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.alias.AliasList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.command.Operation;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.expense.ExpenseItem;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.expense.ExpenseList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.task.SearchTask;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.util.DateUtil;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.util.EnumUtil;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * The Class Duke."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Constants for modes."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public static final int MODE_TASK_ID \u003d 1;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public static final int MODE_EXPENSE_ID \u003d 2;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    static Logger logger \u003d Logger.getLogger(EnumUtil.class.getName());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/avatar.jpg\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Initialisers for storage used."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private Storage taskStorage;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private Storage expenseStorage;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private Storage aliasStorage;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * The tasks."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private TaskList temp;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private ExpenseList expenses;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private AliasList aliases;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * The ui."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Instantiates a new duke."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param taskFilePath    the file path used for storing tasks"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param expenseFilePath the file path used for storing expenses"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param aliasFilePath   the file path used for storing alias"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public Duke(String taskFilePath, String expenseFilePath, String aliasFilePath) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            taskStorage \u003d new Storage(taskFilePath);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            temp \u003d new TaskList(taskStorage);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            tasks \u003d new TaskList(taskStorage);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            aliases \u003d new AliasList(aliasStorage);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            expenseStorage \u003d new Storage(expenseFilePath);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            aliasStorage \u003d new Storage(aliasFilePath);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            expenses \u003d new ExpenseList(expenseStorage);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Generates a response to user input."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String getResponse(String input) throws DukeException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String command \u003d \"\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String[] current \u003d input.split(\" \");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        command \u003d current[0];"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        Task t \u003d null;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        //search for alias"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        for (Map.Entry\u003cString, String\u003e keyValue : aliases.getAll().entrySet()) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            logger.log(Level.INFO, \"alias name \" + keyValue.getKey());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            if (keyValue.getKey().equals(command)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                command \u003d keyValue.getValue();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        if (EnumUtil.isValidOperation(command)) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            Operation operation \u003d Operation.valueOf(command.toUpperCase());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            switch (operation) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            case BYE:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                return ui.clean();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            case LIST:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                new EnumUtil();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                if (current.length \u003c 2 || !EnumUtil.isValidMode(current[1])) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        throw new DukeException("
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                                \" ☹ OOPS!!! what should i list? \\n You can list tasks, expenses, alias.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    } catch (Exception ex) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        return ui.showMessage(Arrays.asList(ex.getMessage()));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    String mode \u003d current[1];"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    switch (mode) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    case \"tasks\":"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        temp.getTasks().clear();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        tasks \u003d taskStorage.loadTasks();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        return ui.showTasks(tasks, false);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    case \"expenses\":"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        return getExpensesResultsString(Arrays.stream(current).skip(1).toArray(String[]::new));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    case \"alias\":"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        return ui.showAliases(aliases);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        return \"\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    String[] words \u003d Arrays.stream(current).skip(1).toArray(String[]::new);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    t \u003d tasks.addTask(command, words, taskStorage);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    return ui.taskAddSuccess(t, tasks.getSize());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                } catch (DukeException ex) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    return ui.showMessage(Arrays.asList(ex.getMessage()));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            case FIND:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                temp \u003d taskStorage.findTasks(Arrays.stream(current).skip(1).toArray(String[]::new));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                return ui.showTasks(temp, true);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            case DONE:"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                if (current.length \u003c 2) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        throw new DukeException("
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                                \" ☹ OOPS!!! Please supply the number next to the item to delete\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    } catch (Exception ex) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        return ui.showMessage(Arrays.asList(ex.getMessage()));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                int id \u003d Integer.parseInt(current[1]);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                boolean isFindTasks \u003d !temp.getTasks().isEmpty();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                if (isFindTasks) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    id \u003d ((SearchTask) temp.get(id - 1)).getKey();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    Task cur \u003d tasks.markTaskAsDone(id);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    return ui.taskMarkDone(cur);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    return ui.taskNumberError();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            case DELETE:"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                new EnumUtil();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                if (current.length \u003c 2 || !EnumUtil.isValidMode(current[1])) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        throw new DukeException("
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                                \" ☹ OOPS!!! what should i delete? \\n\\t You can delete tasks, expenses, alias. \\n\""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                                       + \"\\tEg. delete tasks 1 \\n\\tlist tasks to display all tasks.\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    } catch (Exception ex) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        return ui.showMessage(Arrays.asList(ex.getMessage()));"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                String mode \u003d current[1];"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                if (current.length \u003c 3) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        throw new DukeException("
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                                \"☹ OOPS!!! Please supply the number next to the item to delete\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    } catch (Exception ex) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        return ui.showMessage(Arrays.asList(ex.getMessage()));"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    switch (mode) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    case \"tasks\":"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        int keyToDelete \u003d Integer.parseInt(current[2]);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        if (!temp.getTasks().isEmpty()) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                            keyToDelete \u003d ((SearchTask) temp.get(keyToDelete - 1)).getKey();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                            temp.getTasks().clear();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        Task cur \u003d tasks.deleteTask(keyToDelete, taskStorage);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        return ui.taskRemoveSuccess(cur, tasks.getSize());"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    case \"expenses\":"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        keyToDelete \u003d Integer.parseInt(current[2]);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        ExpenseItem e \u003d expenses.deleteExpense(keyToDelete, taskStorage);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        return ui.expenseRemoveSuccess(e, expenses.getSize());"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    case \"alias\":"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        String alias \u003d current[2];"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        aliases.deleteAlias(alias, aliasStorage);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        return ui.aliasRemoveSuccess(alias, aliases.getSize());"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        return \"\";"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    return ui.taskNumberError();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            case SPEND:"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    ExpenseItem e \u003d expenses.addExpense(current, expenseStorage);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    return ui.expenseAddSuccess(e, expenses.getSize());"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                } catch (DukeException ex) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    return ui.showMessage(Arrays.asList(ex.getMessage()));"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            case SET:"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                if (current.length \u003e 1 \u0026\u0026 current[1] !\u003d null) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    switch (current[1]) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    case \"alias\":"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        if (current.length \u003c 3) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                                throw new DukeException("
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                                        \"☹ OOPS!!! Please specify the alias name. \\n\\t e.g. set alias t todo\");"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                            } catch (Exception ex) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                                return ui.showMessage(Arrays.asList(ex.getMessage()));"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        if (current.length \u003e 3 \u0026\u0026 current[3] \u003d\u003d null) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                                throw new DukeException("
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                                        \"☹ OOPS!!! Please specify which command to map the alias. \""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                                               + \"\\n\\te.g. set alias t todo\");"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                            } catch (Exception ex) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                                return ui.showMessage(Arrays.asList(ex.getMessage()));"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                            aliases \u003d aliases.addAlias(current[2], current[3], aliasStorage);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                            return ui.aliasAddSuccess(current[2], aliases.getSize());"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                            return ui.showMessage(Arrays.asList(ex.getMessage()));"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        return ui.showMessage(Arrays.asList(\"Operation not supported\"));"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        throw new DukeException("
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                                \"☹ OOPS!!! Please specify what to set\");"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    } catch (Exception ex) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        return ui.showMessage(Arrays.asList(ex.getMessage()));"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                return \"\";"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            //invalid command"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                throw new DukeException("
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        \" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            } catch (Exception ex) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                return ui.showMessage(Arrays.asList(ex.getMessage()));"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * method to collect the operations required to get the expenses from storage and prints the result to user."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param current user input array"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return String expenseResult"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String getExpensesResultsString(String[] current) {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        LocalDate fmtStartDate \u003d null;"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        LocalDate fmtEndDate \u003d null;"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        if (current.length \u003e 1 \u0026\u0026 current[1] !\u003d null) {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            String startDate \u003d current[1];"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            fmtStartDate \u003d DateUtil.formatDate(startDate);"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        if (current.length \u003e 2 \u0026\u0026 current[2] !\u003d null) {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            String endDate \u003d current[2];"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            fmtEndDate \u003d DateUtil.formatDate(endDate);"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        expenses \u003d expenseStorage.loadExpenses();"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return ui.showExpenses(expenses.filterExpensesByDate(fmtStartDate, fmtEndDate),"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                fmtStartDate, fmtEndDate);"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 311
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * @author leslieharland"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * The Class DukeException."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * Used throughout the duke application to catch application level errors"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class DukeException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Instantiates a new duke exception."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param message the message"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 23
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private Duke duke \u003d new Duke(\"data/tasks.txt\", \"data/expenses.txt\", \"data/alias.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 31
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/avatar.jpg\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/avatar.jpg\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Sets up the javafx ui widgets."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                DialogBox.getTextDialog(Ui.logo()),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                DialogBox.getDukeDialog(Ui.welcome(), dukeImage)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        );"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        );"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 63
    }
  },
  {
    "path": "src/main/java/duke/NoValueProvidedException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class NoValueProvidedException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Called when the user did not fully provide value to create an object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param message the message"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public NoValueProvidedException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 14
    }
  },
  {
    "path": "src/main/java/duke/alias/AliasList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke.alias;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class AliasList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private HashMap\u003cString, String\u003e items;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Instantiates a new alias list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public AliasList(Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        items \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Instantiates an alias list with existing items."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    protected AliasList(HashMap\u003cString, String\u003e items, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.items \u003d items;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Gets the alias."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the alias"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public HashMap\u003cString, String\u003e getAll() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return items;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Gets the original command with the user defined alias"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * e.g. get(t) with retrieve the record t that is mapped to to-do"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param alias the name for the alias"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the alias"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String get(String alias) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return items.get(alias);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Gets the size."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the size"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return items.size();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Adds the alias."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param s       the alias string"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param command the current operation"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public void addAlias(String s, String command) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        items.put(s, command);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Return the aliases that fall within the date range provided."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param current  current operation"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param newAlias alias name for the current operation"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public AliasList addAlias(String current, String newAlias, Storage storage) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        assert (storage !\u003d null);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        if (current !\u003d null \u0026\u0026 !current.isEmpty()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            items.put(current, newAlias);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Alias not specified. \");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        items.forEach((e, c) -\u003e sb.append(e).append(\" \").append(c).append(\"\\n\"));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        assert (sb.toString().split(\" \").length \u003e 1);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        storage.writeToFile(sb.toString());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return new AliasList(items, storage);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Delete alias."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param alias   the alias name"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param storage storage"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String deleteAlias(String alias, Storage storage) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        final String cur \u003d items.get(alias);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        items.remove(alias);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        if (items.size() \u003e 0) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            items.forEach((t, s) -\u003e sb.append(t).append(\" \").append(s).append(\"\\n\"));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        storage.writeToFile(sb.toString());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return cur;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 115
    }
  },
  {
    "path": "src/main/java/duke/command/Mode.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public enum Mode {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    TASKS, EXPENSES, ALIAS"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 5
    }
  },
  {
    "path": "src/main/java/duke/command/Operation.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public enum Operation {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    DONE, LIST, EVENT, TODO, DEADLINE, DELETE, BYE, FIND,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    //These commands are for the expenses extension"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    SPEND,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    //These commands are for the friendlier syntax extension"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    SET;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private final String displayName;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    Operation(final String display) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.displayName \u003d display;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    Operation() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.displayName \u003d this.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return this.displayName;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 24
    }
  },
  {
    "path": "src/main/java/duke/expense/Category.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke.expense;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public enum Category {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    FOOD, BOOKS, TRANSPORT"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 5
    }
  },
  {
    "path": "src/main/java/duke/expense/ExpenseItem.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke.expense;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.util.DateUtil;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * Lets the user track their expenses. This is the base class for different categories available to keep track."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class ExpenseItem {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    protected double amount;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    protected Category category;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    protected LocalDate dateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Instantiates the expense item with default datetime."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public ExpenseItem(Category category, double amount, String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.category \u003d category;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.dateTime \u003d DateUtil.formatDate(LocalDate.now().toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    protected ExpenseItem(Category category, double amount, LocalDate dateTime, String description) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.category \u003d category;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Parses the expenseString loaded from storage."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param expenseString the task string"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the expenseItem"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public static ExpenseItem parse(String expenseString) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String[] parts \u003d expenseString.split(\" \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        //checks that the file is populated with data of the right format"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        Category category \u003d Category.valueOf(parts[0].toUpperCase());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        double amount \u003d Double.parseDouble(parts[1]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        LocalDate dateTime \u003d null;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        if (parts.length \u003e 2) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            dateTime \u003d DateUtil.formatDate(parts[2]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        if (parts.length \u003e 3) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            description \u003d parts[3];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return new ExpenseItem(category, amount, dateTime, description);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Prints out the string."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return category.toString() + \" \" + amount + \" \" + dateTime + \" \" + description;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 66
    }
  },
  {
    "path": "src/main/java/duke/expense/ExpenseList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke.expense;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.util.EnumUtil;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class ExpenseList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private List\u003cExpenseItem\u003e items;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Instantiates a new expense list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public ExpenseList(Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        items \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Instantiates an expense list with existing items."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    protected ExpenseList(List\u003cExpenseItem\u003e items, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.items \u003d items;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Gets the expenses."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the expenses"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public List\u003cExpenseItem\u003e getExpenses() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return items;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Gets the expense with its index."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param id the task id"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the task"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public ExpenseItem get(int id) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return items.get(id);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Gets the size."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the size"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return items.size();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Return the expenses that fall within the date range provided."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the size"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public ExpenseList filterExpensesByDate(LocalDate startDate, LocalDate endDate) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        List\u003cExpenseItem\u003e myItems \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        if (startDate \u003d\u003d null \u0026\u0026 endDate \u003d\u003d null) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            return new ExpenseList(items, storage);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            for (ExpenseItem item : items) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                if (item.dateTime.compareTo(startDate) \u003e\u003d 0 \u0026\u0026 ((endDate \u003d\u003d null)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        || item.dateTime.compareTo(endDate) \u003c 0)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    myItems.add(item);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            return new ExpenseList(myItems, storage);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Adds the expense."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param e the expense"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public void addExpense(ExpenseItem e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        items.add(e);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Return the expenses that fall within the date range provided."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param current adds the current item to the list"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public ExpenseItem addExpense(String[] current, Storage storage) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        assert (storage !\u003d null);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String[] expense \u003d Arrays.stream(current).skip(1).toArray(String[]::new);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        if (expense.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please specify what you have spent on. \");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String category \u003d expense[0];"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        if (!EnumUtil.isValidCategory(category)) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! There is no such category. \");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        Category cat \u003d Category.valueOf(category.toUpperCase());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        double amount \u003d 0;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        if (expense.length \u003e 1 \u0026\u0026 expense[1] !\u003d null) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            amount \u003d Double.parseDouble(expense[1]);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! No amount specified. \");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String desc \u003d \"\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        if (expense.length \u003e 2 \u0026\u0026 expense[2] !\u003d null) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            desc \u003d expense[2];"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        ExpenseItem expenseItem \u003d new ExpenseItem(cat, amount, desc);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        items.add(expenseItem);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        items.forEach(e -\u003e sb.append(e).append(\"\\n\"));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        assert (sb.toString().split(\" \").length \u003e 1);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        storage.writeToFile(sb.toString());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return expenseItem;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Delete expense."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param id      the expense index"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param storage storage"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public ExpenseItem deleteExpense(int id, Storage storage) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        ExpenseItem cur \u003d items.get(id - 1);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        items.remove(cur);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        if (items.size() \u003e 0) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            items.forEach(t -\u003e sb.append(t).append(\"\\n\"));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        storage.writeToFile(sb.toString());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return cur;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 157
    }
  },
  {
    "path": "src/main/java/duke/storage/CheckTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "interface CheckTask {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Unimplemented method, maybe useful when project becomes functional."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    boolean test(String task);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 8
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * @author leslieharland"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.alias.AliasList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.expense.ExpenseItem;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.expense.ExpenseList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.task.EventObj;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.task.SearchTask;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * The Class Storage handles all the file related operations performed to"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * act on a task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class Storage implements CheckTask {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String filePath;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Instantiates a new storage."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param filePath the file path"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Populate the file with the updated lists of tasks overwriting existing"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * content each time."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param myContent stores the string format of the task"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public void writeToFile(String myContent) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        BufferedWriter writer \u003d null;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            FileWriter fw \u003d new FileWriter(createDataFile());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            writer \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            writer.write(myContent);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            writer.flush();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            ioe.printStackTrace();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                if (writer !\u003d null) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    writer.close();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            } catch (Exception ex) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Load tasks from the file, if the file does not exist, create it and use"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * it to store created tasks"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Parses the tasks based on tasks type enum specified in Operation.java"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the task list"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public TaskList loadTasks() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        TaskList tasks \u003d new TaskList(this);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            createDataFile();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            BufferedReader rd \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            while ((line \u003d rd.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                String type \u003d line.split(\"|\")[0];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    tasks.addTask(EventObj.parse(line));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    tasks.addTask(Deadline.parse(line));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    tasks.addTask(Todo.parse(line));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    //add code"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            rd.close();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Find tasks containing the user search term."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the task list"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public TaskList findTasks(String... searchTerm) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        TaskList tasks \u003d loadTasks();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        TaskList temp \u003d new TaskList(this);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        int pos \u003d 1;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            if (Arrays.stream(searchTerm).parallel().anyMatch(task.getDescription()::contains)) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                temp.addTask(new SearchTask(pos, task.isDone(), task.getDescription(), task.getType()));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            pos++;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public boolean test(String task) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return task.equals(\"T\") || task.equals(\"E\") || task.equals(\"D\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Load expenses from the file."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Parses the tasks based on tasks type enum specified in duke.expense.Category"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the expense list"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public ExpenseList loadExpenses() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        ExpenseList expenseList \u003d new ExpenseList(this);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            createDataFile();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            BufferedReader rd \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            while ((line \u003d rd.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                expenseList.addExpense(ExpenseItem.parse(line));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            rd.close();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return expenseList;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Load alias from the file."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Retrieves all the alias from the file."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the expense list"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public AliasList loadAlias() {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        AliasList aliasList \u003d new AliasList(this);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            createDataFile();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            BufferedReader rd \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            while ((line \u003d rd.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                String[] parts \u003d line.split(\" \");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                aliasList.addAlias(parts[0], parts[1]);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            rd.close();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return aliasList;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * If the file does not exist, create it and use it to store created alias."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public File createDataFile() throws IOException {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return file;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 194
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * @author leslieharland"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * The Class Deadline."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Instantiates a new deadline."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param description the description"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param date        the date"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public Deadline(String description, String date) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        super(description, date);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        type \u003d \"D\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Parses the deadline object from a task string stored in the file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * e.g. D | 1 | Borrow book"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param taskString the task string"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the deadline"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public static Deadline parse(String taskString) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        assert (!taskString.isEmpty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String[] parts \u003d taskString.split(\"\\\\|\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String desc \u003d parts[2];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        Deadline dl \u003d new Deadline(desc, \"\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        if (parts.length \u003e 3) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            dl \u003d new Deadline(desc, parts[3]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        dl.isDone \u003d parts[1].trim().equals(\"1\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return dl;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Returns the task string e.g. 1. Deadline (by: 20 May 2020)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return super.toString() + \"(by: \" + printDateTime() + \")\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Similar to the toString method."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String print() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return getType() + \" | \" + (isDone ? String.valueOf(1) : String.valueOf(0))"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                + \" | \" + getDescription() + (!userKeyedDateString.equals(\"\") ? \" | \""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                + printDateTime() : \"\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 64
    }
  },
  {
    "path": "src/main/java/duke/task/EventObj.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * @author leslieharland"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * The Class EventObj has datetime property in addition to properties of a normal task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class EventObj extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Instantiates a new event obj."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param description the description"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param datetime    the datetime"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public EventObj(String description, String datetime) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        super(description, datetime);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        type \u003d \"E\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Parses the event."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param taskString the task string"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the event obj"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public static EventObj parse(String taskString) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String[] parts \u003d taskString.split(\"\\\\|\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String desc \u003d parts[2];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        EventObj t \u003d new EventObj(desc, \"\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        if (parts.length \u003e 3) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            t \u003d new EventObj(desc,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    String.join(\"\", java.util.Arrays.stream(parts).skip(3).toArray(String[]::new)));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        t.isDone \u003d parts[1].trim().equals(\"1\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Returns the task string e.g. Project meeting (at: 20 May 2020)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return super.toString() + \"(at: \" + printDateTime() + \")\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Prints the event."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String print() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return getType() + \" | \" + (isDone ? String.valueOf(1)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                : String.valueOf(0)) + \" | \" + getDescription()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                + (!userKeyedDateString.equals(\"\") ? \" | \" + printDateTime() : \"\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 63
    }
  },
  {
    "path": "src/main/java/duke/task/Parseable.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * @author leslieharland"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * The Interface Parseable."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public interface Parseable {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Parses the."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param taskString the task string"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the parseable"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    static Parseable parse(String taskString) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return new Parseable() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        };"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 22
    }
  },
  {
    "path": "src/main/java/duke/task/SearchTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * Used as a model which the key property used to identify the index linked"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * to the existing list of tasks."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * For instance, the subset of tasks found may not contain all the tasks"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * so an index is required to retrieve the correct task from the list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class SearchTask extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    protected int key;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public SearchTask(int key, boolean isDone, String description, String type) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        super(isDone, description, type);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.key \u003d key;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public int getKey() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return key;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 20
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * @author leslieharland"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.command.Operation;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.util.DateUtil;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * The Class Task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public abstract class Task implements TaskPrintable, Parseable {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    protected String userKeyedDateString;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    protected java.time.LocalDate datetime;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Instantiates a new task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param description the description"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * This constructor is used to retain most useful properties needed to create"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * task at its core."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param description the description"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public Task(boolean isDone, String description, String type) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Instantiates a new task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param description description"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param datetime    datetime"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public Task(String description, String datetime) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.userKeyedDateString \u003d datetime;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        setDatetime(datetime);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Instantiates a new task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param isDone      1 if the task is done"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param description description"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private Task(boolean isDone, String description) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Sets the datetime."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param dt the new datetime"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    protected void setDatetime(String dt) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        datetime \u003d DateUtil.formatDate(dt);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Prints the date time."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String printDateTime() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        DateTimeFormatter outputformatter"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                \u003d java.time.format.DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            String output \u003d (datetime).format(outputformatter);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            return userKeyedDateString;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Gets the status icon."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the status icon"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Checks if the task has been marked done, false when newly created."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return true, if is done"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Gets the description describing the task entered by the user."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the description"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Gets the type."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the type"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Sets the type."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param type the new type"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public void setType(String type) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        if (type.equalsIgnoreCase(Operation.TODO.toString())) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            this.type \u003d \"T\";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } else if (type.equalsIgnoreCase(Operation.DEADLINE.toString())) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            this.type \u003d \"D\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } else if (type.equalsIgnoreCase(Operation.EVENT.toString())) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            this.type \u003d \"E\";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            this.type \u003d \"\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Mark as done."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * To string."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return \"[\" + getType() + \"]\""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                + \" [\" + getStatusIcon() + \"]  \" + getDescription();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Prints the task string."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String print() {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return getType() + \" | \" + (isDone ? String.valueOf(1) : String.valueOf(0))"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                + \" | \" + getDescription();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 174
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * @author leslieharland"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.command.Operation;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * The Class TaskList."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Instantiates a new task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public TaskList(Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Gets the tasks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the tasks"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Gets the task with its index."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param id the task id"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the task"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public Task get(int id) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return tasks.get(id);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Gets the size."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the size"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Adds the task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param t the task"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Adds the task."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param command the current"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param storage the storage"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @throws DukeException the duke exception"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public Task addTask(String command, String[] words, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        assert (storage !\u003d null);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        if (words.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a \""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    + command + \" cannot be empty.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        Task t \u003d null;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        Operation operation \u003d Operation.valueOf(command.toUpperCase());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        switch (operation) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            int position \u003d 0;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            boolean specifyDate \u003d false;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            for (String w : words) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                if (w.equals(\"/by\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    String description \u003d String.join(\" \", List.of(words).subList(0, position));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    String date \u003d List.of(words).stream().skip(position + 1)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                            .collect(Collectors.joining(\" \"));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    t \u003d new Deadline(description, date);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    tasks.add(getSize(), t);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    specifyDate \u003d true;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    position++;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            if (!specifyDate) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                String description \u003d String.join(\" \", words);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                t \u003d new Deadline(description, \"\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                tasks.add(getSize(), t);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            position \u003d 0;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            specifyDate \u003d false;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            for (String w : words) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                if (w.equals(\"/at\")) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    String description \u003d String.join(\" \", List.of(words).subList(0, position));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    String datetime \u003d List.of(words).stream().skip(position + 1)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                            .collect(Collectors.joining(\" \"));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    t \u003d new EventObj(description, datetime);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    tasks.add(getSize(), t);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    specifyDate \u003d true;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    position++;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            if (!specifyDate) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                String description \u003d String.join(\" \", words);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                t \u003d new EventObj(description, \"\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                tasks.add(getSize(), t);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            t \u003d new Todo(String.join(\" \", words));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            tasks.add(getSize(), t);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            assert (Arrays.stream(Operation.values()).noneMatch(o -\u003e o.name().equals(command)));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        tasks.forEach(task -\u003e sb.append(task.print()).append(\"\\n\"));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        assert (sb.toString().split(\"\\\\|\").length \u003e 1);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        storage.writeToFile(sb.toString());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return tasks.get(getSize() - 1);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Delete task."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param id      the task index"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param storage storage"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public Task deleteTask(int id, Storage storage) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        Task cur \u003d tasks.get(id - 1);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        tasks.remove(cur);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        if (tasks.size() \u003e 0) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            tasks.forEach(t -\u003e sb.append(t.print()).append(\"\\n\"));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        storage.writeToFile(sb.toString());"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return cur;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Mark task as done."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param id the task index"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public Task markTaskAsDone(int id) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        int taskId \u003d id - 1;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        Task cur \u003d tasks.get(taskId);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        cur.markAsDone();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        tasks.remove(taskId);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        tasks.add(taskId, cur);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            sb.append(t.print() + \"\\n\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        storage.writeToFile(sb.toString());"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return cur;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 195
    }
  },
  {
    "path": "src/main/java/duke/task/TaskPrintable.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * @author leslieharland"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * The Interface TaskPrintable."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public interface TaskPrintable {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    String print();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 12
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * @author leslieharland"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * The Class Todo."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Instantiates a new todo."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param description the description"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        type \u003d \"T\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Parses the todo."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param taskString the task string"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the todo"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public static Todo parse(String taskString) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String[] parts \u003d taskString.split(\"\\\\|\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        boolean d \u003d parts[1].trim().equals(\"1\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String desc \u003d parts[2].trim();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        Todo t \u003d new Todo(desc);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        t.isDone \u003d d;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Prints they task string e.g. T | 1 | Borrow book"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the task string"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String print() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return getType() + \" | \" + (isDone ? String.valueOf(1) : String.valueOf(0)) + \" | \" + getDescription();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 46
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * @author leslieharland"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.alias.AliasList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.expense.ExpenseItem;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.expense.ExpenseList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " * The Class Ui."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    static Scanner sc;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Gets the single instance of Ui."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return single instance of Ui"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public static Ui getInstance() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return new Ui();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Prints the application logo."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return logo string"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public static String logo() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sb.append(logo);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Welcome."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public static String welcome() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sb.append(\"Hello I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public static String makeLine() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return \"\\t____________________________________________________________\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Gets the scanner."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @return the scanner"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public Scanner getScanner() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return sc;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Clean."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String clean() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        List\u003cString\u003e msgs \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        msgs.add(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return showMessage(msgs);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Show loading error."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String showLoadingError() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        List\u003cString\u003e msgs \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        msgs.add(\"Cannot start program\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return showMessage(msgs);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Show message."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param msg the msg"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String showMessage(List\u003cString\u003e msg) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        for (String m : msg) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            sb.append(\"\\t\" + m);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Show tasks."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param tl     the task list"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param isFind formats the display information to the user if the find command is supplied"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String showTasks(TaskList tl, boolean isFind) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sb.append(\"\\tHere are the \" + (isFind ? \"matching \" : \"\") + \"tasks in your list: \\n\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        for (int count \u003d 0; count \u003c tl.getSize(); count++) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            sb.append(\"\\t\" + (count + 1) + \". \");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            sb.append(tl.get(count)).append(\"\\n\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Show aliases."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param aliases the aliases list"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String showAliases(AliasList aliases) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sb.append(\"\\tHere are the aliases in your list: \\n\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        aliases.getAll().forEach((key, value) -\u003e sb.append(\"\\t\" + key + \" \u003c--\u003e \" + value));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Show expenses."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param expenses  the expenses"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param startDate start date"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param endDate   end date"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String showExpenses(ExpenseList expenses, LocalDate startDate, LocalDate endDate) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sb.append(\"\\tHere are the expenses you have made: \\n \" + (startDate !\u003d null ? \"from \" + startDate.toString()"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                + (endDate !\u003d null ? \" to \" + endDate.toString() : \"\") : \"\"));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sb.append(\"\\n\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        for (int count \u003d 0; count \u003c expenses.getSize(); count++) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            sb.append(\"\\t\" + (count + 1) + \". \");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            sb.append(expenses.get(count)).append(\"\\n\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Task mark done."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param cur the cur"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String taskMarkDone(Task cur) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sb.append(\"Nice! I\u0027ve marked this task as done: \\n\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sb.append(cur.getStatusIcon() + \" \""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                + cur.getDescription());"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Task number error."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String taskNumberError() {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sb.append(\"Please enter a valid task number \\n\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Task removed successfully."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param cur  current item"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param size the size"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String taskRemoveSuccess(Task cur, int size) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sb.append(\"\\tNoted. I\u0027ve removed this task: \\n\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sb.append(\"\\t\" + cur + \"\\n\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sb.append(\"\\tNow you have \" + size + \" tasks in the list.  \\n\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Expense removed successfully."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param e    current item"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param size the size"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String expenseRemoveSuccess(ExpenseItem e, int size) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sb.append(\"\\tNoted. I\u0027ve removed this expense: \\n\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sb.append(\"\\t\" + e + \"\\n\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Alias removed successfully."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param alias current item"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param size  the size"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String aliasRemoveSuccess(String alias, int size) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sb.append(\"\\tNoted. I\u0027ve removed this alias: \\n\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sb.append(\"\\t\" + alias + \"\\n\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Task is added successfully."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param cur  current item"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param size the size"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String taskAddSuccess(Task cur, int size) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sb.append(\"\\tGot it. I\u0027ve added this task:  \\n\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sb.append(\"\\t\" + cur + \"\\n\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sb.append(\"\\tNow you have \" + size + \" tasks in the list.  \\n\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Expense is added successfully."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param e    current item"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param size the size"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String expenseAddSuccess(ExpenseItem e, int size) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sb.append(\"\\tGot it. I\u0027ve added:  \\n\");"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sb.append(\"\\t\" + e + \"\\n\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sb.append(\"\\tTo view your expenses, type \u0027list expenses\u0027. \\n\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Alias is added successfully."
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param alias current item"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param size  the size"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public String aliasAddSuccess(String alias, int size) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sb.append(\"\\tGot it. I\u0027ve added:  \\n\");"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sb.append(\"\\t\" + alias + \"\\n\");"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        sb.append(\"\\tTo view your aliases, type \u0027list alias\u0027. \\n\");"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 259
    }
  },
  {
    "path": "src/main/java/duke/util/DateUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class DateUtil {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Formats the date in the accepted format."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param dt the datetime"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public static LocalDate formatDate(String dt) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        assert (!dt.isEmpty());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        dt \u003d dt.replaceAll(\"\\\\s\", \"\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            java.time.format.DateTimeFormatter formatter"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                    \u003d java.time.format.DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            return java.time.LocalDate.parse(dt, formatter);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                java.time.format.DateTimeFormatter formatter"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                        \u003d java.time.format.DateTimeFormatter.ofPattern(\"dd/MM/yyyy hhmm\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                return java.time.LocalDate.parse(dt, formatter);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            } catch (Exception ex2) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return LocalDate.now();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 30
    }
  },
  {
    "path": "src/main/java/duke/util/EnumUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.command.Mode;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.command.Operation;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.expense.Category;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.util.logging.Level;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.util.logging.Logger;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class EnumUtil {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    static Logger logger \u003d Logger.getLogger(EnumUtil.class.getName());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Checks if the command exists in enum."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param command command"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public static boolean isValidOperation(String command) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        for (Operation o : Operation.values()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            if (o.name().equals(command.toUpperCase())) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                logger.log(Level.INFO, \"operation is \" + o.name() + \"\\n\" + \"command is \" + command);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Checks if the command exists in enum."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param command command"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public static boolean isValidMode(String command) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        for (Mode o : Mode.values()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            if (o.name().equals(command.toUpperCase())) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                logger.log(Level.INFO, \"mode is \" + o.name());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * Checks if the command exists in enum."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     * @param command command"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public static boolean isValidCategory(String command) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        for (Category o : Category.values()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            if (o.name().equals(command.toUpperCase())) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 58
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" HBox.hgrow\u003d\"ALWAYS\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 19
    }
  },
  {
    "path": "src/main/resources/view/SimpleDialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 16
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public void runTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 10
    }
  },
  {
    "path": "src/test/java/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public void runTest() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        TaskList tl \u003d new TaskList(null);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        tl.addTask(\"todo\", Arrays.asList(\"borrow\", \"book\").toArray(String[]::new), new Storage(\"../data/duke.txt\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        assert (tl.getSize() \u003d\u003d 1);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 16
    }
  },
  {
    "path": "src/test/java/duke/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.task.EventObj;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public void printDateTimeTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String desc \u003d \"project meeting\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String datetime \u003d \"2020-01-15\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        Task t \u003d new EventObj(desc, datetime);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        Task t2 \u003d new Deadline(desc, datetime);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        assert (t.printDateTime().equals(\"Jan 15 2020\")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "                \u0026\u0026 t2.printDateTime().equals(\"Jan 15 2020\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 20
    }
  },
  {
    "path": "src/test/java/duke/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    public void parseTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String taskString \u003d \"T | 0 | borrow book\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        String[] parts \u003d taskString.split(\"\\\\|\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        Task todo \u003d Todo.parse(taskString);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        assert (!todo.isDone());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        assert (todo.getType().equals(\"T\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "        assert (todo.getDescription().equals(\"borrow book\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 18
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "if [ ! -d \"../bin\" ]; then"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  mkdir ../bin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "fi"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]; then"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  rm ACTUAL.TXT"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "fi"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java; then"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  exit 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "fi"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "java -classpath ../bin Duke \u003cinput.txt \u003eACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leslieharland"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "if [ $? -eq 0 ]; then"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  exit 0"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "else"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "  exit 1"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leslieharland"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "leslieharland": 30
    }
  }
]
