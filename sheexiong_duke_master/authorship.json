[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "`A-TextUiTesting` | [Text duke.ui.Ui Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "sheexiong": 3,
      "-": 36
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "test {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    archiveVersion \u003d \"0.1\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheexiong": 37,
      "-": 19
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "T | 0 | abc"
      }
    ],
    "authorContributionMap": {
      "sheexiong": 1
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "## Description"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Duke is a **Personal Assistant ChatBot** to help for tracking various tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "![Duke Ui](Ui.png)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "### Adding a task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "- You can add a new tasks by using one of the keywords below:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "  - todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "  - event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "  - deadline"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "### Delete tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "- You can delete single or multiple tasks at a time."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "### Mark task as done"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "- You can mark a specific task as done."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "### Find task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "- You can find specific task that match the keyword."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "### List tasks"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "- You can view all of the tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "### Exit the program"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "- You can say goodbye and exit the program."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "### `todo` - Add a new todo task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Adding a new todo task to the system.  "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Format: `todo \u003cTASK\u003e`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "`todo tutorial 5`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "```"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Got it. I\u0027ve added this task:  "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "[T] [n] tutorial 5"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "```"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "![Duke Ui](todo.png)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "### `event` - Add a new event task"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Adding a new event task with date and time to the system.  "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Format: `event \u003cTASK\u003e /at dd/MM/yyyy HHmm`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "`event birthday party /at 24/02/2020 1800`"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "```"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Got it. I\u0027ve added this task:  "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "[E] [n] birthday party (at: 24 Feb 2020 06:00PM)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "```"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "![Duke Ui](event.png)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "### `deadline` - Add a new deadline task"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Adding a new deadline task with date and time to the system.  "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Format: `deadline \u003cTASK\u003e /by dd/MM/yyyy HHmm`"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "`deadline assignment /by 25/02/2020 2300`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "```"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Got it. I\u0027ve added this task:  "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "[D] [n] assignment (at: 25 Feb 2020 11:00PM)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "```"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "![Duke Ui](deadline.png)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "### `delete` - Delete a tasks or multiple tasks"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Delete single or multiple tasks in the system based on index number.  "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Format: `delete \u003cNUM\u003e...`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "`delete 3 1 2`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "```"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Noted. I\u0027ve removed these tasks:  "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "1[T] [n] task 3"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "2[T] [n] task 1"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "3[T] [n] task 2"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "```"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "![Duke Ui](delete.png)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "### `done` - Mark a task as done"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Mark a specific task as done.  "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Format: `done \u003cNUM\u003e`"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "```"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Nice! I\u0027ve marked this task as done:  "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "[T] [y] task 4"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "```"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "![Duke Ui](done.png)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "### `find` - Find the tasks that match the keyword"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Find the tasks that match the keyword given and return the list of matched tasks.    "
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Format: `find \u003cKEYWORD\u003e`"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "`find tutorial`"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "```"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Here are the matching tasks in your list:  "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "1[T] [n] tutorial 5"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "2[D] [n] tutorial 2 (by: 20 Feb 2020 08:00PM)"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "3[E] [n] tutorial 3 (at: 20 Feb 2020 08:00PM)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "```"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "![Duke Ui](find.png)"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "### `list` - Show all of the tasks in the system"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Display all tasks in the system.    "
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "```"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "1[T] [y] task 4"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "2[T] [n] tutorial 5"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "3[D] [n] tutorial 2 (by: 20 Feb 2020 08:00PM)"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "4[E] [n] tutorial 3 (at: 20 Feb 2020 08:00PM)"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "5[T] [n] homework 2"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "```"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "![Duke Ui](list.png)"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "### `bye` - Exit the program"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Say goodbye to ChatBot. The program will close after 1 second.  "
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "```"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Bye!!! See you again :)"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "```"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "![Duke Ui](bye.png)"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "## Acknowledgements"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Credit to Jeffry Lum for the fxml and java files for JAVAFX GUI -  [JavaFx TutorialPart 4](https://github.com/nus-cs2103-AY1920S2/duke/blob/master/tutorials/javaFxTutorialPart4.md)  "
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Credit to Software Engineering Education addressbook-level2 for code Organization - [AddressBook (Level 2)](https://github.com/se-edu/addressbook-level2)  "
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Credit to MintBerryCrunch for the solution to close GUI window - [stackOverflow](https://stackoverflow.com/questions/52393982)  "
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Credit to Ernest Friedman-Hill for the solution to redirect console output to string in java - [stackOverflow](https://stackoverflowcom/questions/8708342)  "
      }
    ],
    "authorContributionMap": {
      "sheexiong": 169,
      "-": 22
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        Circle clip \u003d new Circle(45, 45, 45);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        displayPicture.setClip(clip);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Get the user dialog box."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param text text to display"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param img image to display"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @return new dialog box object"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Get the application dialog box."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param text text to display"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param img image to display"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @return new dialog box object"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheexiong": 78
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " * Initializes the setting and prepare respond to user input."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Setup the list of task based on the local file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param filePath The filepath of the lacal file to store the tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            ui.showError(new DukeException(\"Unknown Error, Please try to restart the application!\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Return the response based on user input."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param input user input from the GUI"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @return return the response from the system"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        //Solution below adapted from https://stackoverflow.com/questions/8708342"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        ByteArrayOutputStream respond \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        PrintStream uiOutput \u003d new PrintStream(respond);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        final PrintStream systemOutput \u003d System.out;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        System.setOut(uiOutput);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        assert tasks !\u003d null : \"The tasks should be initialise at this stage\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        assert ui !\u003d null : \"The Ui object should be initialise at this stage\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        assert storage !\u003d null : \"The storage object should be initialise at this stage\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            ui.showError(ex);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        System.out.flush();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        System.setOut(systemOutput);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        return respond.toString();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheexiong": 66
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheexiong": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private Duke duke \u003d new Duke(\"data/duke.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private final Image icon \u003d new Image(this.getClass().getResourceAsStream(\"/images/launcher-icon.png\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            stage.setResizable(false);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            stage.getIcons().add(icon);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheexiong": 37
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private static final String WELCOME_MESSAGE \u003d \"Welcome to Duke Application!!!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Initialize the user interface."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                DialogBox.getDukeDialog(WELCOME_MESSAGE, dukeImage)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        );"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Setup the duke object."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param d the duke object"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        );"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        // check if the user is going to exit the application"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            handleExit();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Handle the exit operation with 1 second delay then exit the application."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private void handleExit() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        //@@author sheexiong-reused"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        //Reused from https://stackoverflow.com/questions/52393982 with minor modifications"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        new Thread(() -\u003e {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                Thread.sleep(1000);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        }).start();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheexiong": 87,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " * Represents an executable command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Create instance of Command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Execute the command and perform relative operation and return the feedback to user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param tasks TaskList which contain all existing task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param ui Ui which handle ui operation"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param storage Storage to perform read and write operation to the file"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @throws DukeException Exception related when execute the command"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheexiong": 30
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " * Represents a deadline command. Upon execution, updates data/duke.txt and produces some feedback to the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private LocalDateTime dateTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Create instance of DeadlineCommand."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param description Description of the deadline task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param dateTime Date and time of the deadline task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public DeadlineCommand(String description, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        Task task \u003d new Deadline(description, dateTime);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        storage.saveSingle(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        ui.showAddTask(task, tasks.getSize());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheexiong": 37
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " * Represents a delete command. Upon execution, updates data/duke.txt and produces some feedback to the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private List\u003cInteger\u003e indexes;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Create instance of DeleteCommand."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param indexes List of indexes of the delete tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public DeleteCommand(List\u003cInteger\u003e indexes) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        this.indexes \u003d indexes;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        TaskList tempTask \u003d tasks.deleteTaskByIndexes(indexes);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        storage.saveAll(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        ui.showDeleteTask(tempTask, tasks.getSize());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheexiong": 32
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " * Represents a done command. Upon execution, updates data/duke.txt and produces some feedback to the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Create instance of DoneCommand."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param index Index of the done task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        Task tempTask \u003d tasks.getByIndex(index);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        tempTask.markDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        storage.saveAll(tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        ui.showDone(tempTask);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheexiong": 31
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " * Represents an event command. Upon execution, updates data/duke.txt and produces some feedback to the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private LocalDateTime dateTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Create instance of EventCommand."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param description Description of the event task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param dateTime Date and time of the event task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public EventCommand(String description, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        Task task \u003d new Event(description, dateTime);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        storage.saveSingle(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        ui.showAddTask(task, tasks.getSize());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheexiong": 37
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " * Represents an exit/bye command. Upon execution, produces some feedback to the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        ui.showExit();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheexiong": 16
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " * Represents an find command. Upon execution, produces some feedback to the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Create instance of FindCommand."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param keyword keyword to find"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        TaskList result \u003d tasks.getTaskListWithKeyword(keyword);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        ui.showFindTask(result);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheexiong": 27
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " * Represents a list command. Upon execution, produces some feedback to the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        ui.showAllTask(tasks);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheexiong": 16
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " * Represents a todo command. Upon execution, updates data/duke.txt and produces some feedback to the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Create instance of TodoCommand."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param description Description of the todo task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public TodoCommand(String description) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        Task task \u003d new Todo(description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        storage.saveSingle(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        ui.showAddTask(task, tasks.getSize());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheexiong": 32
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " * Signals an error caused by any Duke app related error."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Create instance of DukeException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param message Error message of exception"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheexiong": 18
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Create instance of InvalidCommandException."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param message Error message of exception"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheexiong": 13
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.command.TodoCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " * Parses user input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private static final String UNKNOWN_ERROR \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private static final String EXTRA_ERROR \u003d \"The command contains extra information!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private static final String INCOMPLETE_ERROR \u003d \"The command is too short and incomplete!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private static final String NUMBER_ERROR \u003d \"Please give the number of task!\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private static final String DATETIME_ERROR \u003d \"Please follow this format \\\"31/01/2020 2300\\\" for date and time!\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private static final DateTimeFormatter IN_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Parse user input into command for execution."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param fullCommand full user input string"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @return the command based on the user input"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public static Command parse(String fullCommand) throws InvalidCommandException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        String[] command \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        switch (command[0]) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            return prepareList(command);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            return prepareDone(command);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            return prepareDelete(command);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            return prepareTodo(command);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            return prepareDeadline(command);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            return prepareEvent(command);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            return prepareFind(command);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            return prepareExit(command);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            throw new InvalidCommandException(UNKNOWN_ERROR);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Parses user command in the context of the find command."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param command full user command array"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @return the find command"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private static Command prepareFind(String[] command) throws InvalidCommandException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            String keyword \u003d command[1];"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            return new FindCommand(keyword);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            throw new InvalidCommandException(INCOMPLETE_ERROR);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Parses user command in the context of the exit command."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param command full user command array"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @return the exit command"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private static Command prepareExit(String[] command) throws InvalidCommandException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        if (command.length \u003e 1) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            throw new InvalidCommandException(EXTRA_ERROR);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        return new ExitCommand();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Parses user command in the context of the event command."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param command full user command array"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @return the event command"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private static Command prepareEvent(String[] command) throws InvalidCommandException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            String[] commandSplit \u003d command[1].split(\" /at \", 2);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            String desc \u003d commandSplit[0];"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            LocalDateTime dateTime \u003d LocalDateTime.parse(commandSplit[1], IN_FORMATTER);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            return new EventCommand(desc, dateTime);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            throw new InvalidCommandException(INCOMPLETE_ERROR);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            throw new InvalidCommandException(DATETIME_ERROR);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Parses user command in the context of the deadline command."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param command full user command array"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @return the deadline command command"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private static Command prepareDeadline(String[] command) throws InvalidCommandException {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            String[] commandSplit \u003d command[1].split(\" /by \", 2);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            String desc \u003d commandSplit[0];"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            LocalDateTime dateTime \u003d LocalDateTime.parse(commandSplit[1], IN_FORMATTER);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            return new DeadlineCommand(desc, dateTime);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            throw new InvalidCommandException(INCOMPLETE_ERROR);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            throw new InvalidCommandException(DATETIME_ERROR);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Parses user command in the context of the todo command."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param command full user command array"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @return the todo command command"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private static Command prepareTodo(String[] command) throws InvalidCommandException {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            String desc \u003d command[1];"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            return new TodoCommand(desc);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            throw new InvalidCommandException(INCOMPLETE_ERROR);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Parses user command in the context of the delete command."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param command full user command array"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @return the delete command command"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private static Command prepareDelete(String[] command) throws InvalidCommandException {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            String[] commandSplit \u003d command[1].split(\" \");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            List\u003cInteger\u003e indexes \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            for (String index : commandSplit) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                indexes.add(Integer.parseInt(index));"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            return new DeleteCommand(indexes);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            throw new InvalidCommandException(INCOMPLETE_ERROR);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            throw new InvalidCommandException(NUMBER_ERROR);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Parses user command in the context of the done command."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param command full user command array"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @return the done command command"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private static Command prepareDone(String[] command) throws InvalidCommandException {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            int index \u003d Integer.parseInt(command[1]);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            if (command.length \u003e 2) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                throw new InvalidCommandException(EXTRA_ERROR);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            return new DoneCommand(index);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            throw new InvalidCommandException(INCOMPLETE_ERROR);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            throw new InvalidCommandException(NUMBER_ERROR);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Parses user command in the context of the list command."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param command full user command array"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @return the list command command"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private static Command prepareList(String[] command) throws InvalidCommandException {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        if (command.length \u003e 1) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            throw new InvalidCommandException(EXTRA_ERROR);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        return new ListCommand();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheexiong": 205
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " * Represents the file used to store existing task list data."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private static final DateTimeFormatter IN_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Creates an instance of Storage."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param filePath filepath of the local file to store data"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Load the tasks data from the file if exists."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @return ArrayList of the task read from file"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @throws DukeException exception for error while reading"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        File file \u003d new File(Paths.get(filePath).toUri());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        if (file.exists()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            return readFile(file);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            throw new DukeException(\"Reading Error\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Save single line of data at the end of the data file."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param task task to save to the file"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @throws DukeException exception for error while writing data to the file"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public void saveSingle(Task task) throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            saveCheck();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            FileWriter fw \u003d new FileWriter(Paths.get(filePath).toString(), true);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            fw.write(task.saveString() + System.lineSeparator());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            throw new DukeException(\"Save single error.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Save list of tasks to the data file."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param tasks list of task to save to the file"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @throws DukeException exception for error while writing data to the file"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public void saveAll(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            saveCheck();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            FileWriter fw \u003d new FileWriter(Paths.get(filePath).toString());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            for (Task task : tasks.getList()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                fw.write(task.saveString() + System.lineSeparator());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            throw new DukeException(\"Save all error.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Check if the file and directory exist before saving. Create the file and directory if do not exist."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @throws DukeException exception for error while creating the file or directory"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private void saveCheck() throws DukeException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        File file \u003d new File(Paths.get(filePath).toUri());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        boolean success;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            File dir \u003d new File(file.getParentFile().getAbsolutePath());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            if (!dir.exists()) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                success \u003d dir.mkdir();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                if (!success) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                    throw new DukeException(\"Create file directory error\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                success \u003d file.createNewFile();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                if (!success) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                    throw new DukeException(\"Create file error\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            } catch (IOException ex) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                throw new DukeException(\"Create file error\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Read the data from the file, return all of the corresponding objects by a list."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param file File object of the target file"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @return list of tasks based on the data"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @throws DukeException exception for error while accessing the file"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private ArrayList\u003cTask\u003e readFile(File file) throws DukeException {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            Scanner s \u003d new Scanner(file);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                String[] temp \u003d s.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                switch (temp[0]) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                    Task todo \u003d new Todo(temp[2]);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                    checkMarkDone(todo, temp[1]);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                    tasks.add(todo);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                    Task event \u003d new Event(temp[2], LocalDateTime.parse(temp[3], IN_FORMATTER));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                    checkMarkDone(event, temp[1]);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                    tasks.add(event);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                    Task deadline \u003d new Deadline(temp[2], LocalDateTime.parse(temp[3], IN_FORMATTER));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                    checkMarkDone(deadline, temp[1]);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                    tasks.add(deadline);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        } catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            throw new DukeException(\"Unable find the file!\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Check and mark the task done if the status is true."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param task task to check and mark"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param status status of the given task"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private void checkMarkDone(Task task, String status) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        if (status.equals(\"1\")) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            task.markDone();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheexiong": 168
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " * Represents a deadline task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private LocalDateTime dateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Creates an instances of Deadline."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param description description of task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param dateTime date and time of task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public Deadline(String description, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        super.taskType \u003d TaskType.D;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Get the date and time in the format which match in data file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @return string represent the date and time"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public String getDateTime() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        return dateTime.format(IN_FORMATTER);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public String saveString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        String status \u003d getStatus() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        return String.format(\"%s | %s | %s | %s\", getTaskType(), status, getDescription(), getDateTime());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        return String.format(\"[%s] %s (by: %s)\",super.getTaskType(), super.toString(),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                dateTime.format(OUT_FORMATTER));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheexiong": 43
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " * Represents an event task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private LocalDateTime dateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Creates an instances of Event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param description description of task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param dateTime date and time of task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public Event(String description, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        super.taskType \u003d TaskType.E;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Get the date and time in the format which match in data file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @return string represent the date and time"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public String getDateTime() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        return dateTime.format(IN_FORMATTER);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public String saveString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        String status \u003d getStatus() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        return String.format(\"%s | %s | %s | %s\", getTaskType(), status, getDescription(), getDateTime());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        return String.format(\"[%s] %s (at: %s)\",super.getTaskType(), super.toString(),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                dateTime.format(OUT_FORMATTER));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheexiong": 43
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " * Represents a Task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    protected TaskType taskType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    protected static final DateTimeFormatter IN_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    protected static final DateTimeFormatter OUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy KK:mm a\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Creates an instances of Task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        this.taskType \u003d TaskType.X; //not using type"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Get the icon represent task status."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @return task status icon"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        return (isDone ? \"[y]\" : \"[n]\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Get the status of the task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @return boolean represent status"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Get type of the task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @return type of the task"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public TaskType getTaskType() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        return this.taskType;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Get description of the task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @return description string"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Change the task status to done."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Convert task to string to store in the data file."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @return string represent the task"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public String saveString() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        String status \u003d getStatus() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        return String.format(\"%s | %s | %s\", getTaskType(), status, getDescription());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        return String.format(\"%s %s\",getStatusIcon(), getDescription());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheexiong": 83
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " * Represents a list of tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Creates an instance of TaskList."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Creates an instance of TaskList with existing tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param tasks list of tasks"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Add a new task to the list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param task new task to add"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Search and get a task by the given index."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param index given index of the task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @return the result task"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @throws DukeException exception for error while the given index not exist"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public Task getByIndex(int index) throws DukeException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            return tasks.get(index - 1);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            throw new DukeException(\"OOPS!!! We don\u0027t have this number in list!!!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Get the size of the list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @return integer size of the list"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Get the list from the TaskList object."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @return list of tasks"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Delete the list of tasks based on given indexes."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param indexes list indexes of the task"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @return deleted TaskList"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @throws DukeException exception for error while the given index not exist"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public TaskList deleteTaskByIndexes(List\u003cInteger\u003e indexes) throws DukeException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        TaskList deletedTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            // This for loop is to ensure the sequence of returned deletedTasks."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            for (int index : indexes) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                deletedTasks.addTask(tasks.get(index - 1));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            // Sort the list in reverse order before deleting."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            indexes.sort(Collections.reverseOrder());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            for (int index : indexes) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                tasks.remove(index - 1);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            throw new DukeException(\"OOPS!!! We don\u0027t have some number in list!!!\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        return deletedTasks;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Find the task which contains the keyword."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param keyword keyword to search"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @return a TaskList of result tasks"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public TaskList getTaskListWithKeyword(String keyword) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        TaskList result \u003d new TaskList();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                result.addTask(task);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheexiong": 115
    }
  },
  {
    "path": "src/main/java/duke/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " * Enumeration for the type of task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    T, D, E, X"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheexiong": 8
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " * Represents a todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Creates an instance of Todo."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param description description for the Todo"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        super.taskType \u003d TaskType.T;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        return String.format(\"[%s] %s\", super.getTaskType(), super.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheexiong": 22
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " * Represent the user interface for the program to prepare reply string to user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private static final String LS \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private static final String NUM_OF_TASKS \u003d \"Now you have %d tasks in the list.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private static final String ADD_TASK \u003d \"Got it. I\u0027ve added this task: \";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private static final String DELETE_TASK \u003d \"Noted. I\u0027ve removed these tasks: \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private static final String DONE_TASK \u003d \"Nice! I\u0027ve marked this task as done: \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private static final String EXIT_TASK \u003d \"Bye!!! See you again :)\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private static final String INVALID_TASK \u003d \"Invalid command format!\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private static final String FIND_TASK \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Shows message to the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param message message given"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private void showToUser(String... message) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        for (String m : message) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            System.out.println(m.replace(\"\\n\", LS));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Shows error message based on the exception to user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param ex exception which contain error message"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public void showError(DukeException ex) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        showToUser(ex.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Shows the information of added task to user."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param task new task"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param totalTasks current total task in integer"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public void showAddTask(Task task, int totalTasks) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        showToUser(ADD_TASK, task.toString(), String.format(NUM_OF_TASKS, totalTasks));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Shows the information of deleted task to user."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param tasks deleted tasks"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param totalTasks current total task in integer"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public void showDeleteTask(TaskList tasks, int totalTasks) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        showToUser(DELETE_TASK, getAllTaskForView(tasks), String.format(NUM_OF_TASKS, totalTasks));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Shows the information of done task to user."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param task done task"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public void showDone(Task task) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        showToUser(DONE_TASK, task.toString());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Shows exit message to user."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public void showExit() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        showToUser(EXIT_TASK);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Shows all current tasks to user."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param tasks list of all tasks"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public void showAllTask(TaskList tasks) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        showToUser(getAllTaskForView(tasks));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Shows all find tasks to user."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param tasks list of find tasks"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    public void showFindTask(TaskList tasks) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        showToUser(FIND_TASK, getAllTaskForView(tasks));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * Format list of task to the format which can used by the showToUser."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @param tasks list of all tasks"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     * @return string represent list of tasks"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private String getAllTaskForView(TaskList tasks) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        StringBuilder formatted \u003d new StringBuilder();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        int displayIndex \u003d 1;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        for (Task task : tasks.getList()) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            formatted.append(displayIndex).append(task.toString()).append(\"\\n\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            displayIndex++;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        if (formatted.length() !\u003d 0) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            formatted.setLength(formatted.length() - 1);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        return formatted.toString();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheexiong": 112
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" styleClass\u003d\"dialog\" stylesheets\u003d\"@../style/DialogBox.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" textFill\u003d\"#BB86FC\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "         \u003c/font\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/ImageView\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "sheexiong": 23
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"600.0\" maxWidth\u003d\"400.0\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../style/MainWindow.css\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" stylesheets\u003d\"@../style/MainWindow.css\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "         \u003c/font\u003e\u003c/TextField\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" stylesheets\u003d\"@../style/MainWindow.css\" text\u003d\"Send\" textAlignment\u003d\"CENTER\" textFill\u003d\"#BB86FC\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            \u003cFont name\u003d\"System Bold\" size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "         \u003c/font\u003e\u003c/Button\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../style/MainWindow.css\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "sheexiong": 26
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private static final DateTimeFormatter IN_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    void getDateTime() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        assertEquals(\"20/02/2020 1900\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                new Deadline(\"testing\", LocalDateTime.parse(\"20/02/2020 1900\", IN_FORMATTER)).getDateTime());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        assertEquals(\"[D] [n] testing (by: 20 Feb 2020 07:00 PM)\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                new Deadline(\"testing\", LocalDateTime.parse(\"20/02/2020 1900\", IN_FORMATTER)).toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    void saveString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        assertEquals(\"D | 0 | testing | 20/02/2020 1900\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                new Deadline(\"testing\", LocalDateTime.parse(\"20/02/2020 1900\", IN_FORMATTER)).saveString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheexiong": 30
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    private static final DateTimeFormatter IN_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    void getDateTime() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        assertEquals(\"20/02/2020 1900\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                new Event(\"testing\", LocalDateTime.parse(\"20/02/2020 1900\", IN_FORMATTER)).getDateTime());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        assertEquals(\"[E] [n] testing (at: 20 Feb 2020 07:00 PM)\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                new Event(\"testing\", LocalDateTime.parse(\"20/02/2020 1900\", IN_FORMATTER)).toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    void saveString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        assertEquals(\"E | 0 | testing | 20/02/2020 1900\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                new Event(\"testing\", LocalDateTime.parse(\"20/02/2020 1900\", IN_FORMATTER)).saveString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheexiong": 30
    }
  },
  {
    "path": "src/test/java/duke/task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        assertEquals(\"[T] [n] testing\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                new Todo(\"testing\").toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    void saveString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "        assertEquals(\"T | 0 | testing\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "                new Todo(\"testing\").saveString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sheexiong": 20
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheexiong"
        },
        "content": " ____        _"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "|  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "What can I do for you? :)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "[T][?] borrow book"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Now you have 1 duke.task in the list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "1. [T][?] borrow book"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "[D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Now you have 2 duke.task in the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "[E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Now you have 3 duke.task in the list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "[D][?] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Now you have 4 duke.task in the list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "1. [T][?] borrow book"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "2. [D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "3. [E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "4. [D][?] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "  [T][?] borrow book"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "________________________________________________"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "  [D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "1. [T][?] borrow book"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "2. [D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "3. [E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "4. [D][?] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "________________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "________________________________________________"
      }
    ],
    "authorContributionMap": {
      "sheexiong": 55
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "sheexiong": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sheexiong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sheexiong"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "sheexiong": 21
    }
  }
]
