[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    archiveVersion \u003d \"0.1\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "test {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    mainClassName \u003d \"duke.main.Duke\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 21,
      "-": 17
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 1
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.main.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.FileStorage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": " * Add command implementing command interface"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "public class AddCommand implements Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * execute the command by attempting to add task to list and set ui response to"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * the appropriate one"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void execute(String task, Ui ui, Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        String[] token \u003d task.split(\" \", 2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        if (token.length \u003c 2) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            ui.setResponse(\"Adding task failed, task body cannot be empty\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            if (taskList.addToList(token[1], token[0])) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                    storage.storeData(Parser.tasksToStorage(taskList.getList()));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                    System.out.println(\"Error in storing data\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                ui.setResponse(\"I\u0027ve added this task to the list:\\n \" + taskList.getList().get(taskList.size() - 1) + \"\\n\" +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                        \"Now you have \" + taskList.size() + \" task(s) in the list\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                ui.setResponse(\"Adding task failed, either task body is empty or required time is not specified\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 51
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.main.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": " * Command interface to handle each user command"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    void execute(String task, Ui ui, Storage storage, TaskList taskList);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 14
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.main.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": " * Delete command implementing command interface"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "public class DeleteCommand implements Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * attempt to delete task from task list and set ui response to the"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * appropriate one"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void execute(String task, Ui ui, Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        String[] token \u003d task.split(\" \", 2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        if (token.length \u003c 2) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            ui.setResponse(\"Please specify which task to delete\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        String[] indices \u003d token[1].split(\" \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        if (!Utils.isNumeric(indices[0])) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            ui.setResponse(\"Please specify which task to delete\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        List\u003cInteger\u003e toBeDeleted \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        for (int i \u003d 0; i \u003c indices.length; i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            if (Utils.isNumeric(indices[i]) !\u003d true) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                toBeDeleted.add(Integer.parseInt(indices[i]) - 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        Collections.sort(toBeDeleted);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        if (toBeDeleted.size() \u003c 1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            ui.setResponse(\"Please specify which task to delete\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        if (toBeDeleted.get(0) \u003e\u003d taskList.size() || toBeDeleted.get(toBeDeleted.size() - 1) \u003c 0) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            ui.setResponse(\"No such task number\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        for (int i \u003d toBeDeleted.size() - 1; toBeDeleted.size() \u003e 0 \u0026\u0026 i \u003e\u003d 0; i--) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            int taskId \u003d toBeDeleted.get(i);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            if (taskId \u003e\u003d taskList.size() || taskId \u003c 0) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            if (response.equals(\"\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                response \u003d taskList.getList().get(taskId) + response;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                response \u003d taskList.getList().get(taskId) + \"\\n \" + response;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            taskList.removeTask(taskId);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            storage.storeData(Parser.tasksToStorage(taskList.getList()));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            System.out.println(\"Error in storing data\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        response \u003d \"Nice! Deleted tasks(unknown task number ignored):\\n \" + response;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        ui.setResponse(response);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 81
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.main.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": " * Done command implementing command interface"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "public class DoneCommand implements Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * Attempt to mark specified tasks as done and set ui response to"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * the appropriate one"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void execute(String task, Ui ui, Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        String[] token \u003d task.split(\" \", 2);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        if (token.length \u003c 2) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            ui.setResponse(\"Please specify which task to mark as done\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        String[] indices \u003d token[1].split(\" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        if (indices.length \u003c 1 || Utils.isNumeric(indices[0]) !\u003d true) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            ui.setResponse(\"Please specify which task to mark as done\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        int taskId \u003d Integer.parseInt(indices[0]) - 1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        if (taskId \u003e\u003d taskList.size() || taskId \u003c 0) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            ui.setResponse(\"No such task number\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        taskList.markTaskAsDone(taskId);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        String response \u003d \"Nice! Task(s) marked as done(unknown task number ignored):\\n \" + taskList.getList().get(taskId);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        for (int i \u003d 1; i \u003c indices.length; i++) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            if (Utils.isNumeric(indices[i]) !\u003d true) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                taskId \u003d Integer.parseInt(indices[i]) - 1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                if (taskId \u003e\u003d taskList.size() || taskId \u003c 0) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                taskList.markTaskAsDone(taskId);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                response \u003d response + \"\\n \" + taskList.getList().get(taskId);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            storage.storeData(Parser.tasksToStorage(taskList.getList()));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            System.out.println(\"Error in storing data\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        ui.setResponse(response);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 62
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.main.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": " * Exit command implementing command interface"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "public class ExitCommand implements Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * Exit duke and set appropriate ui response"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void execute(String task, Ui ui, Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        ui.setResponse(\"bye ciao adios\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        ui.exitDuke();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 25
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.main.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": " * Find Command which implements Command interface"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "public class FindCommand implements Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * Attempt to find task list based on key word and set ui response"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * to display tasks found"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void execute(String task, Ui ui, Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        String[] token \u003d task.split(\" \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        if (token.length \u003c 2) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            ui.setResponse(\"Please specify a keyword to search for\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        if (token.length \u003e 2) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            ui.setResponse(\"Only 1 keyword is allowed\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        List\u003cTask\u003e searchedTask \u003d taskList.findTasksByKeyword(token[1]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        if (searchedTask.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            response \u003d \"No task with that keyword found\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            response \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            for (int i \u003d 0; i \u003c searchedTask.size(); i++) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                response \u003d response + \"\\n \" + (i + 1) + \". \" + searchedTask.get(i).toString();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        ui.setResponse(response);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 53
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.main.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": " * List command implementing command interface"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "public class ListCommand implements Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * set ui response to list of task to be displayed"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void execute(String task, Ui ui, Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        ui.setResponse(taskList.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 24
    }
  },
  {
    "path": "src/main/java/duke/command/UnknownCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.main.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": " * Unknown command implementing command interface"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "public class UnknownCommand implements Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * set ui response to inform user that command is not recognized"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void execute(String task, Ui ui, Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        ui.setResponse(\"I don\u0027t understand what you want\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 24
    }
  },
  {
    "path": "src/main/java/duke/main/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    private DukeWorker worker;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public Duke(String storagePath) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        worker \u003d new DukeWorker(storagePath);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        worker.initializeWorker();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        ui.welcomeMessage();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        String request \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        while (!ui.isExit()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            request \u003d ui.requestInput().trim().toLowerCase();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            worker.handleRequest(request, ui);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            ui.displayResponse();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        new Duke(Constants.DUKE_FILE_PATH).run();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 26,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/main/DukeWorker.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.CommandParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.FileStorage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "public class DukeWorker {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    private FileStorage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public FileStorage getStorage() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        return storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public TaskList getTaskList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public DukeWorker(String storagePath) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        storage \u003d new FileStorage(storagePath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void initializeWorker() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            boolean fileExist \u003d storage.checkFileExistence();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            if (!fileExist) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                storage.createStorage();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                String data \u003d storage.loadStorage();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                List\u003cTask\u003e tasks \u003d Parser.storageToTask(data);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                taskList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void handleRequest(String request, Ui ui) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        Command command \u003d CommandParser.commandParser(request);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        command.execute(request, ui, storage, taskList);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 53
    }
  },
  {
    "path": "src/main/java/duke/main/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    private String response;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void setResponse(String response) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        this.response \u003d response;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void exitDuke() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void welcomeMessage() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        System.out.println(Constants.ANSI_RED + \"Hello! I\u0027m Duke\\n\" + \"What\u0027s up?\" + Constants.ANSI_RESET);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public String requestInput() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        String request \u003d sc.nextLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        return request;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public String getResponse() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void displayResponse() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        System.out.println(Constants.ANSI_RED + this.response + Constants.ANSI_RESET);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 45
    }
  },
  {
    "path": "src/main/java/duke/task/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": " * Deadline object extending from ExecutableTask"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "public class Deadlines extends ExecutableTask {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    private boolean done \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    private Date time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * Deadline object constructor"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param name task name"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param time task time"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public Deadlines(String name, Date time) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * check if deadline is done"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @return done or not"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        return done;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * get name of deadline"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @return task name"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * get type of task"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @return the string D to represent deadline"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * get task time"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @return task time"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public Date getTaskTime() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * mark deadline as done"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        return \"[\" + getTaskType() + \"]\" + getDoneString() + \" \" + getTaskName() + \" (by: \" +"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                Parser.dateToString(getTaskTime()) + \")\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 74
    }
  },
  {
    "path": "src/main/java/duke/task/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": " * Event object extending from ExecutableTask"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "public class Events extends ExecutableTask {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    private boolean done \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    private Date time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * Event object constructor"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param name task name"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param time task time"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public Events(String name, Date time) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * check if event is done"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @return done or not"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        return done;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * get name of event"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @return task name"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * get type of task"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @return the string E to represent event"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * get task time"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @return task time"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public Date getTaskTime() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * mark event as done"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        return \"[\" + getTaskType() + \"]\" + getDoneString() + \" \" + getTaskName() + \" (at: \" +"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                Parser.dateToString(getTaskTime()) + \")\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 74
    }
  },
  {
    "path": "src/main/java/duke/task/ExecutableTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "public abstract  class ExecutableTask implements Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public String getDoneString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        if (isDone()) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            return \"[✓]\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            return \"[✗]\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 13
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": " * Interface for Task object"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "public interface Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * check if task is done"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @return task done or not"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public boolean isDone();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * get task name"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @return task name"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public String getTaskName();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * get task type"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @return task type"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public String getTaskType();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * get task time"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @return task time"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public Date getTaskTime();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * mark task as done"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void markAsDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 38
    }
  },
  {
    "path": "src/main/java/duke/task/Todos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": " * Todos object extending from ExecutableTask"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "public class Todos extends ExecutableTask {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    private boolean done \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * Constructor for Todos object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param name name of task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public Todos(String name) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * check if todos is done"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @return done or not"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        return done;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * get name of todos"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @return task name"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * get type of task"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @return the string T to represent todos"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * get task time"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @return null as todos do not have time"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public Date getTaskTime() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * mark todos as done"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        return \"[\" + getTaskType() + \"]\" + getDoneString() + \" \" + getTaskName();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 70
    }
  },
  {
    "path": "src/main/java/duke/utils/CommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "package duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": " * Parser to parse commands made by user"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "public class CommandParser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public static Command commandParser(String request) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        String[] token \u003d request.split(\" \", 2);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        if (token[0].equals(\"bye\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        } else if (token[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        } else if (token[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            return new DoneCommand();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        } else if (token[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            return new DeleteCommand();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        } else if (token[0].equals(\"todo\") || token[0].equals(\"deadline\") || token[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            return new AddCommand();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        } else if (token[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            return new FindCommand();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            return new UnknownCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 28
    }
  },
  {
    "path": "src/main/java/duke/utils/Constants.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "package duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "public class Constants {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public static final String ANSI_RED \u003d \"\\u001B[31m\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public static final String ANSI_GREEN \u003d \"\\u001B[32m\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public static final String ANSI_RESET \u003d \"\\u001B[0m\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public static final String DUKE_FILE_PATH \u003d \"..\\\\duke\\\\data\\\\duke.txt\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public static final String DATE_FORMAT_1 \u003d \"yyyy-MM-dd\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public static final String DATE_FORMAT_2 \u003d \"MMM d yyyy\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 12
    }
  },
  {
    "path": "src/main/java/duke/utils/FileStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "package duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": " * File storage object to handle storage in a local file"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": " * Implements storage interface"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "public class FileStorage implements Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    private String fileName;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * File storage constructor"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param fileName"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public FileStorage(String fileName) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        this.fileName \u003d fileName;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * Create storage if it doesn\u0027t exist"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void createStorage() throws IOException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        //relative path"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        String relativePath \u003d fileName;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        File file \u003d new File(relativePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        if (file.createNewFile()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            System.out.println(relativePath + \" Save File Created\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        } else System.out.println(\"File \" + relativePath + \" already exists\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * Check if file that is to be created already exists"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public boolean checkFileExistence() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        //relative path"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        File file \u003d new File(fileName);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        if (file.exists() \u0026\u0026 file.isFile()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * Load data from storage file"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @return data in the form of a string"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public String loadStorage() throws IOException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        File file \u003d new File(fileName);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        FileInputStream fis \u003d new FileInputStream(file);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        int content;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        while ((content \u003d fis.read()) !\u003d -1) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            result \u003d result + ((char) content);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * Store data to storage file"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param data in the form of a string"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void storeData(String data) throws IOException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        FileOutputStream fos \u003d new FileOutputStream(fileName);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        fos.write(data.getBytes());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        fos.flush();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        fos.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 78
    }
  },
  {
    "path": "src/main/java/duke/utils/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "package duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.task.Deadlines;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.task.Events;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.task.Todos;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": " * Parser to parse various stuff"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * Parse string into date object"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param text"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @return date object from string"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @throws ParseException"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public static Date stringToDate(String text) throws ParseException{"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        Date date;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(Constants.DATE_FORMAT_1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        date \u003d formatter.parse(text);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * Check date format to see if it is in the form of yyyy-MM-dd"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param text"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @return boolean"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public static boolean checkDateFormat(String text) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        String[] tokens \u003d text.split(\"-\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        if (tokens[0].length() !\u003d 4) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        if (tokens[1].length() !\u003d 2 || tokens[1].compareTo(\"00\") \u003c\u003d 0 || tokens[1].compareTo(\"12\") \u003e 0) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        if (tokens[2].length() !\u003d 2 || tokens[2].compareTo(\"00\") \u003c\u003d 0 || tokens[2].compareTo(\"31\") \u003e 0) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * Convert date object to string in the format MMM dd yyyy"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param date"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @return string"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public static String dateToString(Date date) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(Constants.DATE_FORMAT_2);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        String text \u003d formatter.format(date);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * convert list of task to string to be stored"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @return string to be stored"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public static String tasksToStorage(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        String data \u003d \"\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(Constants.DATE_FORMAT_1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            String doneString \u003d task.isDone()? \"1\" : \"0\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            data \u003d data + task.getTaskType() + \"\u0026\" + doneString + \"\u0026\" + task.getTaskName();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            if (task.getTaskType() \u003d\u003d \"E\" || task.getTaskType() \u003d\u003d \"D\") {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                data \u003d data + \"\u0026\" + formatter.format(task.getTaskTime());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            if (i \u003c tasks.size() - 1) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                data \u003d data + \"\\n\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        return data;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * Convert string data loaded to list of tasks"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param data"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @return list of tasks"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @throws ParseException"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public static List\u003cTask\u003e storageToTask(String data) throws ParseException{"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        List\u003cTask\u003e tasks\u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        String[] lines \u003d data.split(\"\\n\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        for (int i \u003d 0; i \u003c lines.length; i++) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            String line \u003d lines[i];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            String[] tokens \u003d line.split(\"\u0026\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            Task task \u003d null;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            if (tokens[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                task \u003d new Todos(tokens[2]);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                if (tokens[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            } else if (tokens[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                task \u003d new Events(tokens[2], stringToDate(tokens[3]));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            } else if (tokens[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                task \u003d new Deadlines(tokens[2], stringToDate(tokens[3]));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            if (task !\u003d null \u0026\u0026 tokens[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            if (task !\u003d null) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 116
    }
  },
  {
    "path": "src/main/java/duke/utils/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "package duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": " * Interface for storage object"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "public interface Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    void createStorage() throws IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    boolean checkFileExistence();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    String loadStorage() throws IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    void storeData(String data) throws IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 17
    }
  },
  {
    "path": "src/main/java/duke/utils/StorageStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "package duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": " * Stub for file storage"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "public class StorageStub implements Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void createStorage() throws IOException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public boolean checkFileExistence() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public String loadStorage() throws IOException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void storeData(String data) throws IOException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 30
    }
  },
  {
    "path": "src/main/java/duke/utils/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "package duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.task.Deadlines;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.task.Events;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.task.Todos;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": " * Task List class to represent a list of task and handle"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": " * task list operations"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    private List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * Task List constructor"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param tasks list of tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * Task list constructor with empty list"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public TaskList() { }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * Get size of task list"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @return size of task list"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * Mark task at certain index as done"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param taskId to be marked as done"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void markTaskAsDone(int taskId) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        tasks.get(taskId).markAsDone();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * remove task at certain index"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param taskId to be removed"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void removeTask(int taskId) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        tasks.remove(taskId);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * Find tasks from task list with a given keyword"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param word"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @return list of tasks with given keyword"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public List\u003cTask\u003e findTasksByKeyword(String word) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        List\u003cTask\u003e searchedTask \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            String[] tokens \u003d tasks.get(i).getTaskName().split(\" \");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            if(Arrays.asList(tokens).contains(word)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                searchedTask.add(tasks.get(i));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        return searchedTask;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * Add item to task list"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param item name"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param type of item"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @return whether addition is successful or not"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @throws ParseException"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public boolean addToList(String item, String type) throws ParseException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        String[] tokens;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        String time;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                newTask \u003d new Todos(item);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                tokens \u003d item.split(\"/\", 2);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                if (tokens.length \u003c 2) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                if (!tokens[1].substring(0, 2).equals(\"by\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                time \u003d tokens[1].substring(2).trim();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                if (!Parser.checkDateFormat(time)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                newTask \u003d new Deadlines(tokens[0].trim(), Parser.stringToDate(time));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                tokens \u003d item.split(\"/\", 2);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                if (tokens.length \u003c 2) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                if (!tokens[1].substring(0, 2).equals(\"at\")) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                time \u003d tokens[1].substring(2).trim();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                if (!Parser.checkDateFormat(time)) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                newTask \u003d new Events(tokens[0].trim(), Parser.stringToDate(time));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                newTask \u003d null;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            return \"No scheduled task yet\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        String list \u003d \"1.\" + tasks.get(0);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        for (int i \u003d 2; i \u003c tasks.size() + 1; i++) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            list \u003d list + \"\\n\" + i + \".\" + tasks.get(i - 1);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 141
    }
  },
  {
    "path": "src/main/java/duke/utils/Utils.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "package duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "public class Utils {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * static method to check if string is numerical"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @param strNum"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public static boolean isNumeric(String strNum) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        if (strNum \u003d\u003d null) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            Integer.parseInt(strNum);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 22
    }
  },
  {
    "path": "src/test/java/duke/command/AddCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.main.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.StorageStub;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "public class AddCommandTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    Storage storage \u003d new StorageStub();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void executeTest() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        Command command \u003d new AddCommand();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        command.execute(\"todo go to school\" , ui, storage, taskList);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        assertEquals(\"I\u0027ve added this task to the list:\\n \" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                taskList.getList().get(taskList.size() - 1) + \"\\n\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "                \"Now you have \" + taskList.size() + \" task(s) in the list\", ui.getResponse());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 26
    }
  },
  {
    "path": "src/test/java/duke/command/DeleteCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.main.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.StorageStub;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "public class DeleteCommandTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    Storage storage \u003d new StorageStub();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void executeTest() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        Command command \u003d new DeleteCommand();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        command.execute(\"delete 1\" , ui, storage, taskList);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        assertEquals(\"No such task number\", ui.getResponse());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 23
    }
  },
  {
    "path": "src/test/java/duke/command/DoneCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.main.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.StorageStub;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "public class DoneCommandTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    Storage storage \u003d new StorageStub();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void executeTest() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        Command command \u003d new DoneCommand();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        command.execute(\"done 1\" , ui, storage, taskList);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        assertEquals(\"No such task number\", ui.getResponse());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 24
    }
  },
  {
    "path": "src/test/java/duke/command/ListCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.main.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.StorageStub;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "public class ListCommandTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    Storage storage \u003d new StorageStub();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void executeEmptyListTest() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        Command command \u003d new ListCommand();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        command.execute(\"list\" , ui, storage, taskList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        assertEquals(taskList.toString(), ui.getResponse());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void executeListTest() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        Command command \u003d new ListCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            taskList.addToList(\"go to school\", \"todo\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            taskList.addToList(\"go to hell\", \"todo\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            command.execute(\"list\" , ui, storage, taskList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            assertEquals(taskList.toString(), ui.getResponse());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 39
    }
  },
  {
    "path": "src/test/java/duke/command/UnknownCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.main.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.StorageStub;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.utils.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "public class UnknownCommandTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    Storage storage \u003d new StorageStub();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void executeTest() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        Command command \u003d new UnknownCommand();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        command.execute(\"goalasdf\" , ui, storage, taskList);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        assertEquals(\"I don\u0027t understand what you want\", ui.getResponse());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 23
    }
  },
  {
    "path": "src/test/java/duke/main/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void exitDukeTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        assertEquals(ui.isExit(), false);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        ui.exitDuke();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        assertEquals(ui.isExit(), true);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void getResponseTest() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        ui.setResponse(\"hello\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        assertEquals(ui.getResponse(), \"hello\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 22
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlinesTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "public class DeadlinesTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    Task task \u003d new Deadlines(\"go to school\", new Date(2019, 2, 4));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void markDoneTest() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        assertFalse(task.isDone());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        assertTrue(task.isDone());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void getTaskNameTest() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        assertEquals(task.getTaskName(), \"go to school\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void getTaskTimeTest() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        assertEquals(task.getTaskTime(), new Date(2019, 2, 4));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 30
    }
  },
  {
    "path": "src/test/java/duke/task/EventsTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "public class EventsTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    Task task \u003d new Events(\"go to school\", new Date(2019, 2, 4));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void markDoneTest() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        assertFalse(task.isDone());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        assertTrue(task.isDone());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void getTaskNameTest() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        assertEquals(task.getTaskName(), \"go to school\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void getTaskTimeTest() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        assertEquals(task.getTaskTime(), new Date(2019, 2, 4));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 31
    }
  },
  {
    "path": "src/test/java/duke/task/TodosTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "public class TodosTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    Task task \u003d new Todos(\"go to school\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void markDoneTest() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        assertFalse(task.isDone());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        assertTrue(task.isDone());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void getTaskNameTest() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        assertEquals(task.getTaskName(), \"go to school\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 22
    }
  },
  {
    "path": "src/test/java/duke/utils/CommandParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "package duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "public class CommandParserTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void exitCommandTest() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        Command command \u003d CommandParser.commandParser(\"bye bye\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        assertTrue(command instanceof ExitCommand);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void singleDoneCommandTest() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        Command command \u003d CommandParser.commandParser(\"done 1\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        assertTrue(command instanceof DoneCommand);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void multipleDoneCommandTest() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        Command command \u003d CommandParser.commandParser(\"done 1 5 6\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        assertTrue(command instanceof DoneCommand);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void invalidDoneCommandTest() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        Command command \u003d CommandParser.commandParser(\"done asdfa\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        assertTrue(command instanceof DoneCommand);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void singleDeleteCommandTest() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        Command command \u003d CommandParser.commandParser(\"delete 1\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        assertTrue(command instanceof DeleteCommand);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void multipleDeleteCommandTest() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        Command command \u003d CommandParser.commandParser(\"delete 1 5 6\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        assertTrue(command instanceof DeleteCommand);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void invalidDeleteCommandTest() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        Command command \u003d CommandParser.commandParser(\"delete asdfa\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        assertTrue(command instanceof DeleteCommand);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void listCommandTest() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        Command command \u003d CommandParser.commandParser(\"list asdfsadf\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        assertTrue(command instanceof ListCommand);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void todoAddCommandTest() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        Command command \u003d CommandParser.commandParser(\"todo asdfsadf\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        assertTrue(command instanceof AddCommand);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void eventAddCommandTest() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        Command command \u003d CommandParser.commandParser(\"event asdfsadf\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        assertTrue(command instanceof AddCommand);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void deadlineAddCommandTest() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        Command command \u003d CommandParser.commandParser(\"deadline asdfsadf\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        assertTrue(command instanceof AddCommand);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 76
    }
  },
  {
    "path": "src/test/java/duke/utils/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "package duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void validStringToDateTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            Date date \u003d Parser.stringToDate(\"2019-02-12\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            assertEquals(date.toString(), \"Tue Feb 12 00:00:00 GMT+08:00 2019\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void checkValidDateFormat() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        boolean correct \u003d Parser.checkDateFormat(\"2019-02-04\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        assertTrue(correct);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void checkInvalidDateFormat() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        boolean correct \u003d Parser.checkDateFormat(\"2019-22-04\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        assertFalse(correct);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 33
    }
  },
  {
    "path": "src/test/java/duke/utils/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "package duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void emptyTaskString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        assertEquals(\"No scheduled task yet\", taskList.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void addToListTest() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            taskList.addToList(\"go to school\", \"todo\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            assertTrue(taskList.size() \u003d\u003d 1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void removeTaskTest() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            taskList.addToList(\"go to school\", \"todo\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            assertTrue(taskList.size() \u003d\u003d 1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            taskList.removeTask(0);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            assertTrue(taskList.size() \u003d\u003d 0);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 40
    }
  },
  {
    "path": "src/test/java/duke/utils/UtilsTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "package duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "public class UtilsTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void isValidNumericTest() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        boolean correct \u003d Utils.isNumeric(\"124112\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        assertTrue(correct);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    public void isInvalidNumericTest() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        boolean correct \u003d Utils.isNumeric(\"123fdsfa\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "        assertFalse(correct);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 21
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HubertHalim"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "HubertHalim": 34
    }
  }
]
