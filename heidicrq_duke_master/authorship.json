[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    id \u0027org.jetbrains.kotlin.jvm\u0027 version \u00271.3.61\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "test {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk8\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "compileKotlin {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    kotlinOptions {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        jvmTarget \u003d \"1.8\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "compileTestKotlin {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    kotlinOptions {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        jvmTarget \u003d \"1.8\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "heidicrq": 47
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "T|0|sfsadf"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "D|0|fsdfsd|2020-12-12"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "T|0|sdfsf"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "D|0|asda|2020-12-12"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "T|0|read book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "D|0|return book|2030-01-05"
      }
    ],
    "authorContributionMap": {
      "heidicrq": 6
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heidicrq"
        },
        "content": " * The Deadline class is a type of task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heidicrq"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    LocalDate date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * The constructor for the Deadline class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @param description The description of the deadline."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @param date The date for the deadline."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public Deadline(String description, LocalDate date) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        totalTasks++;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * Gets the type of the task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @return The type of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        return \"[D]\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * Prints the summary of the task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public void taskSummary() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        System.out.println(getType() + getStatusIcon() + \" \" + description"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                + \"(by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * Generates a string when saving to the hard disk."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @return The string to be written to duke.txt."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public String saveString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        return \"D|\" + (isDone? \"1|\" : \"0|\") + description + \"|\" + date;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "heidicrq": 45
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "heidicrq"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "heidicrq"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "heidicrq"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "heidicrq"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "heidicrq": 60
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "heidicrq"
        },
        "content": " * The Duke class contains the main method."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "heidicrq"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        return \"Duke heard: \" + input;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * The constructor for the Duke class."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * The main method for Duke."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @param args For the main method."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @throws DukeException Throws DukeException."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @throws IOException Throws IOException."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public static void main(String[] args) throws DukeException, IOException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * To run the duke program."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @throws DukeException Throws DukeException."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @throws IOException Throws IOException."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public void run() throws DukeException, IOException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        storage.loadData();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        ui.welcomeMessage();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        ui.reply(\"    What can I do for you\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        while (!(command \u003d sc.nextLine()).equals(\"bye\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                handle(command);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            catch (DukeException ex) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                ui.showError(ex.getMessage());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        storage.saveData();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        ui.reply(\"    Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * Handles the command provided by the user."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @param command The user command."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @throws DukeException Throws DukeException."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public void handle(String command) throws DukeException{"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            ui.printList();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            String type \u003d parser.getType(command);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            if (type.equals(\"done\") || type.equals(\"delete\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                int taskNo \u003d parser.getTaskIndex(command);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                if (taskNo \u003e tasks.numOfTasks() || taskNo \u003c\u003d 0) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!! Not a valid number\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                    if (type.equals(\"done\")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                        tasks.getTask(taskNo - 1).markAsDone();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                        ui.doneMessage(tasks.getTask(taskNo - 1));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                        ui.deleteMessage(tasks.getTask(taskNo - 1));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                        tasks.removeTask(taskNo - 1);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                        Task.totalTasks--;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            } else if (type.equals(\"find\")) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                ArrayList\u003cInteger\u003e taskFound \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                for (int i \u003d 0; i \u003c tasks.numOfTasks(); i++) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                    if (tasks.getTask(i).description.contains(command.split(\" \")[1])) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                        taskFound.add(i);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                ui.printSelected(taskFound);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                // create new task -\u003e add to tasks -\u003e reply"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                Task task \u003d tasks.createAndAddTask(type, command);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                ui.addMessage(task);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "heidicrq": 123
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heidicrq"
        },
        "content": " * Exception class for Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heidicrq"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public DukeException(String exception) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        super(exception);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "heidicrq": 8
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heidicrq"
        },
        "content": " * The Event class is a type of task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heidicrq"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    LocalDate date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * The constructor for the Event class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @param description The description of the event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @param date The date for the event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public Event(String description, LocalDate date) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        totalTasks++;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * Gets the type of the task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @return The type of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        return \"[E]\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * Prints the summary of the task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public void taskSummary() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        System.out.println(getType() + getStatusIcon() + \" \" + description + \"(at: \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * Generates a string when saving to the hard disk."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @return The string to be written to duke.txt."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public String saveString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        return \"E|\" + (isDone? \"1|\" : \"0|\") + description + \"|\" + date;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "heidicrq": 45
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heidicrq"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heidicrq"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "heidicrq": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "heidicrq"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "heidicrq"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "heidicrq": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "heidicrq"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "heidicrq"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        );"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "heidicrq": 49
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heidicrq"
        },
        "content": " * Deals with making sense of the user command"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heidicrq"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * Gets the type of the task from the command provided."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @param wholeCommand The user command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @return The type of the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public String getType(String wholeCommand) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        return wholeCommand.split(\" \")[0];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * Gets the task index number from the command provided."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @param wholeCommand The user command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @return The task number."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public int getTaskIndex(String wholeCommand) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        return Integer.parseInt(wholeCommand.split(\" \")[1]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * Counts the number of parts in the command provided."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @param wholeCommand The user command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @return The number of parts."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public int numOfParts(String wholeCommand) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        return wholeCommand.split(\" \").length;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * Gets the description of the task from the command provided."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @param wholeCommand The user command."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @return The description of the task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public String getDesc(String wholeCommand) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        String type \u003d getType(wholeCommand);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            return wholeCommand.substring(5);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        } else if (type.equals(\"event\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            return wholeCommand.substring(6).split(\" /at \")[0];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            return wholeCommand.substring(9).split(\" /by \")[0];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * Gets the date of the task from the command provided."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @param wholeCommand The user command."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @return The date."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public LocalDate getDate(String wholeCommand) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        String type \u003d getType(wholeCommand);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        if (type.equals(\"event\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            return LocalDate.parse(wholeCommand.substring(6).split(\" /at \")[1]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            return LocalDate.parse(wholeCommand.substring(6).split(\" /by \")[1]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "heidicrq": 64
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heidicrq"
        },
        "content": " * The Storage class deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "heidicrq"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    private static File file;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * Constructor for Storage class."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        file \u003d new File(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * Loads tasks stored in duke.txt in the hard disk. Creates and add the tasks into the ArrayList of tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @throws IOException Throws IOException."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @throws DukeException Throws DukeException."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public void loadData() throws IOException, DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        // load data from ./data/duke.txt"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        file.createNewFile();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        String str;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        while ((str \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            String[] data \u003d str.split(\"\\\\|\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            if (data[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                task \u003d taskList.createAndAddTask(\"todo\", \"todo \" + data[2]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            } else if (data[0].equals(\"E\")){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                task \u003d taskList.createAndAddTask(\"event\", \"event \" + data[2] + \" /at \" + data[3]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                task \u003d taskList.createAndAddTask(\"deadline\", \"deadline \" + data[2] + \" /by \" + data[3]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            if (data[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * Saves the tasks in duke.txt in the hard disk."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @throws IOException Throws IOException."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public void saveData() throws IOException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        // save data into ./data/duke.txt"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        if (taskList.isListEmpty()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            Files.write(Paths.get(\"./data/duke.txt\"), (\"\").getBytes());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            FileOutputStream fos \u003d new FileOutputStream(file);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(new OutputStreamWriter(fos));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            for (int i \u003d 0; i \u003c Task.totalTasks; i++) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                bw.write(taskList.getTask(i).saveString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                bw.newLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            bw.close();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "heidicrq": 66
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    protected static int totalTasks \u003d 0;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public abstract String getType();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public abstract void taskSummary();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public abstract String saveString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        return (isDone? \"[✓]\" : \"[✗]\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "heidicrq": 21
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heidicrq"
        },
        "content": " * Contains the task list e.g., it has operations to add/delete tasks in the list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heidicrq"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * Creates the task and adds it to the ArrayList of tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @param type The type of task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @param whole The command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @return The newly created task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @throws DukeException The command provided does not fit the required format."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public Task createAndAddTask(String type, String whole) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        if (parser.numOfParts(whole) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            if (whole.equals(\"todo\") || whole.equals(\"event\") || whole.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a \" + type + \" cannot be empty.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            String desc \u003d whole.substring(5);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            task \u003d new ToDo(desc);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        } else if (type.equals(\"event\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            String desc \u003d parser.getDesc(whole);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            LocalDate date \u003d parser.getDate(whole);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            task \u003d new Event(desc, date);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        } else if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            String desc \u003dparser.getDesc(whole);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            LocalDate date \u003d parser.getDate(whole);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            task \u003d new Deadline(desc, date);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * Check if the ArrayList of tasks is empty."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @return A boolean which states if the list is empty."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public boolean isListEmpty() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        return tasks.isEmpty();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * Gets a task from the ArrayList based on the index."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @param index The index related to the ArrayList."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @return The task that is found."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * Checks the number of tasks in the ArrayList."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @return The number of tasks."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public int numOfTasks() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * Removes the task from the ArrayList."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @param index The index related to the ArrayList."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public void removeTask(int index) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "heidicrq": 80
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heidicrq"
        },
        "content": " * This class is a type of task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heidicrq"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * The constructor of this class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        totalTasks++;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * Gets the type of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @return The type of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        return \"[T]\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * Prints the summary of the task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public void taskSummary() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        System.out.println(getType() + getStatusIcon() + \" \" + description);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * Generates a string when saving to the hard disk."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @return The string to be written to duke.txt."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public String saveString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        return \"T|\" + (isDone? \"1|\" : \"0|\") + description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "heidicrq": 40
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heidicrq"
        },
        "content": " * The Ui class deals with interactions with the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heidicrq"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * Prints a welcome message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public void welcomeMessage() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * Prints a \u0027delete\u0027 message after a task is deleted."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @param task The task to be deleted."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public void deleteMessage(Task task) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        System.out.println(\"        Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        System.out.print(\"        \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        task.taskSummary();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        System.out.println(\"        Now you have \" + (taskList.numOfTasks() - 1) + \" \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                + (taskList.numOfTasks() \u003d\u003d 1? \"task\" : \"tasks\") + \" in the list.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * Prints an \u0027add\u0027 message after a new task is added."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @param task The new task that is added."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public void addMessage(Task task) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        System.out.println(\"        Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        System.out.print(\"            \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        task.taskSummary();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        System.out.println(\"        Now you have \" + taskList.numOfTasks() + \" \""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                + (taskList.numOfTasks() \u003d\u003d 1? \"task\" : \"tasks\") + \" in the list.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * Prints a \u0027done\u0027 message when a task is marked done."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @param task The task that is done."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public void doneMessage(Task task) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        System.out.println(\"        Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        System.out.print(\"        \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        task.taskSummary();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * Prints a message with nice frames."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @param string The message."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public void reply(String string) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        System.out.println(\"        \" + string);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * Prints the list of tasks."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public void printList() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        System.out.println(\"        Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.numOfTasks(); i++) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            System.out.print(\"        \" + count + \".\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            (taskList.getTask(i)).taskSummary();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * Prints the error message."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     * @param msg The error message."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public void showError(String msg) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public void printSelected(ArrayList\u003cInteger\u003e arr) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        if (arr.isEmpty()) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            System.out.println(\"No tasks found\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            System.out.println(\"        Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            int count \u003d 1;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            for (int i \u003d 0; i \u003c arr.size(); i++) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                System.out.print(\"        \" + count + \".\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                (taskList.getTask(arr.get(i))).taskSummary();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "heidicrq": 110
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "heidicrq": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"340.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"339.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"61.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "heidicrq": 19
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public void typeTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        assertEquals(\"todo\", new Parser().getType(\"todo eat\"));"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        assertEquals(\"event\", new Parser().getType(\"event sleep /at 12pm\"));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        assertEquals(\"deadline\", new Parser().getType(\"deadline sleep /by 1pm\"));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "heidicrq": 12
    }
  },
  {
    "path": "src/test/java/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    public void stringTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        assertEquals(\"[T]\", new ToDo(\"eat\").getType());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "        assertEquals(\"T|0|eat\", new ToDo(\"eat\").saveString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "heidicrq": 11
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heidicrq"
        },
        "content": " ____        _"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "|  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    What can I do for you"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "heidicrq": 14
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "heidicrq": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "heidicrq"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "heidicrq"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "heidicrq": 21
    }
  }
]
