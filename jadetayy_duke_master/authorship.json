[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    archiveVersion \u003d \"0.2.1\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jadetayy": 42,
      "-": 20
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "## About"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "Peachy is your new employed personal assistant "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "who will help you through your daily tasks and schedule"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "to make sure you stay organised and productive!"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "\u003cp style\u003d\"text-align:center;\"\u003e\u003cimg src\u003d\"Ui.png\" alt\u003d\"Ui\"\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "### Feature 1 - Adding Tasks"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "There are 3 kind of Tasks you can add namely:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "1. todo"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "2. event"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "3. deadline"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "Input format:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "1. `todo description` (i.e. todo read book)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "2. `event description /at YYYY-MM-DD HHmm` (i.e. event birthday /at 2020-02-28 1800)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "3. `deadline description /by YYYY-MM-DD HHmm` (i.e. deadline project /by 2020-02-18 2359)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "\u003cp style\u003d\"text-align:center;\"\u003e\u003cimg src\u003d\"images/AddTask.png\" alt\u003d\"Add Task\"\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "### Feature 2 - Mark Task as done "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "Upon completion of a task, you can check it off you task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "Input format: `done number` (i.e. delete 1)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "\u003cp style\u003d\"text-align:center;\"\u003e\u003cimg src\u003d\"images/Done.png\" alt\u003d\"Done\"\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "### Feature 3 - Delete Task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "Removes task from your task list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "Input format: `delete number` (i.e. delete 1)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "\u003cp style\u003d\"text-align:center;\"\u003e\u003cimg src\u003d\"images/Delete.png\" alt\u003d\"Add Task\"\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "### Feature 4 - Finding Task"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "Find and list out all tasks containing keyword."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "Input format: `find keyword` (i.e. find book)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "\u003cp style\u003d\"text-align:center;\"\u003e\u003cimg src\u003d\"images/Find.png\" alt\u003d\"Find\"\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "### Feature 5 - Search for Task"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "Search and list out all tasks containing the same date."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "Input format: `search YYYY-MM-DD` (i.e. search 2020-02-21)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "\u003cp style\u003d\"text-align:center;\"\u003e\u003cimg src\u003d\"images/Search.png\" alt\u003d\"Search\"\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "### Feature 6 - List out all current tasks"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "List out all your current tasks."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "Input format: `list`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "\u003cp style\u003d\"text-align:center;\"\u003e\u003cimg src\u003d\"images/List.png\" alt\u003d\"List\"\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "### Feature 7 - Create new note"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "Create a new note with specific category (e.g. school, personal, misc)."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "Upon note creation, subsequent function call will result it addition to note."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "Input format: `note category description` (i.e. note personal visit dentist every 6 months)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "\u003cp style\u003d\"text-align:center;\"\u003e\u003cimg src\u003d\"images/Note.png\" alt\u003d\"Note\"\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "### Feature 8 - View note"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "View the contents of the note in the specific category."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "Input format: `view category note` (i.e. view personal notes)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "\u003cp style\u003d\"text-align:center;\"\u003e\u003cimg src\u003d\"images/View.png\" alt\u003d\"View Note\"\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "### Feature 9 - View all notes created"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "View all the note files created."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "Input format: `view all notes`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "\u003cp style\u003d\"text-align:center;\"\u003e\u003cimg src\u003d\"images/ViewAll.png\" alt\u003d\"View All Notes\"\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "### Feature 10 - Help"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "Welcome message will be printed, with all the commands format listed."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "Input format: `help`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "\u003cp style\u003d\"text-align:center;\"\u003e\u003cimg src\u003d\"images/Help.png\" alt\u003d\"Help\"\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "### Feature 11 - Exit Peachy"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "Quits Peachy and closes the window."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "Input format: `bye`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jadetayy": 78,
      "-": 11
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Creates Duke Dialog box."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param text This is Duke\u0027s response to user\u0027s input."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param img This is the Duke\u0027s image."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Creates user Dialog box."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param text This is the user input text."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param img This is the user image."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Creates Duke Dialog box."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param text This is Duke\u0027s response to user\u0027s input."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param img This is the Duke\u0027s image."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jadetayy": 77
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import dukeexception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import dukeexception.LoadException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import java.util.concurrent.Executors;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import java.util.concurrent.TimeUnit;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " * This programme implements an application that simulates like a chat bot."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " * Features include adding/deleting/searching Tasks, mark Tasks as done, listing Tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " * and exiting chat bot."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    Storage storage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    TaskList tasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Constructor for Duke class."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Creates a new Duke object when called."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        storage \u003d new Storage(\"./data/tasks.txt\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        } catch (LoadException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            e.getMessage();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * This method takes in user input to give necessary output."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @return response for the user input."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            if (input.equals(\"help\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                 return MainWindow.welcomeMsg();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                    Executors.newSingleThreadScheduledExecutor()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                            .schedule(() -\u003e System.exit(0), 1, TimeUnit.SECONDS);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                return c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jadetayy": 62,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jadetayy": 11
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            stage.setTitle(\"Peachy\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jadetayy": 30
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Initialize the GUI."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public void initialize() throws IOException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                DialogBox.getDukeDialog(this.welcomeMsg(), dukeImage));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        );"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Loads welcome message from text file and prints it out in GUI."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @return the Welcome message when Duke is first launched."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public static String welcomeMsg() throws IOException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        String msg \u003d \"\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        msg +\u003d \"Hello! I am Peachy, your personal work manager!\\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                + \"Here is what I can do for you:\\n\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                + \"\\n—————Task Manager—————\\n\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                + \"To create a new:\\n\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                + \"1. todo: todo description\\n\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                + \"2. event: event description /at YYYY-MM-DD HHmm\\n\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                + \"3. deadline: deadline description /by YYYY-MM-DD HHmm\\n\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                + \"\\n—————Note Manager—————\\n\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                + \"To create a new note/add to existing note: note type_of_note description\\n\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                + \"\\n—————Other Commands—————\\n\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                + \"1. list: List out all your current tasks\\n\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                + \"2. done (integer): Mark task numbered integer as done e.g. done 1\\n\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                + \"3. delete (integer): Delete task numbered integer e.g. delete 3\\n\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                + \"4. find (keyword): Find tasks with keyword e.g. find book\\n\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                + \"5. search YYYY-MM-DD: Find tasks by date e.g. search 2020-02-03\\n\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                + \"6. view all notes: View all your current note\\n\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                + \"7. view type_of_note notes: Shows the content of your type_of_note notes\\n\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                + \"8. help: this message will be shown\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jadetayy": 92
    }
  },
  {
    "path": "src/main/java/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import dukeexception.SaveException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " * Adds a Task to the TaskList."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Constructor for AddCommand."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param task task is the Task to be added into TaskList."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Execute the AddCommand. Adds task into TaskList."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param tasks This is the TaskList new Task is being added to."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param ui This is to interact with the user interface, printing message of Task being added."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param storage This allows for TaskList to be updated with new Task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @throws SaveException thrown when not able to save file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws SaveException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        tasks.addTask(this.task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        storage.saveTasks(tasks.getTasks());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        String msg \u003d \"Got it! I\u0027ve added this task!: \\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        msg +\u003d \"  \" + this.task;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        msg +\u003d \"\\nNow you have \" + tasks.getNumTasks() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        ui.printMsg(msg);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * AddCommand does not cause the programme to exit."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @return boolean false since not ExitCommand."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jadetayy": 53
    }
  },
  {
    "path": "src/main/java/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import dukeexception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " * Creates a new Command object according to user input."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Execute the respective command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param tasks This is the TaskList being loaded."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param ui This is to interact with the user to see the output."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param storage This allows for TaskList to be updated and stored in hard drive."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @throws DukeException depending on command, different child class exception is thrown."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Check for Exit Command and exit programme if returns false."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @return boolean This checks if command is Exit Command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jadetayy": 32
    }
  },
  {
    "path": "src/main/java/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import dukeexception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import dukeexception.InvalidIndexException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " * Deletes a Task from the TaskList."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Constructor for DeleteCommand."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param index the index of Task to be deleted from TaskList."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Execute the DeleteCommand. Delete Task from TaskList."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param tasks This is the TaskList Task is being deleted from."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param ui This is to interact with the user interface, printing message of Task being deleted."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param storage This allows for TaskList to be updated."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @throws DukeException thrown when index is out of bounds."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            Task t \u003d tasks.removeTask(this.index - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            storage.saveTasks(tasks.getTasks());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            String msg \u003d \"Noted. I\u0027ve removed this task:\\n\" + t + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            msg +\u003d \"Now you have \" + tasks.getNumTasks() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            ui.printMsg(msg);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            return msg;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * DeleteCommand does not cause the programme to exit."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @return boolean false since not ExitCommand."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jadetayy": 57
    }
  },
  {
    "path": "src/main/java/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import dukeexception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import dukeexception.InvalidIndexException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " * Mark a Task in the TaskList as done."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Constructor for DoneCommand."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param index the index of Task to be marked as done from TaskList."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Execute the DoneCommand. It marks Task as done."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param tasks This is the TaskList where the Task is stored."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param ui This is to interact with the user interface, printing message of Task being marked as done."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param storage This allows for TaskList to be updated with new Task status."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @throws DukeException thrown when index is out of bounds."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            Task t \u003d tasks.markTaskAsDone(this.index - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            storage.saveTasks(tasks.getTasks());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            String msg \u003d \"Wow you finally completed something: \\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            msg +\u003d t;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            ui.printMsg(msg);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            return msg;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * DoneCommand does not cause the programme to exit."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @return boolean false since not ExitCommand."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jadetayy": 57
    }
  },
  {
    "path": "src/main/java/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " * Exits chat bot and end programme."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Execute the ExitCommand. Causes chat bot to terminate."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param tasks Unused."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param ui This is to interact with the user interface, printing Exit message."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param storage Unused."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        String msg \u003d \"Bye see you again（ｉДｉ）\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        ui.printMsg(msg);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Cause programme to terminate and exit."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @return boolean true."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jadetayy": 35
    }
  },
  {
    "path": "src/main/java/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " * Adds a Task to the TaskList."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    private String str;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Constructor for FindCommand."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param str This is the String of keyword used to find Task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public FindCommand(String str) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        this.str \u003d str;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Execute the FindCommand. Find tasks with user input keyword."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param tasks This is the TaskList where the Task is stored."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param ui This is to interact with the user interface, printing Tasks with keyword."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param storage Unused."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        String msg \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        for (Task t : tasks.getTasks()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            if (t.getDescription().contains(this.str)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                msg +\u003d \"\\n\" + counter + \". \" + t;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        ui.printMsg(msg);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * AddCommand does not cause the programme to exit."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @return boolean false since not ExitCommand."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jadetayy": 54
    }
  },
  {
    "path": "src/main/java/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " * List out all Tasks in the TaskList."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Execute the ListCommand. It marks Task as done."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param tasks This is the TaskList where the Task is stored."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param ui This is to interact with the user interface, printing all Tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param storage Unused."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        String msg \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getNumTasks(); i++) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            Task curTask \u003d tasks.getTasks().get(i);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            msg +\u003d \"\\n\" + (i + 1) + \". \" + curTask;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        ui.printMsg(msg);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * List Command does not cause the programme to exit."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @return boolean false since not ExitCommand."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jadetayy": 40
    }
  },
  {
    "path": "src/main/java/commands/NewNoteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import task.Note;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "public class NewNoteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public Note note;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public NewNoteCommand(Note note) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        this.note \u003d note;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        storage.newFile(this.note.getType());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        storage.saveNote(this.note.getType(), this.note.getDescription());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        String msg \u003d \"New note added!: \\n\" + \"• \" + this.note.getDescription();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jadetayy": 30
    }
  },
  {
    "path": "src/main/java/commands/SearchCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " * Search Task by date and list Task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "public class SearchCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Constructor for SearchCommand."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param date This is the date of Tasks we are searching for."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public SearchCommand(LocalDate date) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Execute the SearchCommand. It searches for Tasks of an user input date."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param tasks This is the TaskList where the Task is stored."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param ui This is to interact with the user interface, printing message of Task having the required date."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param storage Unused."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        String msg \u003d \"Here are the tasks on \" + this.date + \":\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        for (Task t : tasks.getTasks()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                if (((Deadline) t).getDate().isEqual(date)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                    msg +\u003d \"\\n\" + t;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            } else if (t instanceof Event) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                if (((Event) t).getDate().isEqual(date)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                    msg +\u003d \"\\n\" + t;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        ui.printMsg(msg);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * SearchCommand does not cause the programme to exit."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @return boolean false since not ExitCommand."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jadetayy": 62
    }
  },
  {
    "path": "src/main/java/commands/UnknownCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " * Handles unknown commands not understood by the application."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "public class UnknownCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Execute the UnknownCommand. Handles commands not understood by Parser."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param tasks Unused."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param ui This is to interact with the user interface, printing Unknown command message."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param storage Unused."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        String msg \u003d \"I do not understand what you mean!!! :(\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        ui.printMsg(msg);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * UnknownCommand does not cause the programme to exit."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @return boolean false since not ExitCommand."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jadetayy": 35
    }
  },
  {
    "path": "src/main/java/commands/ViewNoteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "public class ViewNoteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public String noteType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public ViewNoteCommand(String noteType) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        this.noteType \u003d noteType;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        if (!noteType.equals(\"all\")) { //view school note"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            String msg \u003d \"Your \" + noteType + \" notes: \\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            File file \u003d new File(\"data/notes/\" + noteType + \".txt\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            FileReader fr \u003d new FileReader(file);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            while((line \u003d br.readLine()) !\u003d null){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                msg +\u003d line + \"\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            return msg;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        } else { //view all notes"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            String msg \u003d \"These are the notes you have: \\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            File folder \u003d new File(\"data/notes/\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            File[] listOfFiles \u003d folder.listFiles();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            for (File file : listOfFiles) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                if (file.isFile()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                    msg +\u003d file.getName() + \"\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            return msg;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jadetayy": 50
    }
  },
  {
    "path": "src/main/java/dukeexception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "package dukeexception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " * Creates a new Exception when thrown."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Empty constructor for DukeException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Constructor for DukeException."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param msg The message to be printed when Exception is thrown."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jadetayy": 22
    }
  },
  {
    "path": "src/main/java/dukeexception/InvalidDateTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "package dukeexception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "public class InvalidDateTimeException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Return message of the Thrown InvalidDateTimeException."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @return String to be printed."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return \"ERROR: Date/time format is wrong!\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                + \"\\nTRY: YYYY-MM-DD HHmm\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jadetayy": 15
    }
  },
  {
    "path": "src/main/java/dukeexception/InvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "package dukeexception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "public class InvalidIndexException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Return message of the Thrown InvalidIndexException."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @return String to be printed."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return \"ERROR: INVALID INDEX\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jadetayy": 14
    }
  },
  {
    "path": "src/main/java/dukeexception/LoadException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "package dukeexception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "public class LoadException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Return message of the Thrown LoadException."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @return String to be printed."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return \"ERROR: Not able to load file.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jadetayy": 14
    }
  },
  {
    "path": "src/main/java/dukeexception/SaveException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "package dukeexception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "public class SaveException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Return message of the Thrown SaveException."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @return String to be printed."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return \"ERROR: Unable to save file.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jadetayy": 15
    }
  },
  {
    "path": "src/main/java/dukeexception/WrongInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "package dukeexception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "public class WrongInputException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Return message of the Thrown WrongInputException."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @return String to be printed."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return \"ERROR: Something is missing! Be specific!\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jadetayy": 14
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import dukeexception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import dukeexception.InvalidDateTimeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import dukeexception.WrongInputException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import task.Note;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " * This class deals with making sense of the user command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Constructor for creating new Parser object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Takes in user command input and make sense of it to create the specific Task object and Command object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param fullCommand This is the command input of user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @return Command object specified by user input."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @throws DukeException thrown when user input date/time is in the wrong format."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        Command com \u003d null;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        String[] temp \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        String command \u003d temp[0];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        DateTimeFormatter inputDateFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        DateTimeFormatter inputTimeFormat \u003d DateTimeFormatter.ofPattern(\"HHmm\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        String[] arr;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        LocalDate ld;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        LocalTime lt;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            assert fullCommand.length() !\u003d 0 : \"Assert error: No user input!\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                Parser.checkInput(fullCommand, command, temp);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                com \u003d new DeleteCommand(Integer.parseInt(temp[1]));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                checkInput(fullCommand, command, temp);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                com \u003d new DoneCommand(Integer.parseInt(temp[1]));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            } else if (command.equals((\"todo\"))) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                checkInput(fullCommand, command, temp);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                Task t \u003d new Todo(fullCommand.substring(5));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                com \u003d new AddCommand(t);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                checkInput(fullCommand, command, temp);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                arr \u003d fullCommand.split(\" /by \");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                String[] dt \u003d arr[1].split(\" \");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                ld \u003d LocalDate.parse(dt[0], inputDateFormat);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                lt \u003d LocalTime.parse(dt[1], inputTimeFormat);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                Task d \u003d new Deadline(arr[0].substring(9), ld, lt);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                com \u003d new AddCommand(d);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                checkInput(fullCommand, command, temp);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                arr \u003d fullCommand.split(\" /at \");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                String[] dt \u003d arr[1].split(\" \");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                ld \u003d LocalDate.parse(dt[0], inputDateFormat);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                lt \u003d LocalTime.parse(dt[1], inputTimeFormat);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                Task e \u003d new Event(arr[0].substring(6), ld, lt);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                com \u003d new AddCommand(e);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            } else if (command.equals(\"search\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                checkInput(fullCommand, command, temp);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                String description \u003d fullCommand.substring(command.length() + 1);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                com \u003d new SearchCommand(LocalDate.parse(description, inputDateFormat));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            } else if (command.equals(\"find\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                checkInput(fullCommand, command, temp);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                String description \u003d fullCommand.substring(command.length() + 1);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                com \u003d new FindCommand(description);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                com \u003d new ListCommand();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            } else if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                com \u003d new ExitCommand();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            } else if (command.equals(\"note\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                Note n \u003d new Note(temp[1], fullCommand.substring(temp[0].length() + temp[1].length() + 2));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                com \u003d new NewNoteCommand(n);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            } else if (command.equals(\"view\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                com \u003d new ViewNoteCommand(temp[1]);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                com \u003d new UnknownCommand();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            throw new InvalidDateTimeException();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return com;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Takes in user command input and make sense of it to create the specific Task object and Command object."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param fullCommand This is the full command input of user."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param command This is the identifier for the full command."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param fullComArr This is the String array for the broken up full command."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @return Nothing."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @throws DukeException thrown when user input is missing information."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    private static void checkInput(String fullCommand, String command, String[] fullComArr) throws DukeException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        if (command.equals(\"done\")"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                || command.equals(\"delete\")"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                || command.equals(\"todo\")"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                || command.equals(\"search\")) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            if (fullComArr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                throw new WrongInputException();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            if (!fullCommand.contains(\"/by\")) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                throw new WrongInputException();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                String[] arr \u003d fullCommand.split(\"/by\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                if (arr[1].split(\" \").length \u003c 2) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                    throw new WrongInputException();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            if (!fullCommand.contains(\"/at\")) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                throw new WrongInputException();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                String[] arr \u003d fullCommand.split(\"/at\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                if (arr[1].split(\" \").length \u003c 2) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                    throw new WrongInputException();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jadetayy": 143
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import dukeexception.LoadException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import dukeexception.SaveException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " * This class deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    private String pathName;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Constructor for creating new Storage object and creates new ArrayList to store Tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param pathName This is the path name of where the file is being stored."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public Storage(String pathName) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        this.pathName \u003d pathName;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Load the files from txt into TaskList."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @return ArrayList\u003cTask\u003e\u003c/Task\u003e with Tasks being loaded into an ArrayList."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @throws LoadException thrown when not able to load file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws LoadException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            File file \u003d new File(this.pathName);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            FileReader fr \u003d new FileReader(file);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            DateTimeFormatter inputDateFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            DateTimeFormatter inputTimeFormat \u003d DateTimeFormatter.ofPattern(\"HH:mm\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            assert file !\u003d null : \"Assert error: Error loading file, file not found\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                String[] temp \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                String task \u003d temp[0];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                Integer isDone \u003d Integer.parseInt(temp[1]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                String description \u003d temp[2];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                if (task.equals(\"T\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                    Task t \u003d new Todo(description);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                    this.taskList.add(t);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                    if (isDone \u003d\u003d 1) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                        t.markAsDone();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                    LocalDate ld \u003d LocalDate.parse(temp[3].substring(0, 10), inputDateFormat);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                    LocalTime lt \u003d LocalTime.parse(temp[3].substring(12), inputTimeFormat);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                    if (task.equals(\"D\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                        Task d \u003d new Deadline(description, ld, lt);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                        this.taskList.add(d);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                        if (isDone \u003d\u003d 1) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                            d.markAsDone();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                        Task e \u003d new Event(description, ld, lt);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                        this.taskList.add(e);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                        if (isDone \u003d\u003d 1) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                            e.markAsDone();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            throw new LoadException();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Save tasks into txt file."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param tasks This is the ArrayList where the Task is being stored."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @throws SaveException thrown when not able to save tasks into file."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws SaveException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            File myFile \u003d  new File(this.pathName);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            if (!myFile.getParentFile().exists()) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                myFile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            FileWriter fw \u003d new FileWriter(this.pathName);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            assert fw !\u003d null : \"Assert error: Error saving into file!\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            for (Task t : tasks) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                fw.write(formatSavedFile(t) + \"\\n\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            throw new SaveException();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Save tasks into txt file."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param task This is the Task to be formatted to save into file."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @return Formatted string."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    private static String formatSavedFile(Task task) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        assert task !\u003d null : \"Assert error: No new task to save!\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        String toAdd \u003d \"\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        int isDone \u003d 0;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        if (task.isDone()) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            isDone \u003d 1;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        if (task instanceof Todo) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            toAdd +\u003d \"T | \" + isDone + \" | \" + task.getDescription();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            Deadline d \u003d (Deadline) task;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            toAdd +\u003d \"D | \" + isDone + \" | \" + d.getDescription() + \" | \" + d.getDeadline();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            Event e \u003d (Event) task;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            toAdd +\u003d \"E | \" + isDone + \" | \" + e.getDescription() + \" | \" + e.getEvent();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return toAdd;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public void newFile(String noteType) throws IOException {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        String filePath \u003d \"data/notes/\" + noteType + \".txt\";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        File myFile \u003d  new File(filePath);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        if (!myFile.getParentFile().exists()) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            myFile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public void saveNote(String noteType, String notes) throws IOException {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        File file \u003d new File(\"data/notes/\" + noteType + \".txt\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        FileWriter fw \u003d new FileWriter(file, true);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        fw.write(\"• \" + notes + \"\\n\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jadetayy": 154
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    static DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    static DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"h:mma\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Constructor for creating new Deadline object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param description This is the description of the Deadline."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param date This is the date the Deadline is on."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param time This is the time the Deadline is on."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public Deadline(String description, LocalDate date, LocalTime time) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * This method retrieves the date the Deadline is on."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @return date the Deadline is on."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * This method retrieves deadline of Deadline."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @return date and time the Deadline is on."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return this.date + \", \" + this.time;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Returns the String representation of Deadline."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @return String of the Deadline."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        String formattedDate \u003d this.date.format(dateFormatter);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        String formattedTime \u003d this.time.format(timeFormatter);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return \"[D][\" + super.getStatusIcon() + \"] \" + super.toString() + \" (by: \" + formattedDate"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                + \", \" + formattedTime + \")\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jadetayy": 57
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    static DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    static DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"h:mma\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Constructor for creating new Event object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param description This is the description of the Event."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param date This is the date the Event is on."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param time This is the time the Event is on."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public Event(String description, LocalDate date, LocalTime time) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * This method retrieves the date the Event is on."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @return date of the Event."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * This method retrieves date and time of Event."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @return date and time the Event is on."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public String getEvent() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return this.date + \", \" + this.time;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Returns the String representation of Event."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @return String of the Event."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        String formattedDate \u003d this.date.format(dateFormatter);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        String formattedTime \u003d this.time.format(timeFormatter);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return \"[E][\" + super.getStatusIcon() + \"] \" + super.toString() + \" (at: \" + formattedDate"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                + \", \" + formattedTime + \")\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jadetayy": 57
    }
  },
  {
    "path": "src/main/java/task/Note.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "public class Note extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public String type;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public Note(String type, String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jadetayy": 20
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " * This class creates Task object."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Constructor for creating new Task object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param description This is the description of the Task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * This method retrieves the status icon for a Task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @return String of the icon."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Mark Task as done."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Check for done status of a Task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @return boolean This checks Task is done."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Gets description of a Task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @return String description of the Task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Returns the String representation of Task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @return String of the Task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jadetayy": 63
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Constructor for creating new Todo object."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param description This is the description of the Todo."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Returns the String representation of Todo."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @return String of the Todo."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return \"[T][\" + super.getStatusIcon() + \"] \" + super.toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jadetayy": 23
    }
  },
  {
    "path": "src/main/java/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "package tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " * This class contains the task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    private ArrayList\u003cTask\u003e tasksList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Constructor for creating new TaskList object and ArrayList\u003cTask\u003e\u003c/Task\u003e when there is no existing file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        this.tasksList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Constructor for creating new TaskList object taking in an existing tasksList."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param tasksList ArrayList containing Tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasksList) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        this.tasksList \u003d tasksList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * This method retrieves the Task in TaskList."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @return required Tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return this.tasksList;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * This method retrieves the total number of Tasks in TaskList."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @return total number of Tasks in TaskList."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public int getNumTasks() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return this.tasksList.size();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * This method adds a new Task into TaskList."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param t This is the Task to be added into TaskList."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        this.tasksList.add(t);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * This method removed Task from TaskList."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param index This is the index of the Task in TaskList to be removed."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @return Task to be removed from TaskList."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public Task removeTask(int index) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        Task t \u003d this.tasksList.get(index);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        this.tasksList.remove(index);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * This method mark a Task in TaskList as done."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @param index This is the index of the Task in TaskList to be marked as done."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * @return Task marked as done in TaskList."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public Task markTaskAsDone(int index) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        Task t \u003d this.tasksList.get(index);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        t.markAsDone();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jadetayy": 81
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " * This class deals with interactions with the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public static final String LINE \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Constructor for creating new Ui object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     * Prints the message to be shown to user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public void printMsg(String msg) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        assert msg.length() !\u003d 0 : \"Assert error: no message to print!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jadetayy": 30
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "         xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "               style\u003d\"-fx-padding: 10 10 10 10; -fx-background-color: #FFE6E6; -fx-background-radius: 10 10 10 10\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "jadetayy": 20
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            prefHeight\u003d\"800.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"758.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"524.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"524.0\" layoutY\u003d\"758.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"757.0\" prefWidth\u003d\"600.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"580.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "jadetayy": 21
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        System.out.println(\"test\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jadetayy": 5
    }
  },
  {
    "path": "src/test/java/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public void testDeadline() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        DateTimeFormatter inputDateFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        DateTimeFormatter inputTimeFormat \u003d DateTimeFormatter.ofPattern(\"HHmm\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        Task deadline \u003d new Deadline(\"Deadline\", LocalDate.parse(\"2020-02-28\", inputDateFormat),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "                LocalTime.parse(\"1800\", inputTimeFormat));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        String expectedText \u003d \"[D][\\u2718] Deadline (by: Feb 28 2020, 6:00pm)\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        String actualText \u003d deadline.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        assertEquals(expectedText, actualText);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jadetayy": 24
    }
  },
  {
    "path": "src/test/java/task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    public void testTodo() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        Task todo \u003d new Todo(\"Task\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        String expectedText \u003d \"[T][\\u2718] Task\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        String actualText \u003d todo.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "        assertEquals(expectedText, actualText);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jadetayy": 16
    }
  },
  {
    "path": "test-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     Hello! i\u0027m dUKE!"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     How can I help you!"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     Got it! i\u0027ve added this task!:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "       [T][✘] borrow book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     1.[T][✘] borrow book"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     Got it! i\u0027ve added this task!:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "       [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     Got it! i\u0027ve added this task!:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "       [E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "     Bye see you again（ｉДｉ）"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "jadetayy": 31
    }
  },
  {
    "path": "test-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "jadetayy": 5
    }
  },
  {
    "path": "test-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jadetayy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jadetayy"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "jadetayy": 34
    }
  }
]
