[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huixianc"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huixianc"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huixianc"
        },
        "content": "jar {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    manifest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        attributes \u0027Main-Class\u0027: \u0027Launcher\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huixianc"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huixianc"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "huixianc"
        },
        "content": "test {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "huixianc"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "huixianc"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "huixianc"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huixianc": 42,
      "-": 21
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huixianc"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huixianc"
        },
        "content": "T | 0 | take a nap"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huixianc"
        },
        "content": "T | 1 | look for mushrooms"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huixianc"
        },
        "content": "T | 0 | read a book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huixianc"
        },
        "content": "E | 0 | meeting | 14:00 | 2020-02-17"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huixianc"
        },
        "content": "D | 0 | submit quiz | 16:00 | 2020-02-18"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huixianc"
        },
        "content": "D | 0 | submit quiz | 16:00 | 2020-02-19"
      }
    ],
    "authorContributionMap": {
      "huixianc": 7
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huixianc"
        },
        "content": "## About "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huixianc"
        },
        "content": "Mbot Jr is a personal assistant chatbot who will help you keep track of your tasks!"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huixianc"
        },
        "content": "![MBot Jr](Ui.png)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huixianc"
        },
        "content": "### `todo` - Adds a to-do task "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huixianc"
        },
        "content": "Adds a task to be done, with a description. "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huixianc"
        },
        "content": "`todo read a book`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huixianc"
        },
        "content": "![todo](todo.png)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huixianc"
        },
        "content": "### `event` - Adds an event task "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huixianc"
        },
        "content": "Adds an event with a description, date and time."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huixianc"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huixianc"
        },
        "content": "`event meeting /at 2020-02-16 14:00`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huixianc"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "huixianc"
        },
        "content": "![event](event.png)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "huixianc"
        },
        "content": "### `deadline` - Adds a deadline task "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "huixianc"
        },
        "content": "Adds a task that has a deadline, with a description, date and time. "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "huixianc"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "huixianc"
        },
        "content": "`deadline submit quiz /by 2020-02-18 16:00`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "huixianc"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "huixianc"
        },
        "content": "![deadline](deadline.png)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "huixianc"
        },
        "content": "### `done` - Marks a task as done"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "huixianc"
        },
        "content": "When a task has been completed, mark it as done."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "huixianc"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "huixianc"
        },
        "content": "`done 3`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "huixianc"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "huixianc"
        },
        "content": "![done](done.png)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "huixianc"
        },
        "content": "### `delete` - Deletes a task "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "huixianc"
        },
        "content": "Delete a task that you no longer want or need."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "huixianc"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "huixianc"
        },
        "content": "`delete 7`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "huixianc"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "huixianc"
        },
        "content": "![delete](delete.png)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "huixianc"
        },
        "content": "### `list` - Lists all tasks "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "huixianc"
        },
        "content": "Provides a list of all tasks you have added."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "huixianc"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "huixianc"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "huixianc"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "huixianc"
        },
        "content": "![list](list.png)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "huixianc"
        },
        "content": "### `find` - Searches for tasks with keyword "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "huixianc"
        },
        "content": "Shows all tasks that contain the keyword you searched."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "huixianc"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "huixianc"
        },
        "content": "`find mushroom`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "huixianc"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "huixianc"
        },
        "content": "![find](find.png)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "huixianc"
        },
        "content": "### `sort` - Sorts tasks chronologically "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "huixianc"
        },
        "content": "Organises the tasks according to date and time."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "huixianc"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "huixianc"
        },
        "content": "`sort`"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "huixianc"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "huixianc"
        },
        "content": "![sort](sort.png)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "huixianc"
        },
        "content": "### `bye` - Exits the application "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "huixianc"
        },
        "content": "Exits the application and closes the chatbot."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "huixianc"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "huixianc"
        },
        "content": "`bye`"
      }
    ],
    "authorContributionMap": {
      "huixianc": 99,
      "-": 13
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huixianc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huixianc"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huixianc"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huixianc"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huixianc"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huixianc"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        setBackground(new Background(new BackgroundFill(Color.rgb(255, 255, 255),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                CornerRadii.EMPTY, Insets.EMPTY)));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        DialogBox box \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        box.setBackground(new Background(new BackgroundFill(Color.rgb(255, 226, 228),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                CornerRadii.EMPTY, Insets.EMPTY)));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return box;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "huixianc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huixianc": 70
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import duke.pack.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import duke.pack.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import duke.pack.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import duke.pack.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import duke.pack.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import duke.pack.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huixianc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huixianc"
        },
        "content": " * Represents the chatbot."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huixianc"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    private static final String path \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Creates a Duke object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param filePath String representing the file path"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        // following code from module website"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            ui.showError(e);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Generates a response to user input."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param input user input command"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        String resp \u003d \"\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            Command comm \u003d Parser.parseCommand(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            resp \u003d comm.getResponse(tasks, ui, storage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            resp \u003d e.toString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return resp;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Starts to run the bot"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                String command \u003d ui.receiveInput();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                Command comm \u003d Parser.parseCommand(command);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                comm.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                isExit \u003d comm.isExit();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                ui.showError(e);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        new Duke(path).run();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huixianc": 82,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huixianc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huixianc"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huixianc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huixianc"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huixianc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huixianc": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huixianc"
        },
        "content": "//@Override"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huixianc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huixianc"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huixianc"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huixianc"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    private static final String path \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    private Duke duke \u003d new Duke(path);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            stage.setTitle(\"MBot Jr\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            stage.getIcons().add(dukeImage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "huixianc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huixianc": 37
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huixianc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huixianc"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huixianc"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huixianc"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    private final String goodbye \u003d \"See you later! :)\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        String logo \u003d \"Hello, I\u0027m Mbot Jr! The M stands for mushrooms, FYI. How may I help you today?\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                DialogBox.getDukeDialog(logo, dukeImage)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        );"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * and then appends them to the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        );"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                    DialogBox.getDukeDialog(goodbye, dukeImage)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            );"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "huixianc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huixianc": 67
    }
  },
  {
    "path": "src/main/java/duke/pack/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huixianc"
        },
        "content": "package duke.pack;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huixianc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huixianc"
        },
        "content": " * Represents a command to add a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huixianc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huixianc"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    protected Task task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Creates an add command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param task the task to be added"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Executes the add command and adds task to the TaskList."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param tasks TaskList containing all the added tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param ui UI that handles interactions with user"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param storage Storage that handles updating of tasks in hard disk"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @throws DukeException if task cannot be saved to hard disk"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        ui.showAdd(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        ui.showCount(tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Executes add command and gets response for the GUI"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param tasks TaskList containing all the added tasks"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param ui UI that handles interactions with user"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param storage Storage that handles updating of tasks in hard disk"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @return String response for GUI"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @throws DukeException if task cannot be saved to hard disk"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public String getResponse(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        int taskNum \u003d tasks.getSize();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        String count \u003d \"You now have \" + taskNum + \" tasks in your list!\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        String resp \u003d \"Alright! I have added: \\n\" + task + \"\\n\" + count;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return resp;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Indicates whether command is exit."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @return boolean true if it is an exit command, else false"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "huixianc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huixianc": 59
    }
  },
  {
    "path": "src/main/java/duke/pack/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huixianc"
        },
        "content": "package duke.pack;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huixianc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huixianc"
        },
        "content": " * Represents a command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huixianc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huixianc"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public abstract String getResponse(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public abstract Boolean isExit();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huixianc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huixianc": 14
    }
  },
  {
    "path": "src/main/java/duke/pack/DateSorter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huixianc"
        },
        "content": "package duke.pack;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huixianc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huixianc"
        },
        "content": " * Represents a comparator to sort according to date."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huixianc"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huixianc"
        },
        "content": "public class DateSorter implements Comparator\u003cTask\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Creates a DateSorter object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public DateSorter() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public int compare(Task a, Task b) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        String timeA \u003d a.getTimeToCompare();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        String timeB \u003d b.getTimeToCompare();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return timeA.compareTo(timeB);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huixianc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huixianc": 22
    }
  },
  {
    "path": "src/main/java/duke/pack/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huixianc"
        },
        "content": "package duke.pack;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huixianc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huixianc"
        },
        "content": " * Represents a command to add a deadline type of task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huixianc"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huixianc"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    protected final String type \u003d \"D\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Creates a deadline type of task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param description the task to be done"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param time the time the task is due"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param date the date the task is due"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public Deadline(String description, LocalTime time, LocalDate date,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                    String dateToCompare, String timeToCompare) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        super(description, dateToCompare, timeToCompare);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Formats the task to be saved in hard disk."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @return a string of the formatted task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public String formatForFile() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        String done;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            done \u003d \"1\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            done \u003d \"0\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return type + \" | \" + done + \" | \" + description"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                + \" | \" + time.toString() + \" | \" + date.toString() + \"\\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) +  \", \" +"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                time.format(DateTimeFormatter.ofLocalizedTime(FormatStyle.SHORT)) + \")\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "huixianc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huixianc": 54
    }
  },
  {
    "path": "src/main/java/duke/pack/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huixianc"
        },
        "content": "package duke.pack;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huixianc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huixianc"
        },
        "content": " * Represents a command to delete a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huixianc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huixianc"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    protected int taskNum;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Creates a delete command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param taskNum number of task to be deleted"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public DeleteCommand(int taskNum) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        assert taskNum \u003e 0: \"task number must be 1 or more!\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Executes the delete command and removes tasks from TaskList"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param tasks TaskList containing all the added tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param ui UI that handles interactions with user"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param storage Storage that handles updating of tasks in hard disk"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @throws DukeException if tasks cannot be updated to hard disk"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        if (taskNum \u003e tasks.getSize()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            throw new DukeException(\"    Oh no! That task does not exist!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        Task task \u003d tasks.deleteTask(taskNum);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        ui.showDelete(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        ui.showCount(tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Executes delete command and gets response for the GUI"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param tasks TaskList containing all the added tasks"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param ui UI that handles interactions with user"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param storage Storage that handles updating of tasks in hard disk"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @return String response for GUI"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @throws DukeException if tasks cannot be saved to hard disk"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public String getResponse(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        if (taskNum \u003e tasks.getSize()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            throw new DukeException(\"Oh no! That task does not exist!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        Task task \u003d tasks.deleteTask(taskNum);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        String resp \u003d \"Yeet! I have tossed the task: \\n\" + task;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return resp;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Indicates whether command is exit."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @return boolean true if it is an exit command, else false"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "huixianc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huixianc": 65
    }
  },
  {
    "path": "src/main/java/duke/pack/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huixianc"
        },
        "content": "package duke.pack;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huixianc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huixianc"
        },
        "content": " * Represents a command to mark a task as done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huixianc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huixianc"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    protected int taskNum;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Creates a command to mark a task as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param taskNum the task to be marked as done"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public DoneCommand(int taskNum) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        assert taskNum \u003e 0: \"task number must be 1 or more!\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Executes the done command and marks task as done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param tasks TaskList containing all the added tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param ui UI that handles interactions with user"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param storage Storage that handles updating of tasks in hard disk"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @throws DukeException if task cannot be updated to hard disk"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        if (taskNum \u003e tasks.getSize()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            throw new DukeException(\"    Oh no! That task does not exist!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        Task task \u003d tasks.markAsDone(taskNum);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        ui.showDone(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Executes done command and gets response for the GUI"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param tasks TaskList containing all the added tasks"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param ui UI that handles interactions with user"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param storage Storage that handles updating of tasks in hard disk"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @return String response for GUI"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @throws DukeException if task cannot be updated to hard disk"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public String getResponse(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        if (taskNum \u003e tasks.getSize()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            throw new DukeException(\"Oh no! That task does not exist!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        Task task \u003d tasks.markAsDone(taskNum);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        String resp \u003d \"Fantastic job! I have marked this task as done: \\n\" + task;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return resp;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Indicates whether command is exit."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @return boolean true if it is an exit command, else false"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "huixianc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huixianc": 65
    }
  },
  {
    "path": "src/main/java/duke/pack/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huixianc"
        },
        "content": "package duke.pack;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huixianc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huixianc"
        },
        "content": " * Represents an exception for Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huixianc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huixianc"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    String s;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Creates an exception specific to Duke."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param s description of exception"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        this.s \u003d s;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huixianc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huixianc": 21
    }
  },
  {
    "path": "src/main/java/duke/pack/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huixianc"
        },
        "content": "package duke.pack;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huixianc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huixianc"
        },
        "content": " * Represents a command to add an event type of task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huixianc"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huixianc"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    protected final String type \u003d \"E\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Creates an event type of task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param description task to be done"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param time time of event"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param date date of event"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param dateToCompare date used in comparator"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param timeToCompare time used in comparator"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public Event(String description, LocalTime time, LocalDate date,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                 String dateToCompare, String timeToCompare) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        super(description, dateToCompare, timeToCompare);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Formats the task to be saved in hard disk."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @return a string of the formatted task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public String formatForFile() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        String done;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            done \u003d \"1\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            done \u003d \"0\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return type + \" | \" + done + \" | \" + description"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                + \" | \" + time.toString() + \" | \" + date.toString() + \"\\n\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \", \""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                + time.format(DateTimeFormatter.ofLocalizedTime(FormatStyle.SHORT)) + \")\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "huixianc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huixianc": 55
    }
  },
  {
    "path": "src/main/java/duke/pack/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huixianc"
        },
        "content": "package duke.pack;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huixianc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huixianc"
        },
        "content": " * Represents a command to exit the bot."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huixianc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huixianc"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Creates an exit command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Executes the exit command and stops the bot."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param tasks TaskList containing all the added tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param ui UI that handles interactions with user"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param storage Storage that handles updating of tasks in hard disk"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @throws DukeException if tasks cannot be saved to hard disk"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        ui.exit();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Executes exit command and gets response for the GUI"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param tasks TaskList containing all the added tasks"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param ui UI that handles interactions with user"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param storage Storage that handles updating of tasks in hard disk"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @return String response for GUI"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @throws DukeException if tasks cannot be saved to hard disk"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public String getResponse(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        String resp \u003d \"See you later! :)\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return resp;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Indicates whether command is exit."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @return boolean true if it is an exit command, else false"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "huixianc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huixianc": 51
    }
  },
  {
    "path": "src/main/java/duke/pack/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huixianc"
        },
        "content": "package duke.pack;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huixianc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huixianc"
        },
        "content": " * Represents a command to find tasks matching user\u0027s input."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huixianc"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huixianc"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    protected String query;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Creates a find command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param query search keyword"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public FindCommand(String query) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        this.query \u003d query;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Executes the find command and prints matching tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param tasks TaskList containing all the added tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param ui UI that handles interactions with user"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param storage Storage that handles updating of tasks in hard disk"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d tasks.getList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        ui.showFind();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        for (Task t: list) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            if (t.toString().contains(query)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                System.out.println(\"    \" + i + \".\" + t);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Executes find command and gets response for the GUI"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param tasks TaskList containing all the added tasks"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param ui UI that handles interactions with user"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param storage Storage that handles updating of tasks in hard disk"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @return String response for GUI"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public String getResponse(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        String resp \u003d \"I have found these matching tasks! \\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d tasks.getList();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        for (Task t: list) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            if (t.toString().contains(query)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                resp \u003d resp + i + \".\" + t + \"\\n\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return resp;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Indicates whether command is exit."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @return boolean true if it is an exit command, else false"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "huixianc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huixianc": 71
    }
  },
  {
    "path": "src/main/java/duke/pack/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huixianc"
        },
        "content": "package duke.pack;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huixianc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huixianc"
        },
        "content": " * Represents a command to list all tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huixianc"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huixianc"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Creates a list command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Executes the list command and prints all tasks from TaskList."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param tasks TaskList containing all the added tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param ui UI that handles interactions with user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param storage Storage that handles updating of tasks in hard disk"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        tasks.printList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Executes list command and gets response for the GUI"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param tasks TaskList containing all the added tasks"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param ui UI that handles interactions with user"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param storage Storage that handles updating of tasks in hard disk"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @return String response for GUI"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public String getResponse(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d tasks.getList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        String resp \u003d \"Here are your tasks: \\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            resp \u003d resp +  i + \". \" + list.get(i - 1) + \"\\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return resp;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Indicates whether command is exit."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @return boolean true if it is an exit command, else false"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "huixianc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huixianc": 53
    }
  },
  {
    "path": "src/main/java/duke/pack/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huixianc"
        },
        "content": "package duke.pack;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huixianc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huixianc"
        },
        "content": " * Represents a parser to interpret the user\u0027s commands."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huixianc"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huixianc"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Interprets the user\u0027s command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param command input of the user"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @return a Command that indicates what the user wants"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @throws DukeException if command is not correctly inputted"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public static Command parseCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        String[] comm \u003d command.split(\" \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            // list command to print all the tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        } else if (comm[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            // find command that returns tasks that match"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            return parseFind(comm);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        } else if (comm[0].equals(\"sort\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            // sort command to sort tasks chronologically"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            return parseSort();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        } else if (comm[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            // done command to mark task as done"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            return parseDone(comm);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        } else if (comm[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            // delete command to remove task from list"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            return parseDelete(comm);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        } else if (comm[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            // to-do command to add a to-do task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            return parseTodo(command, comm);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        } else if (comm[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            // event command to add an event task"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            return parseEvent(command, comm);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        } else if (comm[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            // deadline command to add a deadline task"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            return parseDeadline(command, comm);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        } else if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            // exit command to close programme"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            // invalid command"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            throw new DukeException(\"Oh no! I\u0027m sorry, I do not understand that, please try again!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Handles sort command."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @return a SortCommand object"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public static Command parseSort() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        Command c \u003d new SortCommand();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return c;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Interprets find command."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param comm String array of the command"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @return a FindCommand object"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @throws DukeException if no search keyword was provided"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public static Command parseFind(String[] comm) throws DukeException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        if (comm.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            throw new DukeException(\"Oh no! You have to specify what you want to find!\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        Command c \u003d new FindCommand(comm[1]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return c;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Interprets mark as done command."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param comm String array of command"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @return a DoneCommand object"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @throws DukeException if task number is not specified"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public static Command parseDone(String[] comm) throws DukeException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        if (comm.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            throw new DukeException(\"Oh no! You have to specify which task is done!\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        Command c \u003d new DoneCommand(Integer.parseInt(comm[1]));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return c;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Interprets delete command."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param comm String array of command"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @return a DeleteCommand object"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @throws DukeException if task number is not specified"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public static Command parseDelete(String[] comm) throws DukeException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        if (comm.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            throw new DukeException(\"Oh no! You have to specify which task to delete!\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        Command c \u003d new DeleteCommand(Integer.parseInt(comm[1]));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return c;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Interprets to-do command."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param fullCommand String of full command given"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param comm String array of command"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @return an AddCommand object"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @throws DukeException if task description is not provided"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public static Command parseTodo(String fullCommand, String[] comm) throws DukeException {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        // if no description is given"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        if (comm.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            throw new DukeException(\"Oh no! A todo cannot be empty!\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        String[] arr \u003d fullCommand.split(\"todo\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        Task t \u003d new Todo(arr[1].trim(), \"0000-00-00\", \"00:00\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        Command c \u003d new AddCommand(t);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return c;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Interprets an event command."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param fullCommand String of full command given"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param comm String array of command"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @return an AddCommand object"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @throws DukeException if task description is not provided, date and time details are not included"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public static Command parseEvent(String fullCommand, String[] comm) throws DukeException {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        // if no description is given"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        if (comm.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            throw new DukeException(\"Oh no! An event cannot be empty!\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        String[] splitByAt \u003d fullCommand.split(\"/at\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        // if no \"at\" is given"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        if (splitByAt.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            throw new DukeException(\"Oh no! Please include an at!\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        "
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        String[] splitByEvent \u003d splitByAt[0].split(\"event\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        String[] dateTime \u003d splitByAt[1].trim().split(\" \");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        if (dateTime.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            throw new DukeException(\"Oh no! Please include a time!\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(dateTime[0].trim());"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            LocalTime time \u003d LocalTime.parse(dateTime[1].trim());"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            Task t \u003d new Event(splitByEvent[1].trim(), time, date, date.toString(), time.toString());"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            Command c \u003d new AddCommand(t);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            return c;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            throw new DukeException(\"Oh no! Please follow the date format! \\n\" +"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                    \"Example: 2020-01-27 13:00!\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Interprets a deadline command."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param fullCommand String of full command given"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param comm String array of command"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @return an AddCommand object"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @throws DukeException if task description is not provided, date and time details are not included"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public static Command parseDeadline(String fullCommand, String[] comm) throws DukeException {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        // if no description is given"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        if (comm.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            throw new DukeException(\"Oh no! A deadline cannot be empty!\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        String[] splitByBy \u003d fullCommand.split(\"/by\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        // if no \"by\" is given"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        if (splitByBy.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            throw new DukeException(\"Oh no! You need to include by when!\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        String[] splitByDeadline \u003d splitByBy[0].split(\"deadline\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        String[] dateTime \u003d splitByBy[1].trim().split(\" \");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        if (dateTime.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            throw new DukeException(\"Oh no! Please include a time!\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(dateTime[0].trim());"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            LocalTime time \u003d LocalTime.parse(dateTime[1].trim());"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            // add to list"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            Task t \u003d new Deadline(splitByDeadline[1].trim(), time, date, date.toString(), time.toString());"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            Command c \u003d new AddCommand(t);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            return c;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            throw new DukeException(\"Oh no! Please follow the date format! \\n\" +"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                    \"Example: 2020-01-27 13:00!\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "huixianc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huixianc": 220
    }
  },
  {
    "path": "src/main/java/duke/pack/SortCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huixianc"
        },
        "content": "package duke.pack;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huixianc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huixianc"
        },
        "content": " * Represents a sort command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huixianc"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huixianc"
        },
        "content": "public class SortCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Creates a sort command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public SortCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Executes the sort command and prints sorted tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param tasks TaskList containing all the added tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param ui UI that handles interactions with user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param storage Storage that handles updating of tasks in hard disk"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        Collections.sort(tasks.getList(), new DateSorter());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        Collections.sort(tasks.getList(), new TimeSorter());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        ui.showSort();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Executes the sort command and gets response for GUI."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param tasks TaskList containing all the added tasks"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param ui UI that handles interactions with user"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param storage Storage that handles updating of tasks in hard disk"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public String getResponse(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        Collections.sort(tasks.getList(), new DateSorter());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        Collections.sort(tasks.getList(), new TimeSorter());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        String resp \u003d \"I have sorted the tasks chronologically!\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return resp;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Indicates whether command is exit."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @return boolean true if it is an exit command, else false"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public Boolean isExit() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "huixianc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huixianc": 50
    }
  },
  {
    "path": "src/main/java/duke/pack/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huixianc"
        },
        "content": "package duke.pack;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huixianc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huixianc"
        },
        "content": " * Handles the loading and updating of tasks to hard disk."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huixianc"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huixianc"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    protected File file;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Creates a storage."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param filePath String representing the path of data file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @throws DukeException if file cannot be created"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public Storage(String filePath) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        // file creation following code from"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        // https://stackoverflow.com/questions/6142901/how-to-create-a-file-in-a-directory-in-java/6143076#6143076"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        file \u003d new File(filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            throw new DukeException(\"Oh no, file could not be created!\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Loads tasks from the hard disk."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @return an ArrayList of the tasks"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @throws DukeException if tasks cannot be loaded from hard disk"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        ArrayList\u003cTask\u003e arrList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            Scanner fileScanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            while (fileScanner.hasNext()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                String task \u003d fileScanner.nextLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                String[] taskArr \u003d task.split(\"\\\\|\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                String taskType \u003d taskArr[0].trim();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                if (taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                    Task todo \u003d processTodo(taskArr);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                    arrList.add(todo);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                } else if (taskType.equals(\"E\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                    Task event \u003d processEvent(taskArr);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                    arrList.add(event);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                } else if (taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                    Task deadline \u003d processDeadline(taskArr);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                    arrList.add(deadline);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            throw new DukeException(\"Oh no, file could not be found, please check your file path!\\n\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return arrList;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Converts data from file into a To-do task."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param taskArr String array of the data"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @return a To-do object"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public Task processTodo(String[] taskArr) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        Task todo \u003d new Todo(taskArr[2].trim(), \"0000-00-00\", \"00:00\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        if (taskArr[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            todo.setDone(true);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return todo;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Converts data from file into an Event task."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param taskArr String array of the data"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @return an Event object"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public Task processEvent(String[] taskArr) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(taskArr[4].trim());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        LocalTime time \u003d LocalTime.parse(taskArr[3].trim());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        Task event \u003d new Event(taskArr[2].trim(), time, date, date.toString(), time.toString());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        if (taskArr[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            event.setDone(true);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return event;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Converts data from file into a Deadline task."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param taskArr String array of the data"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @return a Deadline object"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public Task processDeadline(String[] taskArr) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(taskArr[4].trim());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        LocalTime time \u003d LocalTime.parse(taskArr[3].trim());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        Task deadline \u003d new Deadline(taskArr[2].trim(), time, date, date.toString(), time.toString());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        if (taskArr[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            deadline.setDone(true);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Saves tasks to the hard disk."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param tasks TaskList of all the tasks"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @throws DukeException if tasks cannot be saved to hard disk"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public void save(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            String text \u003d \"\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            for ( Task task: tasks.getList()) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                text \u003d text + task.formatForFile();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            fw.write(text);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            throw new DukeException(\"Oh no, error in saving tasks to hard disk!\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "huixianc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huixianc": 145
    }
  },
  {
    "path": "src/main/java/duke/pack/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huixianc"
        },
        "content": "package duke.pack;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huixianc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huixianc"
        },
        "content": " * Represents a task of the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huixianc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huixianc"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    protected String dateToCompare;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    protected String timeToCompare;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Creates a task with the specified description."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param description the task description"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param dateToCompare date used in comparator"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param timeToCompare time used in comparator"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public Task(String description, String dateToCompare, String timeToCompare) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        this.dateToCompare \u003d dateToCompare;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        this.timeToCompare \u003d timeToCompare;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Gets the status of task, whether it is done or not."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @return A string that shows the corresponding tick/cross symbol"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Sets the task to done or not done."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param b boolean that indicates whether the task is done"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public void setDone(Boolean b) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        isDone \u003d b;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public String getDateToCompare() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return dateToCompare;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public String getTimeToCompare() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return timeToCompare;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public String formatForFile() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return (\"[\" + getStatusIcon() + \"] \" + description);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "huixianc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huixianc": 65
    }
  },
  {
    "path": "src/main/java/duke/pack/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huixianc"
        },
        "content": "package duke.pack;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huixianc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huixianc"
        },
        "content": " * Represents list of all the tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huixianc"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huixianc"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    protected ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Creates a new task list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * creates a task list using input from the ArrayList"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param list list of tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Adds given task to the list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param task the task to be added"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Deletes given task from list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param taskNum integer value of the task to be deleted"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @return the deleted task"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public Task deleteTask(int taskNum) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return list.remove(taskNum - 1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public Task markAsDone(int taskNum) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        list.get(taskNum - 1).markAsDone();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return list.get(taskNum - 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Prints all the tasks in the list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public void printList() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        System.out.println(\"    Here are your tasks:\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            System.out.println(\"    \" + i + \". \" + list.get(i - 1));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "huixianc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huixianc": 67
    }
  },
  {
    "path": "src/main/java/duke/pack/TimeSorter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huixianc"
        },
        "content": "package duke.pack;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huixianc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huixianc"
        },
        "content": " * Represents a comparator to sort according to time."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huixianc"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huixianc"
        },
        "content": "public class TimeSorter implements Comparator\u003cTask\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Creates a TimeSorter object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public TimeSorter() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public int compare(Task a, Task b) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        String dateA \u003d a.getDateToCompare();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        String dateB \u003d b.getDateToCompare();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return dateA.compareTo(dateB);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huixianc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huixianc": 22
    }
  },
  {
    "path": "src/main/java/duke/pack/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huixianc"
        },
        "content": "package duke.pack;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huixianc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huixianc"
        },
        "content": " * Represents a to-do type of task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huixianc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huixianc"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    protected final String type \u003d \"T\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Creates a to-do type of task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param description task to be done"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param dateToCompare date used in comparator"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param timeToCompare time used in comparator"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public Todo(String description, String dateToCompare, String timeToCompare) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        super(description, dateToCompare, timeToCompare);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Formats the task to be saved in hard disk"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @return a string of the formatted task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public String formatForFile() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        String done;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            done \u003d \"1\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            done \u003d \"0\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return type + \" | \" + done + \" | \" + description + \"\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "huixianc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huixianc": 39
    }
  },
  {
    "path": "src/main/java/duke/pack/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huixianc"
        },
        "content": "package duke.pack;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huixianc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huixianc"
        },
        "content": " * Handles interactions with user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huixianc"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huixianc"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Creates a UI."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Prints error."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param e the DukeException thrown"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public void showError(DukeException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        System.out.println(e);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Takes in user\u0027s input."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @return string representing command"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public String receiveInput() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        String command \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Prints greeting to user."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        System.out.println(\"    ------------------------------------------------------------------\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        // logo obtained using https://www.kammerl.de/ascii/AsciiSignature.php"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        String logo \u003d \"     __  __ _           _          _      \\n\" +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                \"    |  \\\\/  | |         | |        | |     \\n\" +"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                \"    | \\\\  / | |__   ___ | |_       | |_ __ \\n\" +"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                \"    | |\\\\/| | \u0027_ \\\\ / _ \\\\| __|  _   | | \u0027__|\\n\" +"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                \"    | |  | | |_) | (_) | |_  | |__| | |   \\n\" +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                \"    |_|  |_|_.__/ \\\\___/ \\\\__|  \\\\____/|_|   \\n\" +"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                \"\\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        System.out.println(\"    Hello, I\u0027m Mbot Jr!\\n\" +"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                \"    How may I help you?\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        System.out.println(\"    ------------------------------------------------------------------\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Prints formatting line."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        System.out.println(\"    ------------------------------------------------------------------\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Prints task added."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param t added task"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public void showAdd(Task t) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        System.out.println(\"    Alright! I have added: \\n    \" + t);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Prints task marked as done."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param t task marked as done"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public void showDone(Task t) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        System.out.println(\"    Fantastic job! I have marked this task as done: \\n    \" + t);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Prints task deleted."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param t deleted task"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public void showDelete(Task t) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        System.out.println(\"    Yeet! I have tossed the task: \\n    \" + t);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Prints total number of tasks."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * @param tasks the TaskList"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public void showCount(TaskList tasks) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        System.out.println(\"    You now have \" + tasks.getSize() + \" tasks in your list!\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public void showSort() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        System.out.println(\"    I have sorted the tasks chronologically!\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public void showFind() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        System.out.println(\"    I have found these matching tasks!\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     * Exits."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        System.out.println(\"    See you later! :)\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "huixianc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huixianc": 109
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huixianc"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huixianc"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huixianc"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huixianc"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huixianc"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huixianc"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huixianc"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            \u003cInsets left\u003d\"8.0\" right\u003d\"8.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huixianc"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huixianc"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "huixianc": 19
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huixianc"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huixianc"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huixianc"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huixianc"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huixianc"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huixianc"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huixianc"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huixianc"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huixianc"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "huixianc": 19
    }
  },
  {
    "path": "src/test/java/duke/pack/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huixianc"
        },
        "content": "package duke.pack;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huixianc"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public void testGetSize() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        assertEquals(0, new TaskList().getSize());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huixianc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huixianc": 13
    }
  },
  {
    "path": "src/test/java/duke/pack/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huixianc"
        },
        "content": "package duke.pack;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huixianc"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huixianc"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    public void testFormatForFile() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huixianc"
        },
        "content": "        assertEquals(\"T | 0 | read book\\n\","
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                new Todo(\"read book\", \"read book\","
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huixianc"
        },
        "content": "                        \"0000-00-00\").formatForFile());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huixianc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huixianc": 14
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    ------------------------------------------------------------"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huixianc"
        },
        "content": "     __  __ _           _          _"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    |  \\/  | |         | |        | |"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    | \\  / | |__   ___ | |_       | |_ __"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    | |\\/| | \u0027_ \\ / _ \\| __|  _   | | \u0027__|"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    | |  | | |_) | (_) | |_  | |__| | |"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    |_|  |_|_.__/ \\___/ \\__|  \\____/|_|"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    Hello, I\u0027m Mbot Jr!"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    How may I help you?"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    ------------------------------------------------------------"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    ------------------------------------------------------------"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    Alright! I have added:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    [T][✘] borrow book"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    You now have 1 tasks in your list!"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    ------------------------------------------------------------"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    ------------------------------------------------------------"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    Alright! I have added:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    You now have 2 tasks in your list!"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    ------------------------------------------------------------"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    ------------------------------------------------------------"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    Alright! I have added:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    [E][✘] meeting (at: Mon 2 - 4pm)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    You now have 3 tasks in your list!"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    ------------------------------------------------------------"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    ------------------------------------------------------------"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    Here are your tasks:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    1. [T][✘] borrow book"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    2. [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    3. [E][✘] meeting (at: Mon 2 - 4pm)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    ------------------------------------------------------------"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    ------------------------------------------------------------"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    See you later!"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    ------------------------------------------------------------"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "huixianc": 37
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huixianc"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huixianc"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huixianc"
        },
        "content": "event meeting /at Mon 2 - 4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huixianc"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huixianc"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "huixianc": 5
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huixianc"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huixianc"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huixianc"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huixianc"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huixianc"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huixianc"
        },
        "content": "REM Following the code from forum post:  https://github.com/nus-cs2103-AY1920S2/forum/issues/3"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huixianc"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huixianc"
        },
        "content": "dir /s /B ..\\src\\main\\java\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huixianc"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin @sources.txt"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huixianc"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huixianc"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huixianc"
        },
        "content": ")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huixianc"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huixianc"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huixianc"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huixianc"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huixianc"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huixianc"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "huixianc": 24
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huixianc"
        },
        "content": "C:\\Users\\Huixian\\Desktop\\ProjectDuke\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huixianc"
        },
        "content": "C:\\Users\\Huixian\\Desktop\\ProjectDuke\\src\\main\\java\\duke\\pack\\Deadline.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huixianc"
        },
        "content": "C:\\Users\\Huixian\\Desktop\\ProjectDuke\\src\\main\\java\\duke\\pack\\Event.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huixianc"
        },
        "content": "C:\\Users\\Huixian\\Desktop\\ProjectDuke\\src\\main\\java\\duke\\pack\\Task.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huixianc"
        },
        "content": "C:\\Users\\Huixian\\Desktop\\ProjectDuke\\src\\main\\java\\duke\\pack\\Todo.java"
      }
    ],
    "authorContributionMap": {
      "huixianc": 5
    }
  }
]
