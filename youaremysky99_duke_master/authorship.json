[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine:5.3.1\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    compile \u0027org.json:json:20171018\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    compile group: \u0027com.googlecode.json-simple\u0027, name: \u0027json-simple\u0027, version: \u00271.1.1\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    toolVersion \u003d \u00278.6\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    configDir \u003d file(\"$rootProject.projectDir/config/checkstyle\")"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "test {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youaremysky99": 38,
      "-": 20
    }
  },
  {
    "path": "config/checkstyle/checkstyle.xml",
    "fileType": "xml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c!DOCTYPE module PUBLIC"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "          \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "          \"http://checkstyle.sourceforge.net/dtds/configuration_1_3.dtd\"\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c!--"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    Checkstyle configuration that checks the Google coding conventions from Google Java Style"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    that can be found at https://google.github.io/styleguide/javaguide.html."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    Checkstyle is very configurable. Be sure to read the documentation at"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    http://checkstyle.sf.net (or in your downloaded distribution)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    To completely disable a check, just comment it out or delete it from the file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    Authors: Max Vetrenko, Ruslan Diachenko, Roman Ivanov."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " --\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cmodule name \u003d \"Checker\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cproperty name\u003d\"charset\" value\u003d\"UTF-8\"/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cproperty name\u003d\"fileExtensions\" value\u003d\"java, properties, xml\"/\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c!-- Checks for whitespace                               --\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c!-- See http://checkstyle.sf.net/config_whitespace.html --\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"FileTabCharacter\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"eachLine\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmodule name\u003d\"TreeWalker\"\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"OuterTypeFilename\"/\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"IllegalTokenText\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"tokens\" value\u003d\"STRING_LITERAL, CHAR_LITERAL\"/\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "            \u003cproperty name\u003d\"format\" value\u003d\"\\\\u00(09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\\\(0(10|11|12|14|15|42|47)|134)\"/\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "            \u003cproperty name\u003d\"message\" value\u003d\"Consider using special escape sequence instead of octal value or Unicode escaped value.\"/\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"AvoidEscapedUnicodeCharacters\"\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"allowEscapesForControlCharacters\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"allowByTailComment\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"allowNonPrintableEscapes\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"LineLength\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "            \u003cproperty name\u003d\"max\" value\u003d\"100\"/\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"ignorePattern\" value\u003d\"^package.*|^import.*|a href|href|http://|https://|ftp://\"/\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"AvoidStarImport\"/\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"OneTopLevelClass\"/\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"NoLineWrap\"/\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"EmptyBlock\"\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"option\" value\u003d\"TEXT\"/\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "            \u003cproperty name\u003d\"tokens\" value\u003d\"LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH\"/\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"NeedBraces\"/\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"LeftCurly\"/\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"RightCurly\"\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"id\" value\u003d\"RightCurlySame\"/\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "            \u003cproperty name\u003d\"tokens\" value\u003d\"LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_DO\"/\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"RightCurly\"\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"id\" value\u003d\"RightCurlyAlone\"/\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"option\" value\u003d\"alone\"/\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "            \u003cproperty name\u003d\"tokens\" value\u003d\"CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, STATIC_INIT, INSTANCE_INIT\"/\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"WhitespaceAround\"\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"allowEmptyConstructors\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"allowEmptyMethods\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"allowEmptyTypes\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"allowEmptyLoops\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmessage key\u003d\"ws.notFollowed\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "             value\u003d\"WhitespaceAround: \u0027\u0027{0}\u0027\u0027 is not followed by whitespace. Empty blocks may only be represented as \u0027{}\u0027 when not part of a multi-block statement (4.1.3)\"/\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "             \u003cmessage key\u003d\"ws.notPreceded\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "             value\u003d\"WhitespaceAround: \u0027\u0027{0}\u0027\u0027 is not preceded with whitespace.\"/\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"OneStatementPerLine\"/\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"MultipleVariableDeclarations\"/\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"ArrayTypeStyle\"/\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"MissingSwitchDefault\"/\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"FallThrough\"/\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"UpperEll\"/\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"ModifierOrder\"/\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"EmptyLineSeparator\"\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"allowNoEmptyLineBetweenFields\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"SeparatorWrap\"\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"id\" value\u003d\"SeparatorWrapDot\"/\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"tokens\" value\u003d\"DOT\"/\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"SeparatorWrap\"\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"id\" value\u003d\"SeparatorWrapComma\"/\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA\"/\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"option\" value\u003d\"EOL\"/\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"SeparatorWrap\"\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c!-- ELLIPSIS is EOL until https://github.com/google/styleguide/issues/258 --\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"id\" value\u003d\"SeparatorWrapEllipsis\"/\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"tokens\" value\u003d\"ELLIPSIS\"/\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"option\" value\u003d\"EOL\"/\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"SeparatorWrap\"\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c!-- ARRAY_DECLARATOR is EOL until https://github.com/google/styleguide/issues/259 --\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"id\" value\u003d\"SeparatorWrapArrayDeclarator\"/\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"tokens\" value\u003d\"ARRAY_DECLARATOR\"/\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"option\" value\u003d\"EOL\"/\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"SeparatorWrap\"\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"id\" value\u003d\"SeparatorWrapMethodRef\"/\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"tokens\" value\u003d\"METHOD_REF\"/\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"PackageName\"\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]+(\\.[a-z][a-z0-9]*)*$\"/\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmessage key\u003d\"name.invalidPattern\""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "             value\u003d\"Package name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"TypeName\"\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmessage key\u003d\"name.invalidPattern\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "             value\u003d\"Type name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"MemberName\"\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-z0-9][a-zA-Z0-9]*$\"/\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmessage key\u003d\"name.invalidPattern\""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "             value\u003d\"Member name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"ParameterName\"\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmessage key\u003d\"name.invalidPattern\""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "             value\u003d\"Parameter name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"CatchParameterName\"\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmessage key\u003d\"name.invalidPattern\""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "             value\u003d\"Catch parameter name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"LocalVariableName\"\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"tokens\" value\u003d\"VARIABLE_DEF\"/\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmessage key\u003d\"name.invalidPattern\""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "             value\u003d\"Local variable name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"ClassTypeParameterName\"\u003e"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"format\" value\u003d\"(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)\"/\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmessage key\u003d\"name.invalidPattern\""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "             value\u003d\"Class type name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"MethodTypeParameterName\"\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"format\" value\u003d\"(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)\"/\u003e"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmessage key\u003d\"name.invalidPattern\""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "             value\u003d\"Method type name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"InterfaceTypeParameterName\"\u003e"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"format\" value\u003d\"(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)\"/\u003e"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmessage key\u003d\"name.invalidPattern\""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "             value\u003d\"Interface type name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"NoFinalizer\"/\u003e"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"GenericWhitespace\"\u003e"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmessage key\u003d\"ws.followed\""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "             value\u003d\"GenericWhitespace \u0027\u0027{0}\u0027\u0027 is followed by whitespace.\"/\u003e"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "             \u003cmessage key\u003d\"ws.preceded\""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "             value\u003d\"GenericWhitespace \u0027\u0027{0}\u0027\u0027 is preceded with whitespace.\"/\u003e"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "             \u003cmessage key\u003d\"ws.illegalFollow\""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "             value\u003d\"GenericWhitespace \u0027\u0027{0}\u0027\u0027 should followed by whitespace.\"/\u003e"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "             \u003cmessage key\u003d\"ws.notPreceded\""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "             value\u003d\"GenericWhitespace \u0027\u0027{0}\u0027\u0027 is not preceded with whitespace.\"/\u003e"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"Indentation\"\u003e"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "            \u003cproperty name\u003d\"basicOffset\" value\u003d\"2\"/\u003e"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"braceAdjustment\" value\u003d\"0\"/\u003e"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "            \u003cproperty name\u003d\"caseIndent\" value\u003d\"2\"/\u003e"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"throwsIndent\" value\u003d\"4\"/\u003e"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"lineWrappingIndentation\" value\u003d\"4\"/\u003e"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "            \u003cproperty name\u003d\"arrayInitIndent\" value\u003d\"2\"/\u003e"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"AbbreviationAsWordInName\"\u003e"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"ignoreFinal\" value\u003d\"false\"/\u003e"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"allowedAbbreviationLength\" value\u003d\"1\"/\u003e"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"OverloadMethodsDeclarationOrder\"/\u003e"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"VariableDeclarationUsageDistance\"/\u003e"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        \u003cmodule name\u003d\"CustomImportOrder\"\u003e"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "            \u003cproperty name\u003d\"sortImportsInGroupAlphabetically\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "            \u003cproperty name\u003d\"separateLineBetweenGroups\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "            \u003cproperty name\u003d\"customImportOrderRules\" value\u003d\"STATIC###THIRD_PARTY_PACKAGE\"/\u003e"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"MethodParamPad\"/\u003e"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"NoWhitespaceBefore\"\u003e"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "          \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, SEMI, POST_INC, POST_DEC, DOT, ELLIPSIS, METHOD_REF\"/\u003e"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"ParenPad\"/\u003e"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"OperatorWrap\"\u003e"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"option\" value\u003d\"NL\"/\u003e"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "            \u003cproperty name\u003d\"tokens\" value\u003d\"BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR, LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR, METHOD_REF \"/\u003e"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"AnnotationLocation\"\u003e"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"id\" value\u003d\"AnnotationLocationMostCases\"/\u003e"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "            \u003cproperty name\u003d\"tokens\" value\u003d\"CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF\"/\u003e"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"AnnotationLocation\"\u003e"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"id\" value\u003d\"AnnotationLocationVariables\"/\u003e"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"tokens\" value\u003d\"VARIABLE_DEF\"/\u003e"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"allowSamelineMultipleAnnotations\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"NonEmptyAtclauseDescription\"/\u003e"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"JavadocTagContinuationIndentation\"/\u003e"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"SummaryJavadoc\"\u003e"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "            \u003cproperty name\u003d\"forbiddenSummaryFragments\" value\u003d\"^@return the *|^This method returns |^A [{]@code [a-zA-Z0-9]+[}]( is a )\"/\u003e"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"JavadocParagraph\"/\u003e"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"AtclauseOrder\"\u003e"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"tagOrder\" value\u003d\"@param, @return, @throws, @deprecated\"/\u003e"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "            \u003cproperty name\u003d\"target\" value\u003d\"CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF\"/\u003e"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"JavadocMethod\"\u003e"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"scope\" value\u003d\"public\"/\u003e"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"allowMissingThrowsTags\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"allowMissingReturnTag\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"minLineCount\" value\u003d\"2\"/\u003e"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"allowedAnnotations\" value\u003d\"Override, Test\"/\u003e"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "            \u003cproperty name\u003d\"allowThrowsTagsForSubclasses\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"MethodName\"\u003e"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-z0-9][a-zA-Z0-9_]*$\"/\u003e"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmessage key\u003d\"name.invalidPattern\""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "             value\u003d\"Method name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"SingleLineJavadoc\"\u003e"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"ignoreInlineTags\" value\u003d\"false\"/\u003e"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"EmptyCatchBlock\"\u003e"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"exceptionVariableName\" value\u003d\"expected\"/\u003e"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"CommentsIndentation\"/\u003e"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/module\u003e"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/module\u003e"
      }
    ],
    "authorContributionMap": {
      "youaremysky99": 27,
      "-": 210
    }
  },
  {
    "path": "data/storage.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "{\"containers\":[{\"description\":\"123 \",\"tokens\":[],\"type\":\"todo\",\"isDone\":\"true\",\"commandText\":\"todo 123\"},{\"description\":\"return book \",\"tokens\":[{\"value\":\"2020-12-30\"}],\"type\":\"deadline\",\"isDone\":\"true\",\"commandText\":\"deadline return book \\/by 2020-12-30\"},{\"description\":\"reading books \\/at here \",\"tokens\":[],\"type\":\"event\",\"isDone\":\"false\",\"commandText\":\"event reading books \\/at here\"}]}"
      }
    ],
    "authorContributionMap": {
      "youaremysky99": 1
    }
  },
  {
    "path": "src/main/java/CommandLineInterpreter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.dukeException.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.DukeResponse;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "public class CommandLineInterpreter {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tstatic private final String separation \u003d \"_________________________________________________\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tstatic private final String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\t+ \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\t+ \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\t+ \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\t+ \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tstatic public void printGreeting() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tSystem.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tstatic public void printUsage() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tSystem.out.println(\"Usage of DUKE: \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tSystem.out.println(\"1. todo ... \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tSystem.out.println(\"2. deadline ... /by yyyy-mm-dd\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tSystem.out.println(\"3. event ... /at .....\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tSystem.out.println(separation);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tstatic public void printMessage(String message) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tSystem.out.println(separation);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tSystem.out.println(message);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tSystem.out.println(separation);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tstatic public void printList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tSystem.out.println(separation);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tSystem.out.println(\"List of items: \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tfor (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tSystem.out.println((i + 1) + \". \" + list.get(i));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tSystem.out.println(separation);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tstatic public void printAdd(Task task, int numberOfCurrentTasks) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tSystem.out.println(separation);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tSystem.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tSystem.out.println(task);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tSystem.out.println(\"Now you have \" + numberOfCurrentTasks + \" in the list!\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tSystem.out.println(separation);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tstatic public void printDelete(Task task, int numberOfCurrentTasks) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tSystem.out.println(separation);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tSystem.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tSystem.out.println(task);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tSystem.out.println(\"Now you have \" + numberOfCurrentTasks + \" in the list!\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tSystem.out.println(separation);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tstatic public void printDoneList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tSystem.out.println(separation);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tSystem.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tfor (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tSystem.out.println(\"  \" + list.get(i));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tSystem.out.println(separation);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tstatic public void printException(DukeException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tSystem.out.println(separation);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tSystem.out.println(e.getMessage());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tSystem.out.println(separation);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tstatic public void printFind(List\u003cTask\u003e tasks, List\u003cInteger\u003e indexes) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tSystem.out.println(separation);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tSystem.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tfor (Integer idx: indexes) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tSystem.out.println((idx + 1) + \". \" + tasks.get(idx));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tSystem.out.println(separation);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youaremysky99": 80
    }
  },
  {
    "path": "src/main/java/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tBYE, "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tDONE,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tADD, "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tLIST,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tDELETE,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tUNDEFINED"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youaremysky99": 10
    }
  },
  {
    "path": "src/main/java/Commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.Interpreter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.dukeException.DukeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.DukeResponse;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tprivate Task task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic AddCommand(String commandText, Task task) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tsuper(commandText);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tthis.task \u003d task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t@Override "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic DukeResponse execute(Storage storage, TaskList taskList) throws DukeParseException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\ttaskList.addAction(this.task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn Interpreter.printAdd(this.task, taskList.getNum());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t@Override "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youaremysky99": 27
    }
  },
  {
    "path": "src/main/java/Commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.Interpreter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.DukeResponse;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tstatic final String goodByeMessage \u003d \"Au revoir!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic ByeCommand(String commandText) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tsuper(commandText);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic DukeResponse execute(Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tDukeResponse result \u003d Interpreter.printMessage(goodByeMessage);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tstorage.saveData(taskList);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn result;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youaremysky99": 25
    }
  },
  {
    "path": "src/main/java/Commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.dukeException.DukeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.DukeResponse;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tString commandText;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic Command(String commandText) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tthis.commandText \u003d commandText;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t} "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic abstract DukeResponse execute(Storage storage, TaskList taskList) throws DukeParseException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic abstract boolean isExit();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youaremysky99": 18
    }
  },
  {
    "path": "src/main/java/Commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.dukeException.DukeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.Interpreter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.DukeResponse;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic DeleteCommand(String commandText) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tsuper(commandText);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tprivate int getDeleteCommand(String command) throws DukeParseException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tString[] tokens \u003d command.split(\" \");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tif (tokens.length !\u003d 2) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tthrow new DukeParseException(\"Delete command requires 2 tokens!\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tint index \u003d Integer.parseInt(tokens[1]);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\treturn index;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t} catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tthrow new DukeParseException(tokens[1] + \" is not an integer!\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic DukeResponse execute(Storage storage, TaskList taskList) throws DukeParseException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tint index \u003d getDeleteCommand(commandText);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tint realIndex \u003d index - 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tDukeResponse result \u003d Interpreter.printDelete(taskList.getTask(realIndex), taskList.getNum());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\ttaskList.deleteAction(realIndex);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn result;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t@Override "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic boolean isExit() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youaremysky99": 40
    }
  },
  {
    "path": "src/main/java/Commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.dukeException.DukeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.Interpreter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.DukeResponse;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic DoneCommand(String commandText) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tsuper(commandText);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tstatic List\u003cInteger\u003e getDoneCommand(String command) throws DukeParseException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tString[] tokens \u003d command.split(\" \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tif (tokens.length \u003c 1) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tthrow new DukeParseException(\"Done command needs more than 1 tokens\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tList result \u003d new ArrayList\u003cInteger\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tfor (int i \u003d 1; i \u003c tokens.length; i++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\ttry {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\tint index \u003d Integer.parseInt(tokens[i]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\tresult.add(index - 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t} catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\tthrow new DukeParseException(tokens[i] + \" is not a valid integer\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn result;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic DukeResponse execute(Storage storage, TaskList taskList) throws DukeParseException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tList\u003cInteger\u003e indexes \u003d getDoneCommand(super.commandText);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\ttaskList.markAsDone(indexes);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn Interpreter.printDoneList(taskList.getSubset(indexes));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic boolean isExit() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youaremysky99": 44
    }
  },
  {
    "path": "src/main/java/Commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.dukeException.DukeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.Interpreter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.DukeResponse;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tprivate String keyWord;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic FindCommand(String commandText, String keyWord) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tsuper(commandText);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tthis.keyWord \u003d keyWord;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t@Override "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic DukeResponse execute(Storage storage, TaskList taskList) throws DukeParseException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tList\u003cInteger\u003e candidates \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tList\u003cTask\u003e tasks \u003d taskList.getList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tfor (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tif (tasks.get(i).description.contains(this.keyWord)) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\tcandidates.add(i);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn Interpreter.printFind(taskList.getList(), candidates);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t@Override "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic boolean isExit() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youaremysky99": 36
    }
  },
  {
    "path": "src/main/java/Commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.Interpreter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.DukeResponse;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic ListCommand(String commandText) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tsuper(commandText);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic DukeResponse execute(Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn Interpreter.printList(taskList.getList());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn false;\t"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youaremysky99": 22
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youaremysky99": 51
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.dukeException.DukeParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.Interpreter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.TaskList;\t"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.DialogBox;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import javafx.scene.image.ImageView;\t"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.DukeResponse;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tstatic final String separation \u003d \"_________________________________________________\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tstatic final String greetingMessage \u003d \"Salue! Je suis Duke. \\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tstatic final String pathToData \u003d \"data/storage.txt\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tprivate Storage storage;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tprivate TaskList taskList;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tprivate Parser parser;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tprivate ScrollPane scrollPane;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic Duke() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tstorage \u003d new Storage(pathToData);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\ttaskList \u003d new TaskList(storage.getData());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tparser \u003d new Parser();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t * Iteration 2:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tprivate void handleUserInput() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tString userCommand \u003d userInput.getText();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t    Label userText \u003d new Label(userCommand);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t    Label dukeText \u003d new Label(getResponse(userCommand));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t    dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t            DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t            DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t    );"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t    if (userCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t    \tPlatform.exit();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t    \tSystem.exit(0);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t    userInput.clear();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tprivate void printGreeting() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tInterpreter.printGreeting();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tInterpreter.printMessage(greetingMessage);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tInterpreter.printUsage();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tString text \u003d Interpreter.printGreeting().getMessage() + \"\\n\" "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\t\t\t+ Interpreter.printMessage(greetingMessage).getMessage() +  \"\\n\" "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\t\t\t+ Interpreter.printUsage().getMessage() +  \"\\n\"; "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tLabel dukeText \u003d new Label(text);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tdialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t            DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t    );"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t * Replace this stub with your completed method."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tprivate String getResponse(String userCommand) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t    try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t    \tCommand current \u003d parser.parse(userCommand);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tDukeResponse result \u003d current.execute(storage, taskList);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\treturn result.getMessage();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t    } catch (DukeParseException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t    \treturn e.getMessage();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t    } "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic void run() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tInterpreter.printGreeting();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tInterpreter.printMessage(greetingMessage);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tInterpreter.printUsage();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tScanner cin \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\twhile (true) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tString commandText \u003d cin.nextLine();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\ttry {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\tCommand current \u003d parser.parse(commandText);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\tcurrent.execute(storage, taskList);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\tif (current.isExit()) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\t\treturn;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t} catch (DukeParseException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\tInterpreter.printException(e);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "         "
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "     "
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "     "
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        // more code to be added here later"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        "
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        "
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        "
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        "
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this. "
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        "
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        "
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        "
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        "
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        "
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        printGreeting();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t    sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t        handleUserInput();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t    });"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t    userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t        handleUserInput();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t    });"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t    stage.setOnCloseRequest(e -\u003e {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t    \tstorage.saveData(taskList);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "       \t    Platform.exit();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        });"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t    dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t * Iteration 1:"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t * @param text String containing text to add"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t*/"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tprivate Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t    Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t    textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t    return textToAdd;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic static void main(String[] args) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tnew Duke().run();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youaremysky99": 208,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeResponse.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "public class DukeResponse {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tprivate String message; "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic DukeResponse(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tthis.message \u003d message;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic String getMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn this.message;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youaremysky99": 13
    }
  },
  {
    "path": "src/main/java/Exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "package duke.dukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tprivate String message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    \treturn this.message;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youaremysky99": 14
    }
  },
  {
    "path": "src/main/java/Exception/DukeParseException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "package duke.dukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "public class DukeParseException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic DukeParseException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tsuper(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youaremysky99": 7
    }
  },
  {
    "path": "src/main/java/Interpreter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.dukeException.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.DukeResponse;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "public class Interpreter {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tstatic private final String separation \u003d \"_________________________________________________\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tstatic private final String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\t+ \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\t+ \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\t+ \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\t+ \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tstatic public DukeResponse printGreeting() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn new DukeResponse(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tstatic public DukeResponse printUsage() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tStringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tsb.append(\"Usage of DUKE: \\n\")"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t  .append(\"1. todo ... \")  "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t  .append(\"\\n\")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t  .append(\"2. deadline ... /by yyyy-mm-dd\")"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t  .append(\"\\n\")"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t  .append(\"3. event ... /at .....\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t  .append(\"\\n\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn new DukeResponse(sb.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tstatic public DukeResponse printMessage(String message) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn new DukeResponse(message);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tstatic public DukeResponse printList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tStringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tsb.append(\"List of items: \").append(\"\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tfor (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tsb.append(Integer.toString(i + 1))"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t  .append(\". \")"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t  .append(list.get(i).toString())"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t  .append(\"\\n\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn new DukeResponse(sb.toString());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tstatic public DukeResponse printAdd(Task task, int numberOfCurrentTasks) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tStringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tsb.append(\"Got it. I\u0027ve added this task: \").append(\"\\n\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tsb.append(task.toString())"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t  .append(\"Now you have \")"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t  .append(Integer.toString(numberOfCurrentTasks))"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t  .append(\" in the list!\")"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t  .append(\"\\n\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn new DukeResponse(sb.toString());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tstatic public DukeResponse printDelete(Task task, int numberOfCurrentTasks) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tStringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tsb.append(\"Noted. I\u0027ve removed this task:\").append(\"\\n\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tsb.append(task.toString()).append(\"\\n\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tsb.append(\"Now you have \")"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t  .append(Integer.toString(numberOfCurrentTasks))"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t  .append(\" in the list!\")"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t  .append(\"\\n\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn new DukeResponse(sb.toString());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tstatic public DukeResponse printDoneList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tStringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tsb.append(\"Nice! I\u0027ve marked this task as done:\").append(\"\\n\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tfor (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tsb.append(\"   \").append(list.get(i).toString()).append(\"\\n\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn new DukeResponse(sb.toString());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tstatic public DukeResponse printException(DukeException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn new DukeResponse(e.getMessage());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tstatic public DukeResponse printFind(List\u003cTask\u003e tasks, List\u003cInteger\u003e indexes) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tStringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tsb.append(\"Here are the matching tasks in your list: \\n\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tfor (Integer idx: indexes) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tsb.append(Integer.toString(idx + 1))"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t  .append(\". \")"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t  .append(tasks.get(idx))"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t  .append(\"\\n\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn new DukeResponse(sb.toString());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youaremysky99": 94
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youaremysky99": 10
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.dukeException.DukeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.commands.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic Command parse(String commandText) throws DukeParseException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tString[] tokens \u003d commandText.split(\" \");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tif (tokens.length \u003c 1) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tthrow new DukeParseException(\"A command requires at least 1 token!\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tif (tokens[0].equals(\"bye\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tif (tokens.length \u003e 1) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\tthrow new DukeParseException(\"If you want to say good-bye, please type bye\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t} else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\treturn new ByeCommand(commandText);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tif (tokens[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tif (tokens.length \u003c 1) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\tthrow new DukeParseException(\"Done command requires numbers!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t} else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\treturn new DoneCommand(commandText);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tif (tokens[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tif (tokens.length \u003c 1) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\tthrow new DukeParseException(\"Delete command requires numbers!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t} else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\treturn new DeleteCommand(commandText);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tif (tokens[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tif (tokens.length \u003e 1) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\tthrow new DukeParseException(\"If you want to list things, please type bye\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t} else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\treturn new ListCommand(commandText);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tif (tokens[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tint positionOfSeparator \u003d -1;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tfor (int i \u003d 0; i \u003c tokens.length; i++) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\tif (tokens[i].equals(Event.separator)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\t\tpositionOfSeparator \u003d i;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tif (positionOfSeparator \u003d\u003d -1) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\tthrow new DukeParseException(\"We need a separator \" + Event.separator);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tTask task \u003d new Event(commandText);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\treturn new AddCommand(commandText, task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tif (tokens[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tint positionOfSeparator \u003d -1;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tfor (int i \u003d 0; i \u003c tokens.length; i++) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\tif (tokens[i].equals(Deadline.separator)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\t\tpositionOfSeparator \u003d i;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tif (positionOfSeparator \u003d\u003d -1) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\tthrow new DukeParseException(\"We need a separator \" + Deadline.separator);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tTask task \u003d new Deadline(commandText);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\treturn new AddCommand(commandText, task);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tif (tokens[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tif (tokens.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\tthrow new DukeParseException(\"Todo need description!\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tTask task \u003d new ToDo(commandText);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\treturn new AddCommand(commandText, task);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tif (tokens[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tif (tokens.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\tthrow new DukeParseException(\"Find requires a keyword\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tif (tokens.length \u003e 2) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\tthrow new DukeParseException(\"Now I only support find a single keyword\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\treturn new FindCommand(commandText, tokens[1]);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tthrow new DukeParseException(tokens[0] + \" is not a valid command!\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youaremysky99": 95
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import org.json.simple.parser.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import org.json.simple.parser.JSONParser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tprivate String pathToData;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic Storage(String pathToData) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tthis.pathToData \u003d pathToData;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic JSONObject encodeContainers(List\u003cTask\u003e containers) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tJSONObject result \u003d new JSONObject();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tJSONArray parsedContainers \u003d new JSONArray();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tfor (Task current: containers) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tparsedContainers.add(current.parseToJson());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tresult.put(\"containers\", parsedContainers);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn result;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic List\u003cTask\u003e getData() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tFile file \u003d new File(pathToData);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tScanner scan \u003d new Scanner(file);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tStringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\twhile (scan.hasNextLine()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\tsb.append(scan.nextLine());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tscan.close();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tJSONParser parser \u003d new JSONParser();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t//System.out.println(sb.toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tJSONObject result \u003d (JSONObject) parser.parse(sb.toString());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tJSONArray array \u003d (JSONArray) result.get(\"containers\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tList containers \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tfor (int i \u003d 0; i \u003c array.size(); i++) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\tJSONObject record \u003d (JSONObject) array.get(i);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\tString type \u003d (String) record.get(\"type\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\ttry {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\t\tswitch (type) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\t\tcase \"todo\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\t\t\tcontainers.add(new ToDo(record));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\t\tcase \"deadline\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\t\t\tcontainers.add(new Deadline(record));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\t\tcase \"event\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\t\t\tcontainers.add(new Event(record));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\t\t}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\t} catch (Exception e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\t\tSystem.out.println(\"Cannot parse the \" + i + \"record\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\treturn containers;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t} catch (IOException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tSystem.out.println(\"Cannot read file\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\treturn new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t} catch (ParseException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tSystem.out.println(\"Cannot parse json string\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\treturn new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic void saveData(TaskList storage) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tJSONObject data \u003d this.encodeContainers(storage.getList());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tString str \u003d data.toString();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tBufferedWriter writer \u003d new BufferedWriter(new FileWriter(pathToData, false));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t    writer.append(str);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t    writer.close();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t} catch (IOException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tSystem.out.println(\"Cannot save data\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youaremysky99": 90
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import java.util.ArrayList;\t"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import org.json.simple.parser.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import org.json.simple.parser.JSONParser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.dukeException.DukeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": " * Abstract class Task, provide sharing codes for all task such as"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": " * event, deadline, todo. "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tprotected String commandText;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tboolean isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tprotected List\u003cString\u003e remainingTokens \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic Task(String commandText) throws DukeParseException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tthis.commandText \u003d commandText;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t//Parse this task description"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tString[] tokens \u003d commandText.split(\" \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tStringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tremainingTokens \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tint start;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tboolean okay \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tfor (start \u003d 1; start \u003c tokens.length; start++) { "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tif (tokens[start].equals(this.getSeparator())) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\tthis.description \u003d builder.toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\tokay \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tif (start !\u003d 1) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\tbuilder.append(\" \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tbuilder.append(tokens[start]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tif (!okay) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tthis.description \u003d builder.toString();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tremainingTokens \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tfor (start \u003d start + 1; start \u003c tokens.length; start++) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tremainingTokens.add(tokens[start]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}\t"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic Task(JSONObject data) throws DukeParseException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tthis.description \u003d (String) data.get(\"description\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tthis.commandText \u003d (String) data.get(\"commandText\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tthis.isDone \u003d ((String) data.get(\"isDone\")).equals(\"true\") ? true : false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tJSONArray tokensJson \u003d (JSONArray) data.get(\"tokens\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tremainingTokens \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tfor (int i \u003d 0; i \u003c tokensJson.size(); i++) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\tJSONObject record \u003d (JSONObject) tokensJson.get(i);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\tremainingTokens.add((String) record.get(\"value\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t} catch (Exception e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tthrow new DukeParseException(\"Fail to parse json to a task at task class\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic String getStatusIcon() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn (isDone ? \"[\\u2713] \" : \"[\\u2718] \"); //return tick or X symbols"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic void markAsDone() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tthis.isDone \u003d true;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic abstract String getSignature();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic abstract String getSeparator();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic JSONObject parseToJson() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tJSONObject result \u003d new JSONObject();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tresult.put(\"type\", this.getSignature());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tresult.put(\"description\", this.description);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tresult.put(\"commandText\", this.commandText);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tresult.put(\"isDone\", this.isDone ? \"true\" : \"false\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tJSONArray tokens \u003d new JSONArray();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tfor (String token: this.remainingTokens) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tJSONObject element \u003d new JSONObject();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\telement.put(\"value\", token);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\ttokens.add(element);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tresult.put(\"tokens\", tokens);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn result;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tprotected List\u003cString\u003e getListRemainingTokens() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn this.remainingTokens;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tprotected String getRemainingTokens() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tStringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tfor (String token: remainingTokens) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tbuilder.append(\" \").append(token);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn builder.toString();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t@Override "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn (this.getStatusIcon() + this.description); "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youaremysky99": 111
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import org.json.simple.parser.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import org.json.simple.parser.JSONParser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tprivate List\u003cTask\u003e containers;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tthis.containers \u003d new ArrayList\u003cTask\u003e ();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic TaskList(List\u003cTask\u003e containers) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tthis.containers \u003d containers;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic void addAction(Task action) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tcontainers.add(action);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic void deleteAction(int position) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tcontainers.remove(position);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn this.containers;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t} "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic Task getTask(int index) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn this.containers.get(index);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic int getNum() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn containers.size();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic void markAsDone(List\u003cInteger\u003e needy) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tfor (Integer index: needy) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tthis.containers.get(index).markAsDone();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic List\u003cTask\u003e getSubset(List\u003cInteger\u003e needy) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tList result \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tfor (Integer index: needy) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tresult.add(this.containers.get(index));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn result;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youaremysky99": 56
    }
  },
  {
    "path": "src/main/java/Tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.dukeException.DukeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import java.time.Month;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tprivate LocalDate date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tprivate String signature \u003d \"deadline\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic static final String separator \u003d \"/by\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tprivate void parseTime() throws DukeParseException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tList\u003cString\u003e remainingTokens \u003d super.getListRemainingTokens();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tif (remainingTokens.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\tthrow new DukeParseException(\"Events need date and time!\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tif (remainingTokens.size() \u003e 1) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t\tthrow new DukeParseException(\"Events requires only one string\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tthis.date \u003d LocalDate.parse(remainingTokens.get(0));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t} catch (Exception e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t\tthrow new DukeParseException(\"Events time format error\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic Deadline(String commandText) throws DukeParseException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tsuper(commandText);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tparseTime();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic Deadline(JSONObject data) throws DukeParseException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tsuper(data);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tparseTime();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic String getSignature() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn this.signature;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic String getSeparator() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn this.separator;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tStringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tsb.append(\"  [D]\")"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t  .append(super.getStatusIcon())"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t  .append(\" \")"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t  .append(super.description)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t  .append(\" (by \")"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t  .append(this.date.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL)))"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t  .append(\")\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn sb.toString();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youaremysky99": 66
    }
  },
  {
    "path": "src/main/java/Tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.dukeException.DukeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": " * Consist of event description and period of time in which the event happens."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tprivate LocalDate date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tprivate String signature \u003d \"event\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic static final String separator \u003d \"/at\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic Event(String commandText) throws DukeParseException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tsuper(commandText);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic Event(JSONObject data) throws DukeParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tsuper(data);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic String getSignature() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn this.signature;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic String getSeparator() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn Event.separator;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tStringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tsb.append(\"  [E]\")"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t  .append(super.getStatusIcon())"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t  .append(super.description)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t  .append(\" (at\")"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t  .append(super.getRemainingTokens())"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t  .append(\")\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn sb.toString();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youaremysky99": 47
    }
  },
  {
    "path": "src/main/java/Tasks/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tTODO,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tEVENT,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tDEADLINE,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tUNDEFINED"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youaremysky99": 8
    }
  },
  {
    "path": "src/main/java/Tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import org.json.simple.JSONObject;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import org.json.simple.JSONArray;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.dukeException.DukeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tprivate String signature \u003d \"todo\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tprivate String separator \u003d \"\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic ToDo(String commandText) throws DukeParseException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tsuper(commandText);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic ToDo(JSONObject data) throws DukeParseException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tsuper(data);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t} "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic String getSignature() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn this.signature;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic String getSeparator() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn this.separator;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tStringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tsb.append(\"  [T]\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t  .append(super.getStatusIcon())"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\t  .append(super.description);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\treturn sb.toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youaremysky99": 36
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "import duke.dukeException.DukeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "public class TaskTest { "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\tpublic void testParsing() throws DukeParseException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tTask task \u003d new Deadline(\"deadline doing something /by 1999-12-30\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t\tassertEquals(\"doing something\", task.description, \"must parse description correctly\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youaremysky99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youaremysky99": 12
    }
  }
]
