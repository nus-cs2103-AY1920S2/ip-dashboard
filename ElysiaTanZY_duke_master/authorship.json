[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "test {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "ElysiaTanZY": 9
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "[T][X] borrow book"
      }
    ],
    "authorContributionMap": {
      "ElysiaTanZY": 1
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": " * This type of tasks need to be done by a certain deadline."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    private LocalTime timing;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param taskType Type of task: Deadline."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param date Date of the deadline of task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param timing Timing of the deadline of task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public Deadline(String description, String taskType, LocalDate date, LocalTime timing) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        super(description, taskType);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Class constructor to be used when loading data from hard disk during start-up."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param taskType Type of task: Deadline."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param date Date of deadline of task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param timing Timing of deadline of task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param isDone Status of task, whether done or not."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public Deadline(String description, String taskType, LocalDate date, LocalTime timing, boolean isDone) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        super(description, taskType, isDone);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Returns the date of the deadline of the task in the correct format."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return Date of deadline of task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Returns the timing of the deadline of the task in the correct format."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return Timing of deadline of task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public String getTiming() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        return timing.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Returns all information about the task formatted in a single string."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return Information about deadline task."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public String obtainTaskInfo() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        String taskInfo \u003d super.obtainTaskInfo();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        return taskInfo + \" by \" + this.getDate() + \" \" + this.getTiming();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Returns all information about the deadline task formatted for storage in file."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return Information about deadline task."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public String formatForFile() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        String taskInfo \u003d super.formatForFile();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        return taskInfo + \"|\" + this.getDate() + \"|\" + this.getTiming();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ElysiaTanZY": 79
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param text Text to be displayed."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param img Image to be displayed."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Returns the user\u0027s dialog box to be printed on GUI."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param text Text of the user."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param img User\u0027s profile picture."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return User\u0027s dialog box."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Returns duke\u0027s dialog box to be printed on GUI."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param text Text of Duke."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param img Duke\u0027s profile picture."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return Duke\u0027s dialog box."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ElysiaTanZY": 79
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": " * Duke is a Personal Assistant Chatbot that helps a person keep track of various types of tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": " * It can add/delete/list tasks, as well as, mark tasks as done when completed. Upon exit, the tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": " * will be saved to a data file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    private GuiUi ui;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        ui \u003d new GuiUi();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        storage \u003d new Storage(\"data/duke.txt\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Loads the tasks saved during the previous session into a new TaskList upon start-up."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return Error message."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public String prepareList() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            tasks \u003d new TaskList(storage.loadFile());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        } catch (FileNotFoundException exception) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            File file \u003d new File(\"data/duke.txt\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                response \u003d response.concat(e.getMessage());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Executes user commands and returns a response required depending on user command."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param input User command."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return Response to be printed on GUI depending on user command."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public String run(String input) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        if (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            Parser parser \u003d new Parser(input);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            String response \u003d \"\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            switch (parser.getIdentifier()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                response \u003d ui.getList(tasks);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                    int completedTask \u003d parser.getTaskIndex(tasks.getSize());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                    tasks.getTask(completedTask - 1).setDone();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                    response \u003d ui.getDoneSuccess(tasks, completedTask - 1);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                    response \u003d ui.getExceptionMessage(e);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                    int removeTask \u003d parser.getTaskIndex(tasks.getSize());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                    response \u003d ui.getDeleteSuccess(tasks, removeTask - 1);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                    tasks.deleteTask(removeTask - 1);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                    response \u003d response.concat(ui.getStatusUpdate(tasks));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                    response \u003d ui.getExceptionMessage(e);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                    response \u003d this.findTarget(parser);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                } catch (DukeException exception) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                    response \u003d ui.getExceptionMessage(exception);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                    this.addTask(parser);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                    response \u003d ui.getAddSuccess(tasks);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                    response \u003d response.concat(ui.getStatusUpdate(tasks));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                } catch (DukeException exception) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                    response \u003d ui.getExceptionMessage(exception);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                storage.updateFile(tasks);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            } catch (IOException exception) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                response \u003d ui.getUpdateError(exception);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        return ui.getExitGreeting();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Attempts to add a task to the list of saved tasks."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param parser Parser to interpret user input command."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @throws DukeException Exception thrown when empty description is found,"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * empty date/timing for event/deadline, incomprehensible command."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public void addTask(Parser parser) throws DukeException {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        if (parser.getIdentifier().equals(\"todo\")) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            String toDo \u003d parser.getDescription();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            tasks.addTask(new ToDo(toDo, \"T\", false));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        } else if (parser.getIdentifier().equals(\"event\") || parser.getIdentifier().equals(\"deadline\")) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            String description \u003d parser.getDescription();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            LocalDate date \u003d parser.getDate();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            LocalTime timing \u003d parser.getTime();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            if (parser.getIdentifier().equals(\"event\")) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                tasks.addTask(new Event(description, \"E\", date, timing, false));"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                tasks.addTask(new Deadline(description, \"D\", date, timing, false));"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            throw new DukeException(\"\\u2639\" + \" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Returns list of tasks that contains keyword."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param parser Parser to interpret user input command."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return List of tasks that contains keyword."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @throws DukeException Thrown when description and hence keyword is empty."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public String findTarget(Parser parser) throws DukeException {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        String keyword \u003d parser.getDescription();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        ArrayList\u003cString\u003e targets \u003d tasks.findTargets(keyword);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        return ui.getTargets(targets);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Returns Duke\u0027s response to a given user command."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param input User command."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return Duke\u0027s response to the command."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        return this.run(input);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ElysiaTanZY": 193,
      "-": 1
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": " * This class represents exceptions specific to Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param message Error message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ElysiaTanZY": 14
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": " * This type of tasks have a specific start and end timing."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    private LocalTime timing;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param taskType Type of task: Event."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param date Date of event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param timing Timing of event."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public Event(String description, String taskType, LocalDate date, LocalTime timing) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        super(description, taskType);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Class constructor to be used when loading data from hard disk during start-up."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param taskType Type of task: Event."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param date Date of event."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param timing Timing of event."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param isDone Status of event, whether done or not."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public Event(String description, String taskType, LocalDate date, LocalTime timing, boolean isDone) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        super(description, taskType, isDone);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Returns the date of the event in the correct format."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return Date of event."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Returns the timing of the event in the correct format."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return Timing of event."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public String getTiming() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        return timing.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Returns all information about event formatted in a single string."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return Information about event."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public String obtainTaskInfo() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        String taskInfo \u003d super.obtainTaskInfo();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        return taskInfo + \" at \" + this.getDate() + \" \" + this.getTiming();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Returns all information about the event formatted for storage in file."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return Information about event."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public String formatForFile() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        String taskInfo \u003d super.formatForFile();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        return taskInfo + \"|\" + this.getDate() + \"|\" + this.getTiming();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ElysiaTanZY": 79
    }
  },
  {
    "path": "src/main/java/GuiUi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": " * Handles the interactions with user through GUI."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "public class GuiUi {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Returns greeting to be printed on GUI upon start-up."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return Greeting to be printed."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public String getGreeting() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        return \"Hello! I\u0027m Duke\\nWhat can I do for you\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Returns greeting to be printed on GUI upon shut-down."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return Greeting to be printed."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public String getExitGreeting() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Returns the list of tasks formatted into a single string for printing on GUI."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return List of tasks properly formatted for printing."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public String getList(TaskList tasks) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        String response \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        for (int i \u003d 1; i \u003c tasks.getSize() + 1; i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            response \u003d response.concat(i + \".\" + tasks.getTask(i - 1).obtainTaskInfo() + \"\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Returns the success message once a task is successfully marked as done."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param completedTaskIndex Task that was marked completed."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return Success message once a task is successfully marked as done."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public String getDoneSuccess(TaskList tasks, int completedTaskIndex) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        String response \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        response \u003d response.concat(\"  \" + tasks.getTask(completedTaskIndex).obtainTaskInfo() + \"\\n\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Returns exception formatted as a string when file update failed."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param exception Exception thrown."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return Exception message."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public String getUpdateError(IOException exception) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        return \"Something went wrong: \" + exception.getMessage() + \"\\n\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Returns success message when a task is successfully deleted from list."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param removeTaskIndex Index of task deleted."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return Success message."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public String getDeleteSuccess(TaskList tasks, int removeTaskIndex) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        String response \u003d \"Noted. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        response \u003d response.concat(\"  \" + tasks.getTask(removeTaskIndex).obtainTaskInfo() + \"\\n\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Returns the number of tasks in the list formatted in a string for printing on GUI."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return Status update message."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public String getStatusUpdate(TaskList tasks) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        if (tasks.getSize() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            return \"Now you have \" + tasks.getSize() + \" task in the list.\\n\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            return \"Now you have \" + tasks.getSize() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Returns exception message when DukeException is thrown."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param exception Exception thrown."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return Exception message."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public String getExceptionMessage(DukeException exception) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        return exception.getMessage() + \"\\n\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Returns success message when a task is successfully added to the list."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return Success message."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public String getAddSuccess(TaskList tasks) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        String response \u003d \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        response \u003d response.concat(\"  \" + tasks.getTask(tasks.getSize() - 1).obtainTaskInfo() + \"\\n\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Returns the list of tasks that contains keyword formatted in a string for printing on GUI."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param targets List of tasks that matches keyword."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return List of tasks that matches keyword."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public String getTargets(ArrayList\u003cString\u003e targets) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        String response \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        for (int i \u003d 1; i \u003c targets.size() + 1; i++) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            response \u003d response.concat(i + \".\" + targets.get(i - 1) + \"\\n\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ElysiaTanZY": 131
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ElysiaTanZY": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Starter of GUI."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param stage Gui\u0027s stage."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().startUp();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ElysiaTanZY": 35
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    private GuiUi ui \u003d new GuiUi();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"images/DaUser.jpg\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    private Image dukeImage  \u003d new Image(this.getClass().getResourceAsStream(\"images/DaDuke.jpg\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * and then appends them to the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Prints the start-up greeting of Duke, including any error faced during start-up."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public void startUp() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        String output \u003d ui.getGreeting();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        String error \u003d duke.prepareList();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        if (!error.isEmpty()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            output \u003d output.concat(error);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                DialogBox.getUserDialog(output, dukeImage));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ElysiaTanZY": 67
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": " * Deals with making sense of the user command."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    private String[] inputs;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param input User command to be interpreted."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public Parser(String input) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        this.inputs \u003d input.split(\" \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Returns identifier of user input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return Identifier of user input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public String getIdentifier() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        return inputs[0];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Return index of task to be deleted/marked as done."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param size Number of tasks in the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return Index of task to be deleted/marked as done."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public int getTaskIndex(int size) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        if (Integer.valueOf(inputs[1]) \u003e size) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            throw new DukeException(\"\\u2639\" + \" OOPS!!! I\u0027m sorry, but you have entered an invalid index.\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        return Integer.valueOf(inputs[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Return description of task to be added."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return Description of task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @throws DukeException Thrown when empty description is found."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public String getDescription() throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        if (inputs.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            throw new DukeException(\"\\u2639\" + \" OOPS!!! The description of a \""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                    + inputs[0] + \" cannot be empty\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        String description \u003d inputs[1];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        if (inputs[0].equals(\"event\") || inputs[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            int j \u003d 2;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            while (j !\u003d inputs.length \u0026\u0026 inputs[j].charAt(0) !\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                description \u003d description.concat(\" \" + inputs[j]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                j++;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            for (int i \u003d 2; i \u003c inputs.length; i++) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                description \u003d description.concat(\" \" + inputs[i]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Returns the index of the date in a \u0027deadline\u0027 or \u0027event\u0027 user command."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return Index of date."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public int getDateIndex() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        int i \u003d 2;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        while (i !\u003d inputs.length \u0026\u0026 inputs[i].charAt(0) !\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        return i;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Returns date of deadline/event."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return Date of deadline/event."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @throws DukeException Thrown when date is not found."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public LocalDate getDate() throws DukeException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        int dateIndex \u003d this.getDateIndex() + 1;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        if (dateIndex \u003d\u003d (inputs.length + 1) || dateIndex \u003d\u003d inputs.length) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            throw new DukeException(\"\\u2639\" + \" OOPS!!! This task requires a date\\n\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        LocalDate localDate \u003d LocalDate.parse(inputs[dateIndex]);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        return localDate;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Returns time of deadline/event."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return Time of deadline/event."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @throws DukeException Thrown when time is not found."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public LocalTime getTime() throws DukeException {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        int timeIndex \u003d this.getDateIndex() + 2;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        if (timeIndex \u003d\u003d inputs.length) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            throw new DukeException(\"\\u2639\" + \" OOPS!!! This task requires a timing\\n\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        LocalTime timing \u003d LocalTime.parse(inputs[timeIndex]);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        return timing;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ElysiaTanZY": 123
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": " * Deals with loading tasks from file and saving tasks in file."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param filePath Path to file where tasks are saved on hard disk."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Loads the tasks that have been saved in duke.txt."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return list of tasks that were previously saved in duke.txt."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @throws FileNotFoundException Thrown when file to load from cannot be found."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public ArrayList\u003cTask\u003e loadFile() throws FileNotFoundException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        Scanner readFile \u003d new Scanner(file);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        while (readFile.hasNext()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            String input \u003d readFile.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            String inputs[] \u003d input.split(\"\\\\|\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            for (int i \u003d 0; i \u003c inputs.length; i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                System.out.println(inputs[i]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            String taskType \u003d inputs[0];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            String isDone \u003d inputs[1];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            String description \u003d inputs[2];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                String date \u003d inputs[3];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                String time \u003d inputs[4];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                LocalDate localDate \u003d LocalDate.parse(date, formatter);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                formatter \u003d DateTimeFormatter.ofPattern(\"hh:mm a\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                LocalTime localTime \u003d LocalTime.parse(time, formatter);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                if (isDone.equals(\"X\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                    tasks.add(new Deadline(description, taskType, localDate, localTime, false));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                    tasks.add(new Deadline(description, taskType, localDate, localTime, true));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                String eventDate \u003d inputs[3];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                String eventTime \u003d inputs[4];"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                DateTimeFormatter forFormatting \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                LocalDate localEventDate \u003d LocalDate.parse(eventDate, forFormatting);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                forFormatting \u003d DateTimeFormatter.ofPattern(\"hh:mm a\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                LocalTime localEventTime \u003d LocalTime.parse(eventTime, forFormatting);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                if (isDone.equals(\"X\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                    tasks.add(new Event(description, taskType, localEventDate, localEventTime, false));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                    tasks.add(new Event(description, taskType, localEventDate, localEventTime, true));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                if (isDone.equals(\"X\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                    tasks.add(new ToDo(description, taskType, false));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                    tasks.add(new ToDo(description, taskType, true));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Updates tasks saved in hard disk when task list changes."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param tasks List of tasks to be saved."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public void updateFile(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        FileWriter writer \u003d new FileWriter(filePath, false);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        if (tasks.getSize() !\u003d 0) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            writer.write(tasks.getTask(0).formatForFile());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            for (int i \u003d 1; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                writer.write(System.lineSeparator() + tasks.getTask(i).formatForFile());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ElysiaTanZY": 117
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": " * Each object of class Task represents a task to be saved."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param taskType Type of task: deadline, event, to-do."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public Task(String description, String taskType) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Class constructor to be used when loading data from hard disk during start-up."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param taskType Type of task: deadline, event, to-do."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param isDone Status of task, whether completed or not."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public Task(String description, String taskType, boolean isDone) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Returns symbol representing status of task."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return If task is done, return \"Y\", else return \"X\"."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            return (\"Y\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            return (\"X\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Returns description of task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return description."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Returns the type of the task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return Type of task."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Mark task as done."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Returns all information about the task formatted in a single string."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return Information about task."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public String obtainTaskInfo() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        return \"[\" + this.getTaskType() + \"][\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Returns all information about task formatted for storage in file."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return All information about task."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public String formatForFile() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        return this.getTaskType() + \"|\" + this.getStatusIcon() + \"|\" + this.getDescription();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ElysiaTanZY": 91
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": " * Contains the task list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Class constructor used when file to load from cannot be found."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param tasks List of tasks that were previously saved in duke.txt."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Returns the number of tasks in the list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return Number of tasks in list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Returns a particular task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param taskIndex Index of task to be returned."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return Task at index taskIndex."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public Task getTask(int taskIndex) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        return tasks.get(taskIndex);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Remove a task from task list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param taskIndex Index of task to be removed from list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public void deleteTask(int taskIndex) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        tasks.remove(taskIndex);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Adds a task to the list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param task Task to be added to the list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Returns a list of tasks that contains keyword."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param keyword Keyword to be found in the description."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return List of tasks that contains keyword."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public ArrayList\u003cString\u003e findTargets(String keyword) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        ArrayList\u003cString\u003e targets \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        for (int i \u003d 0; i \u003c this.getSize(); i++) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            if (this.getTask(i).getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                targets.add(this.getTask(i).obtainTaskInfo());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        return targets;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ElysiaTanZY": 82
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": " * This type of tasks do not have any date/time attached to it."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param taskType type of task: to-do."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public ToDo(String description, String taskType) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        super(description, taskType);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Class constructor to be used when loading data from hard disk during start-up."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param taskType Type of task: to-do."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param isDone Status of task, whether completed or not."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public ToDo(String description, String taskType, boolean isDone) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        super(description, taskType, isDone);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ElysiaTanZY": 26
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": " * Deals with interactions with user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Prints greeting upon start up."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public void printGreeting() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you\\n\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Prints error when file to be read from cannot be found."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        System.out.println(\"File cannot be found\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Reads the user command."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @return User command."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public String readTask() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Prints the list of tasks currently saved."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param tasks List of saved tasks."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public void printList(TaskList tasks) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        for (int i \u003d 1; i \u003c tasks.getSize() + 1; i++) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            System.out.println(i + \".\" + tasks.getTask(i - 1).obtainTaskInfo());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Prints the list of tasks that contains keyword."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param targets List of tasks that matches keyword."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public void printTargets(ArrayList\u003cString\u003e targets) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        for (int i \u003d 1; i \u003c targets.size() + 1; i++) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            System.out.println(i + \".\" + targets.get(i - 1));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Prints message to notify user when a task is successfully marked as done."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param completedTaskIndex Index of task marked as done."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public void printDoneSuccess(TaskList tasks, int completedTaskIndex) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        System.out.println(\"  \" + tasks.getTask(completedTaskIndex).obtainTaskInfo() + \"\\n\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Prints exception when file update failed."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param exception Exception thrown."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public void printUpdateError(IOException exception) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        System.out.println(\"Something went wrong: \" + exception.getMessage());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Prints message to notify user when a task is successfully deleted from list."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param removeTaskIndex Index of task deleted."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public void printDeleteSuccess(TaskList tasks, int removeTaskIndex) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        System.out.println(\"  \" + tasks.getTask(removeTaskIndex).obtainTaskInfo());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Prints the number of tasks in the list."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public void printStatusUpdate(TaskList tasks) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        if (tasks.getSize() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            System.out.println(\"Now you have \" + tasks.getSize() + \" task in the list.\\n\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Prints exception message when DukeException is thrown."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param exception Exception thrown."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public void printException(DukeException exception) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        System.out.println(exception);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Prints message to notify user when a task is successfully added to the list."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public void printAddSuccess(TaskList tasks) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        System.out.println(\"  \" + tasks.getTask(tasks.getSize() - 1).obtainTaskInfo());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     * Prints greeting when exiting."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public void printExit() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ElysiaTanZY": 141
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "ElysiaTanZY": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "\u003c?import javafx.scene.control.*?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"19.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"572.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"27.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"572.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"569.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "ElysiaTanZY": 16
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": " * Tests the Parser class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public void getDate_emptyDate_exceptionThrown() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        Parser parser \u003d new Parser(\"deadline return book\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            parser.getDate();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        });"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public void getDate_datePresent_success() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        Parser parser \u003d new Parser(\"deadline return book /by 2020-01-26 11:00\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(\"2020-01-26\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            Assertions.assertEquals(date, parser.getDate());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            // Not supposed to reach here."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            Assertions.fail();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public void getTime_emptyTime_exceptionThrown() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        Parser parser \u003d new Parser(\"deadline return book /by 2020-01-26\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            parser.getTime();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        });"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public void getTime_timePresent_success() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        Parser parser \u003d new Parser(\"deadline return book /by 2020-01-26 11:00\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        LocalTime time \u003d LocalTime.parse(\"11:00\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            Assertions.assertEquals(time, parser.getTime());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            // Not supposed to reach here."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            Assertions.fail();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public void getDescription_emptyDescription_exceptionThrown() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        Parser parser \u003d new Parser(\"deadline\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            parser.getDescription();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        });"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public void getDescription_descriptionPresent_success() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        Parser parser \u003d new Parser(\"deadline return book /by 2020-01-26 11:00\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        String description \u003d \"return book\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            Assertions.assertEquals(description, parser.getDescription());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            // Not supposed to reach here."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            Assertions.fail();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ElysiaTanZY": 80
    }
  },
  {
    "path": "src/test/java/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": " * Tests the Storage class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    public void load_testFile_success() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        ArrayList\u003cString\u003e tasks \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        tasks.add(new ToDo(\"borrow book\", \u0027T\u0027).obtainTaskInfo());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        tasks.add(new Deadline(\"CS2103 Submission\", \u0027D\u0027,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                LocalDate.parse(\"2020-01-26\"), LocalTime.parse(\"23:59\")).obtainTaskInfo());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        tasks.add(new Event(\"CNY\", \u0027E\u0027,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "                LocalDate.parse(\"2020-01-25\"), LocalTime.parse(\"12:00\")).obtainTaskInfo());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        Storage storage \u003d new Storage(\"./test.txt\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        ArrayList\u003cTask\u003e loadedTasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            loadedTasks \u003d storage.load();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        } catch (FileNotFoundException exception) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            System.out.println(exception);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            loadedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        ArrayList\u003cString\u003e loadedTasksInfo \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        for (int j \u003d 0; j \u003c 3; j++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "            loadedTasksInfo.add(loadedTasks.get(j).obtainTaskInfo());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "        Assertions.assertEquals(tasks, loadedTasksInfo);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ElysiaTanZY": 42
    }
  },
  {
    "path": "src/test/test.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "[T][X] borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "[D][X] CS2103 Submission by Jan 26 2020 11:59 PM"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "[E][X] CNY at Jan 25 2020 12:00 PM"
      }
    ],
    "authorContributionMap": {
      "ElysiaTanZY": 3
    }
  },
  {
    "path": "test.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "[T][X] borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "[D][X] CS2103 Submission by Jan 26 2020 11:59 PM"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "[E][X] CNY at Jan 25 2020 12:00 PM"
      }
    ],
    "authorContributionMap": {
      "ElysiaTanZY": 3
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "  [T][X] read book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "Now you have 1 task in the list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "  [D][X] return book (by: June 6th)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "  [E][X] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "  [T][X] join sports club"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "  [T][X] borrow book"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "1.[T][X] read book"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "2.[D][X] return book (by: June 6th)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "3.[E][X] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "4.[T][X] join sports club"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "5.[T][X] borrow book"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "  [T][Y] read book"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "  [T][Y] join sports club"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "1.[T][Y] read book"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "2.[D][X] return book (by: June 6th)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "3.[E][X] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "4.[T][Y] join sports club"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "5.[T][X] borrow book"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "  [D][X] return book (by: Sunday)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "ElysiaTanZY": 48
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ElysiaTanZY": 11
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ElysiaTanZY"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "ElysiaTanZY": 34
    }
  }
]
