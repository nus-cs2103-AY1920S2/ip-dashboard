[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "test {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 35,
      "-": 22
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "D | 1 | find your inner self          | 2010-10-10T19:00"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "T | 1 | study"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "D | 1 | perception         | 2030-03-02T19:00"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "D | 0 | do laundry    | 2020-03-20T19:00"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "E | 0 | valentine\u0027s   | 2020-02-14T19:00"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "T | 0 | buy gifts"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 6
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import task.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Initializes Duke with its UI and file and load tasks into storage."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @throws IOException if there are file exceptions."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public Duke() throws IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        String filePath \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        assert this.storage !\u003d null : \"storage should be instantiated\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            assert tasks.getSize() !\u003d 0 : \"list of tasks should not be empty\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Performs all functionality of Duke chat bot."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @throws IOException if there are file exceptions."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        ui.print();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        while (ui.hasNextInput()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                String input \u003d ui.getNextInput();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                Parser p \u003d new Parser(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                String command \u003d p.getCommand();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    ui.exit();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    if (tasks.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                        System.out.println(\"There is no task in your list. Please try again...\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    ui.printTasks(tasks);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    int taskIndex \u003d p.getIndex();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    ui.acknowledgeDone(tasks, taskIndex);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    assert tasks.getTask(taskIndex).getStatus() \u003d\u003d true : \"Task should be marked as done.\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    storage.save(tasks);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    Deadline deadline \u003d new Deadline(p.getTask(), p.getDate());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    tasks.add(deadline);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    assert tasks.getTask(tasks.getSize() - 1).toString()"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                            .equals(deadline.toString()) : \"Added task should be a deadline task.\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    ui.acknowledgeDeadline(tasks, deadline);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    storage.save(tasks);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                } else if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    Todo todo \u003d new Todo(p.getTask());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    tasks.add(todo);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    ui.acknowledgeTodo(tasks, todo);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    storage.save(tasks);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    Task event \u003d new Event(p.getTask(), p.getDate());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    tasks.add(event);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    ui.acknowledgeEvent(tasks, event);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    storage.save(tasks);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    ui.acknowledgeDelete(tasks, p.getIndex());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    storage.save(tasks);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                } else if (command.equals(\"find\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    ui.acknowledgeFound(tasks, p.getTask());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    ui.printUnknownCommand();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return \"Duke heard: \" + input;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 104,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 36
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Dui.jpg\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Nhamhung.jpg\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        );"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 49
    }
  },
  {
    "path": "src/main/java/exception/CommandNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class CommandNotFoundException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public CommandNotFoundException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 7
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 7
    }
  },
  {
    "path": "src/main/java/exception/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public EmptyDescriptionException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 7
    }
  },
  {
    "path": "src/main/java/exception/InvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class InvalidIndexException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public InvalidIndexException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 7
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private String[] inputs;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public Parser(String input) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Returns the command such as \"todo\", \"deadline\", \"event\"."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @return String command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String getCommand() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        inputs \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        command \u003d inputs[0];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Gets the task depending on the command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @return String representing task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            return inputs[1];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            return inputs[1];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            return input.split(\" /by\")[0].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            return input.split(\" /at\")[0].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Gets the date depending on whether task is \"deadline\" or \"event\"."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @return LocalDateTime object."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public LocalDateTime getDate() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        if (inputs[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            String time \u003d input.split(\" /by\")[1].substring(1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            return LocalDateTime.parse(time, formatter);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        } else if (inputs[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            String time \u003d input.split(\" /at\")[1].substring(1);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            return LocalDateTime.parse(time, formatter);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Gets the index for commands \"done\" and \"delete\"."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @return an index integer for which task to manipulate."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @throws EmptyDescriptionException if command lacks index description."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public int getIndex() throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        if (input.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            throw new EmptyDescriptionException(\"You forgot to mention the index!\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        int idx \u003d Integer.parseInt(input.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return idx;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 79
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Constructs a storage."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param filePath is the path to file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @throws IOException for file exceptions."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public Storage(String filePath) throws IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Saves the tasks into targeted file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param tasks list of tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @throws IOException file exceptions."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void save(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        FileWriter fw \u003d new FileWriter(this.filePath);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        for (Task task: tasks.getTasks()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            fw.write(task.toFormatString() + \"\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Loads existing tasks in the file into array list of tasks."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @return an array list of current tasks stored in file."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @throws FileNotFoundException if the filePath is wrong."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            char taskType \u003d line.charAt(0);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            char taskCondition \u003d line.charAt(4);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            String taskContent \u003d line.substring(8);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            String[] taskAndTime \u003d taskContent.split(\"\\\\| \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            if (taskType \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                taskList.add(new Todo(taskContent));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            } else if (taskType \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                taskList.add(new Deadline(taskAndTime[0], LocalDateTime.parse(taskAndTime[1])));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            } else if (taskType \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                taskList.add(new Event(taskAndTime[0], LocalDateTime.parse(taskAndTime[1])));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            if (taskCondition \u003d\u003d \u00271\u0027) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                taskList.get(taskList.size() - 1).finishTask();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 68
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private LocalDateTime deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public Deadline(String task, LocalDateTime deadline) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                this.deadline.format(DateTimeFormatter.ofPattern(\"\" + \"MMM d yyyy, h:mm a\")));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String toFormatString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return super.getStatus() ? String.format(\"D | 1 | %s | %s\", super.getTask(), this.deadline)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                : String.format(\"D | 0 | %s | %s\", super.getTask(), this.deadline);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 25
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private LocalDateTime event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public Event(String task, LocalDateTime event) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.event \u003d event;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                this.event.format(DateTimeFormatter.ofPattern(\"\" + \"MMM d yyyy, h:mm a\")));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String toFormatString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return super.getStatus() ? String.format(\"E | 1 | %s | %s\", super.getTask(), this.event)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                : String.format(\"E | 0 | %s | %s\", super.getTask(), this.event);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 25
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private String task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public Task(String task) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void finishTask() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return this.task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            return String.format(\"[^] %s\", this.task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            return String.format(\"[x] %s\", this.task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String toFormatString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 36
    }
  },
  {
    "path": "src/main/java/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public Task getTask(int idx) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return tasks.get(idx);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void newTodo(String task) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.add(new Todo(task));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void newDeadline(String task, LocalDateTime time) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.add(new Deadline(task, time));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void newEvent(String task, LocalDateTime time) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.add(new Event(task, time));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void remove(Task targetedTask) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.tasks.remove(targetedTask);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 48
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public Todo(String task) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String toFormatString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return super.getStatus() ? String.format(\"T | 1 | %s\", super.getTask())"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                : String.format(\"T | 0 | %s\", super.getTask());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 18
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import exception.CommandNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import exception.InvalidIndexException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private Scanner scan;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public boolean hasNextInput() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return scan.hasNext();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String getNextInput() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return scan.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(\"Ooops! Cannot find file...\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Prints out DUKE interface."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void print() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Prints exit message."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Prints list of all tasks."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param tasks arraylist of tasks."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void printTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            System.out.println(i + \".  \" + tasks.getTask(i - 1));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Prints unknown command."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @throws CommandNotFoundException if command not recognised."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void printUnknownCommand() throws CommandNotFoundException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        throw new CommandNotFoundException(\"We don\u0027t recognise this command!!!!\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Acknowledges once done task is done."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param tasks arraylist of tasks."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param index index of which task is done."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @throws InvalidIndexException index out of bound."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void acknowledgeDone(TaskList tasks, int index) throws InvalidIndexException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        if (tasks.getSize() \u003c\u003d index || index \u003c 0) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            throw new InvalidIndexException(\"This index does not match any task in our list!! Try again...\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.getTask(index).finishTask();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(tasks.getTask(index));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Acknowledges once todo task is added."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param tasks arraylist of tasks."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param todo index of which task is done."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void acknowledgeTodo(TaskList tasks, Task todo) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(\"   \" + todo);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.getSize() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Acknowledges once deadline task is added."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param tasks arraylist of tasks."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param deadline time of deadline."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void acknowledgeDeadline(TaskList tasks, Task deadline) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(\"   \" + deadline);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.getSize() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Acknowledges once event task is added."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param tasks arraylist of tasks."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param event time of event."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void acknowledgeEvent(TaskList tasks, Task event) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(\"   \" + event);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.getSize() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Acknowledges once task is deleted."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param tasks arraylist of tasks."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param index index of task to be deleted."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @throws InvalidIndexException when index is out of bound."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void acknowledgeDelete(TaskList tasks, int index) throws InvalidIndexException {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        if (tasks.getSize() \u003c\u003d index || index \u003c 0) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            throw new InvalidIndexException(\"This index does not match any task in our list!! Try again...\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(tasks.getTask(index));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        Task targetedTask \u003d tasks.getTask(index);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.remove(targetedTask);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Acknowledges when the task is searched."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param tasks array list of tasks."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param task String task to search for."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void acknowledgeFound(TaskList tasks, String task) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        for (Task t: tasks.getTasks()) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            if (t.toString().contains(task)) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                System.out.printf(\"%d.%s\\n\", index, t.toString());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 155
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 19
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void testDeadlineObject() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"do your work\", LocalDateTime.parse(\"2020-02-02T20:00\"));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        Assertions.assertEquals(\"[D][x] do your work (by: Feb 2 2020, 8:00 PM)\", deadline.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void testDeadlinePrint() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"do your work\", LocalDateTime.parse(\"2020-02-02T20:00\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        Assertions.assertEquals(\"D | 0 | do your work | 2020-02-02T20:00\", deadline.toFormatString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 19
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 10
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void testCorrectTask() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.add(new Todo(\"play game\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.add(new Deadline(\"study\", LocalDateTime.parse(\"2010-02-01T18:00\")));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.add(new Event(\"holiday\", LocalDateTime.parse(\"2039-10-03T21:00\")));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        Assertions.assertEquals(tasks.getTask(2).toString(), \"[E][x] holiday (at: Oct 3 2039, 9:00 PM)\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void testNumTasks() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.add(new Todo(\"play game\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.add(new Deadline(\"study\", LocalDateTime.parse(\"2010-02-01T18:00\")));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.add(new Event(\"holiday\", LocalDateTime.parse(\"2039-10-03T21:00\")));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        Assertions.assertEquals(3, tasks.getSize());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void testTaskAddingMethod() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.newTodo(\"play game\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.newDeadline(\"study\", LocalDateTime.parse(\"2010-02-01T18:00\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.newEvent(\"holiday\", LocalDateTime.parse(\"2039-10-03T21:00\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        Assertions.assertEquals(tasks.getSize(), 3);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 40
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "todo join sports club"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 7
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 34
    }
  }
]
