[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "D | 1 | do homework     | 2029-02-20T19:00"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "E | 1 | holiday    | 2039-10-03T21:00"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "D | 0 | do your work  | 2020-02-02T20:00"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "D | 0 | find your inner self | 2010-10-10T19:00"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 4
    }
  },
  {
    "path": "src/main/java/CommandNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class CommandNotFoundException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public CommandNotFoundException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 5
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private LocalDateTime deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public Deadline(String task, LocalDateTime deadline) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), this.deadline.format(DateTimeFormatter.ofPattern(\"\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                \"MMM d yyyy, h:mm a\")));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String toFormatString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return super.getStatus() ? String.format(\"D | 1 | %s | %s\", super.getTask(), this.deadline)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                : String.format(\"D | 0 | %s | %s\", super.getTask(), this.deadline);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 22
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public Duke(String filePath) throws IOException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void run () throws IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        ui.print();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        while (ui.hasNextInput()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                String input \u003d ui.getNextInput();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                Parser p \u003d new Parser(input);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                if (p.getCommand().equals(\"bye\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    ui.exit();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                } else if (p.getCommand().equals(\"list\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    if (tasks.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                        System.out.println(\"There is no task in your list. Please try again...\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    ui.printTasks(tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                } else if (p.getCommand().equals(\"done\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    ui.acknowledgeDone(tasks, p.getIndex(tasks));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    storage.save(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                } else if (p.getCommand().equals(\"deadline\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    Deadline deadline \u003d new Deadline(p.getTask(), p.getDate());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    tasks.add(deadline);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    ui.acknowledgeDeadline(tasks, deadline);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    storage.save(tasks);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                } else if (p.getCommand().equals(\"todo\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    Todo todo \u003d new Todo(p.getTask());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    tasks.add(todo);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    ui.acknowledgeTodo(tasks, todo);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    storage.save(tasks);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                } else if (p.getCommand().equals(\"event\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    Task event \u003d new Event(p.getTask(), p.getDate());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    tasks.add(event);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    ui.acknowledgeEvent(tasks, event);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    storage.save(tasks);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                } else if (p.getCommand().equals(\"delete\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    ui.acknowledgeDelete(tasks, p.getIndex(tasks));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    storage.save(tasks);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                } else if (p.getCommand().equals(\"find\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    ui.acknowledgeFound(tasks, p.getTask());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    ui.printUnknownCommand();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            } catch (Exception ex) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 75,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 5
    }
  },
  {
    "path": "src/main/java/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public EmptyDescriptionException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private LocalDateTime event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public Event(String task, LocalDateTime event) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.event \u003d event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), this.event.format(DateTimeFormatter.ofPattern(\"\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                \"MMM d yyyy, h:mm a\")));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String toFormatString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return super.getStatus() ? String.format(\"E | 1 | %s | %s\", super.getTask(), this.event)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                : String.format(\"E | 0 | %s | %s\", super.getTask(), this.event);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 22
    }
  },
  {
    "path": "src/main/java/InvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class InvalidIndexException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public InvalidIndexException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 5
    }
  },
  {
    "path": "src/main/java/META-INF/MANIFEST.MF",
    "fileType": "MF",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Manifest-Version: 1.0"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Main-Class: Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "nhamhung": 3
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String input;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String[] inputs;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public Parser(String input) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String getCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        inputs \u003d input.split(\" \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        command \u003d inputs[0];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                return inputs[1];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            return input.split(\" /by\")[0].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            return input.split(\" /at\")[0].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public LocalDateTime getDate() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        if (inputs[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            String time \u003d input.split(\" /by\")[1].substring(1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            return LocalDateTime.parse(time, formatter);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        } else if (inputs[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            String time \u003d input.split(\" /at\")[1].substring(1);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            return LocalDateTime.parse(time, formatter);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public int getIndex(TaskList tasks) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        if (input.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            throw new EmptyDescriptionException(\"You forgot to mention the index!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        int idx \u003d Integer.parseInt(input.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return idx;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 57
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public Storage(String filePath) throws IOException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void save(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        FileWriter fw \u003d new FileWriter(this.filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        for (Task task: tasks.getTasks()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            fw.write(task.toFormatString() + \"\\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            char taskType \u003d line.charAt(0);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            char taskCondition \u003d line.charAt(4);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            String taskContent \u003d line.substring(8);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            String[] taskAndTime \u003d taskContent.split(\"\\\\| \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            if (taskType \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                taskList.add(new Todo(taskContent));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            } else if (taskType \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                taskList.add(new Deadline(taskAndTime[0], LocalDateTime.parse(taskAndTime[1])));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            } else if (taskType \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                taskList.add(new Event(taskAndTime[0], LocalDateTime.parse(taskAndTime[1])));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            if (taskCondition \u003d\u003d \u00271\u0027) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                taskList.get(taskList.size() - 1).finishTask();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 49
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private String task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private boolean done;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public Task(String task) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void finishTask() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return this.done;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return this.task;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        if (done) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            return String.format(\"[^] %s\", this.task);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            return String.format(\"[x] %s\", this.task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String toFormatString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 34
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public Task getTask(int idx) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return tasks.get(idx);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void newTodo(String task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.add(new Todo(task));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void newDeadline(String task, LocalDateTime time) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.add(new Deadline(task, time));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void newEvent(String task, LocalDateTime time) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.add(new Event(task, time));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void remove(Task targetedTask) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.tasks.remove(targetedTask);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 45
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public Todo (String task) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String toFormatString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return super.getStatus() ? String.format(\"T | 1 | %s\", super.getTask())"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                : String.format(\"T | 0 | %s\", super.getTask());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 15
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private Scanner scan;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public boolean hasNextInput() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return scan.hasNext();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String getNextInput() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return scan.nextLine();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(\"Ooops! Cannot find file...\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void print() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void printTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            System.out.println(i + \".  \" + tasks.getTask(i - 1));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void printUnknownCommand() throws CommandNotFoundException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        throw new CommandNotFoundException(\"We don\u0027t recognise this command!!!!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void acknowledgeDone(TaskList tasks, int index) throws InvalidIndexException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        if (tasks.getSize() \u003c\u003d index || index \u003c 0) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            throw new InvalidIndexException(\"This index does not match any task in our list!! Try again...\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.getTask(index).finishTask();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(tasks.getTask(index));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void acknowledgeTodo(TaskList tasks, Task todo) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(\"   \" + todo);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.getSize() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void acknowledgeDeadline(TaskList tasks, Task deadline) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(\"   \" + deadline);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.getSize() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void acknowledgeEvent(TaskList tasks, Task event) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(\"   \" + event);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.getSize() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void acknowledgeDelete(TaskList tasks, int index) throws InvalidIndexException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        if (tasks.getSize() \u003c\u003d index || index \u003c 0) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            throw new InvalidIndexException(\"This index does not match any task in our list!! Try again...\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(tasks.getTask(index));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        Task targetedTask \u003d tasks.getTask(index);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.remove(targetedTask);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void acknowledgeFound(TaskList tasks, String task) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        for (Task t: tasks.getTasks()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            if (t.toString().contains(task)) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                System.out.printf(\"%d.%s\\n\", index, t.toString());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 96
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void testDeadlineObject() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"do your work\", LocalDateTime.parse(\"2020-02-02T20:00\"));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        Assertions.assertEquals(\"[D][x] do your work (by: Feb 2 2020, 8:00 PM)\", deadline.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void testDeadlinePrint() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"do your work\", LocalDateTime.parse(\"2020-02-02T20:00\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        Assertions.assertEquals(\"D | 0 | do your work | 2020-02-02T20:00\", deadline.toFormatString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 18
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 10
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void testCorrectTask() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.add(new Todo(\"play game\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.add(new Deadline(\"study\", LocalDateTime.parse(\"2010-02-01T18:00\")));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.add(new Event(\"holiday\", LocalDateTime.parse(\"2039-10-03T21:00\")));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        Assertions.assertEquals(tasks.getTask(2).toString(), \"[E][x] holiday (at: Oct 3 2039, 9:00 PM)\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void testNumTasks() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.add(new Todo(\"play game\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.add(new Deadline(\"study\", LocalDateTime.parse(\"2010-02-01T18:00\")));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.add(new Event(\"holiday\", LocalDateTime.parse(\"2039-10-03T21:00\")));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        Assertions.assertEquals(3, tasks.getSize());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void testTaskAddingMethod() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.newTodo(\"play game\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.newDeadline(\"study\", LocalDateTime.parse(\"2010-02-01T18:00\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.newEvent(\"holiday\", LocalDateTime.parse(\"2039-10-03T21:00\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        Assertions.assertEquals(tasks.getSize(), 3);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 38
    }
  },
  {
    "path": "text-ui-test/ACTUAL.TXT",
    "fileType": "TXT",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "data/duke.txt (No such file or directory)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "   [T][x] read book"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Now you have 1 task(s) in the list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "data/duke.txt (No such file or directory)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "[T][^] read book"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "data/duke.txt (No such file or directory)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "   [D][x] return book (by: June 6th)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Now you have 2 task(s) in the list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "data/duke.txt (No such file or directory)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "   [E][x] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Now you have 3 task(s) in the list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "data/duke.txt (No such file or directory)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "1.  [T][^] read book"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "2.  [D][x] return book (by: June 6th)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "3.  [E][x] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "[E][^] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "data/duke.txt (No such file or directory)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "   [T][x] join sports club"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Now you have 4 task(s) in the list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "data/duke.txt (No such file or directory)"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 35
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "todo join sports club"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 7
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 34
    }
  }
]
