[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "test {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 35,
      "-": 22
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "T | 1 | zxcv"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 1
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "## Navigation"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "1. [Introduction](#introduction)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "2. [Instructions](#instructions)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "3. [Features](#features)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    3.1 [Overview](#overview)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    3.2 [Task List](#task-list)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    3.3 [Storage](#storage)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "4. [Usage](#usage)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    4.1 [`bye`](#41-bye)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "  "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    4.2 [`todo`](#42-todo-taskaction)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "  "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    4.3 [`deadline`](#43-deadline-taskaction-by-date-time)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "  "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    4.4 [`event`](#44-event-taskaction-at-date-time)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "  "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    4.5 [`list`](#45-list)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "  "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    4.6 [`find`](#46-find-taskaction)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    4.7 [`done`](#47-done-index)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    4.8 [`delete`](#48-delete-index)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Project Duke is a personalised chat bot for a user"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "who can use Command Line Interface to input and keep "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "track of their tasks. Generally, user can add, mark "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "the task as complete, delete and find a combination of "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "tasks. "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "![app display](Ui.png)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "## Instructions"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "  1. Download the jar file [here](https://github.com/nhamhung/duke/releases/tag/A-Release)."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "  2. Open the jar file to launch the app."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "  3. Type in the text box your command or instruction. Hit `Enter` or the `Send` button to execute."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "  4. See Section [4. Usage](#usage) for different commands."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "### Overview"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "\u003e The app currently processes 3 types of user tasks: **Todo**, **Deadline** and **Event**. Each of these tasks will require a different input from the user to be recorded and kept track of their completion. "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "### Task List"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "\u003e All the tasks are stored in the list of tasks according to the order they were added. Each task is mapped to an index which corresponds to its position in the list. User can thus refer to a specific task or multiple tasks based on their indexes. There is also a \"list\" command which allows user to check the ordering of the tasks."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "### Storage"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "\u003e The tasks are stored to and loaded from \"/data/duke.txt\". When the application starts, data is loaded from \"/data/duke.txt\" into the task list to be displayed or manipulated. After each user command, if there is any modification to any task or the task list, the data in \"/data/duke.txt\" will be overwritten with the current state of the task list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "### ```4.1 bye```"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Exits from the application."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "```"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "```"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "### ```4.2 todo [TaskAction]```"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nhamhung"
        },
        "content": " "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Adds a todo task into the list."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "`todo wake up`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "```"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    [T][x] wake up"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "```"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "### ```4.3 deadline [TaskAction] /by [Date Time]```"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Adds a task representing a deadline to the list with a deadline specified"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "`deadline return book /by 20/02/2020 2020`"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "```"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nhamhung"
        },
        "content": " [D][x] return book (by: Feb 20 2020, 8:20PM)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "```"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "### ```4.4 event [TaskAction] /at [Date Time]```"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Adds a task representing an event to the list with the time specified"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "`event book sharing /at 20/02/2020 2040`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "```"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nhamhung"
        },
        "content": " [E][x] book sharing (at: Feb 20 2020, 8:40PM)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "```"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "### ```4.5 list```"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Prints all the tasks in the list with their indexes."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "```"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "1. [T][x] wake up"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "2. [D][x] return book (by: Feb 20 2020, 8:20PM)"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "3. [E][x] book sharing (at: Feb 20 2020, 8:40PM)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "```"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "### ```4.6 find [TaskAction]```"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Finds all tasks whose TaskAction contains the keyword specified."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "`find book`"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "```"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "1. [D][x] return book (by: Feb 20 2020, 8:20PM)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "2. [T][x] borrow book (at: Feb 20 2020, 8:40PM)`"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "```"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "### ```4.7 done [Index]```"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Mark indexed tasks as done."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "`done 1 2`"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "```"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Nice! I\u0027ve marked this task(s) as done:"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "1. [D][^] return book (by: Feb 20 2020, 8:20PM)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "2. [T][^] borrow book (at: Feb 20 2020, 8:40PM)`"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "```"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "### ```4.8 delete [Index]```"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Delete indexed tasks."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "`delete 1 2`"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "```"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Noted. I\u0027ve removed this task(s):"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "1. [D][^] return book (by: Feb 20 2020, 8:20PM)"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "2. [T][^] borrow book (at: Feb 20 2020, 8:40PM)"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "Now you have 1 tasks in the list"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 170,
      "-": 20
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 58
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Initializes Duke with its UI and file and load tasks into storage."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @throws IOException if there are file exceptions."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public Duke() throws IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        assert this.ui !\u003d null : \"Ui should be instantiated\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        storage \u003d new Storage(\"data/duke.txt\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        assert this.storage !\u003d null : \"Storage should be instantiated\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            tasks \u003d new TaskList(storage.loadExistingFileTasks());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            assert this.tasks !\u003d null : \"Tasks should be instantiated\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            assert this.tasks.getTaskListSize() !\u003d 0 : \"Tasks should should have been loaded\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        } catch (FileNotFoundException | AssertionError ex) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Duke responds in GUI."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            Parser parser \u003d new Parser(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            Command c \u003d parser.parse();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            if (c \u003d\u003d null) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                Ui.printUnknownCommand();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            if (c.isExit()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                System.exit(0);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            response \u003d c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        } catch (DukeException | IOException | DateTimeException | AssertionError | IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            response \u003d ui.showCommandError(ex.getMessage());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 55,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public Main() throws IOException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 31
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/10.jpg\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(new Ui().getWelcomeMessage(), dukeImage));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 52
    }
  },
  {
    "path": "src/main/java/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return this instanceof ExitCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param tasks is task list for in-memory."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param ui is ui to display to user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param storage is file where data is written to and read from."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @return response to user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @throws DukeException is exception when dealing with Duke."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @throws IOException is exception for file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 30
    }
  },
  {
    "path": "src/main/java/commands/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private String taskAction;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private LocalDateTime deadlineDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Constructs a DeadlineCommand instance."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param taskAction is the task action."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param deadlineDate is the deadline of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public DeadlineCommand(String taskAction, LocalDateTime deadlineDate) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.taskAction \u003d taskAction;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.deadlineDate \u003d deadlineDate;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Executes the deadline command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param tasks is task list for in-memory."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param ui is ui to display to user."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param storage is file where data is written to and read from."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @return deadline task added response to user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @throws IOException is exception for file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        Deadline deadline \u003d new Deadline(taskAction, deadlineDate);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        if (tasks.checkDuplicate(deadline)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            String s \u003d \"Note!! This task action already exists in the list!\\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            return s + String.format(\"Now you have %d tasks in the list.\\n\", tasks.getTaskListSize());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            tasks.addTask(deadline);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            storage.saveTasksIntoFile(tasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            return ui.acknowledgeTaskAdded(tasks, deadline);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 47
    }
  },
  {
    "path": "src/main/java/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import exception.InvalidIndexException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private int[] arrayOfIndexes;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Constructs the DeleteCommand instance."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param arrayOfDeleteIndexes is the array of inputted delete indexes."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public DeleteCommand(int[] arrayOfDeleteIndexes) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.arrayOfIndexes \u003d arrayOfDeleteIndexes;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Executes the delete command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param tasks is task list for in-memory."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param ui is ui to display to user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param storage is file where data is written to and read from."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @return deleted tasks response to user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @throws InvalidIndexException is the exception if the inputted index is invalid."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @throws IOException is exception for file handling."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws InvalidIndexException, IOException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        int[] arrayOfDeleteIndexes \u003d"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                IntStream.of(arrayOfIndexes)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                         .filter(index -\u003e tasks.getTaskListSize() \u003e index \u0026\u0026 index \u003e\u003d 0)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                         .toArray();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        String s \u003d ui.acknowledgeDelete(tasks, arrayOfDeleteIndexes);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.removeTasks(arrayOfDeleteIndexes);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        storage.saveTasksIntoFile(tasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        String taskListCount \u003d ui.currentTaskListSize(tasks);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return s + \"\\n\" + taskListCount;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 49
    }
  },
  {
    "path": "src/main/java/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import exception.InvalidIndexException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private int[] arrayOfIndexes;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Constructs the done command instance."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param arrayOfDoneIndexes is the array of inputted done indexes."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public DoneCommand(int[] arrayOfDoneIndexes) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.arrayOfIndexes \u003d arrayOfDoneIndexes;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Executes the done command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param tasks is task list for in-memory."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param ui is ui to display to user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param storage is file where data is written to and read from."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @return tasks marked as done response to user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @throws InvalidIndexException is exception when dealing with index."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @throws IOException is exception for file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException, InvalidIndexException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        int[] arrayOfDoneIndexes \u003d IntStream.of(this.arrayOfIndexes)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                                            .filter(index -\u003e tasks.getTaskListSize() \u003e index \u0026\u0026 index \u003e\u003d 0)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                                            .toArray();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        IntStream.of(arrayOfDoneIndexes)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                 .forEach(index -\u003e tasks.getTask(index).markAsDone());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        storage.saveTasksIntoFile(tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return ui.acknowledgeDone(tasks, arrayOfDoneIndexes);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 46
    }
  },
  {
    "path": "src/main/java/commands/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private String taskAction;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private LocalDateTime eventDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public EventCommand(String taskAction, LocalDateTime eventDate) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.taskAction \u003d taskAction;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.eventDate \u003d eventDate;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Executes the event command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param tasks is task list for in-memory."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param ui is ui to display to user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param storage is file where data is written to and read from."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @return added event response."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @throws IOException is exception for file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        Event event \u003d new Event(taskAction, eventDate);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        if (tasks.checkDuplicate(event)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            String s \u003d \"Note!! This task action already exists in the list!\\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            return s + String.format(\"Now you have %d tasks in the list.\\n\", tasks.getTaskListSize());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            tasks.addTask(event);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            storage.saveTasksIntoFile(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            return ui.acknowledgeTaskAdded(tasks, event);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 44
    }
  },
  {
    "path": "src/main/java/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Executes the exit command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param tasks is task list for in-memory."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param ui is ui to display to user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param storage is file where data is written to and read from."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @return exit message."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return ui.getExitMessage();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 24
    }
  },
  {
    "path": "src/main/java/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private String taskSearchKey;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Constructs a FindCommand instance."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param taskAction is the task search keyword."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public FindCommand(String taskAction) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.taskSearchKey \u003d taskAction;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Executes the find command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param tasks is task list for in-memory."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param ui is ui to display to user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param storage is file where data is written to and read from."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @return found tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return ui.acknowledgeFound(tasks, this.taskSearchKey);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 32
    }
  },
  {
    "path": "src/main/java/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import exception.EmptyTaskListException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Lists all tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param tasks is task list for in-memory."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param ui is ui to display to user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param storage is file where data is written to and read from."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @return list all tasks response."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @throws EmptyTaskListException if the list is empty when starting up."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws EmptyTaskListException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return ui.acknowledgeList(tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 26
    }
  },
  {
    "path": "src/main/java/commands/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private String taskAction;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Constructs a TodoCommand instance."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param taskAction is the task action."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public TodoCommand(String taskAction) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.taskAction \u003d taskAction;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Executes the todo command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param tasks is task list for in-memory."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param ui is ui to display to user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param storage is file where data is written to and read from."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @return added todo task response."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        Todo todo \u003d new Todo(taskAction);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        if (tasks.checkDuplicate(todo)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            return \"Hey man! This todo task already exists in the list. You don\u0027t wanna duplicate!\\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            tasks.addTask(todo);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            storage.saveTasksIntoFile(tasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            return ui.acknowledgeTaskAdded(tasks, todo);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 43
    }
  },
  {
    "path": "src/main/java/exception/CommandNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class CommandNotFoundException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public CommandNotFoundException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 7
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 7
    }
  },
  {
    "path": "src/main/java/exception/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public EmptyDescriptionException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 7
    }
  },
  {
    "path": "src/main/java/exception/EmptyTaskListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class EmptyTaskListException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public EmptyTaskListException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 7
    }
  },
  {
    "path": "src/main/java/exception/InvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class InvalidIndexException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public InvalidIndexException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 7
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import commands.DeadlineCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import commands.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import commands.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import commands.EventCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import commands.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import commands.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import commands.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import commands.TodoCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": " * Represents a program for parsing userInput into different components depending on user taskCommand."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": " * Extracts taskCommand, taskAction and taskIndex for \"done\" and \"delete\" task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": " * Extracts taskCommand and taskAction for \"todo\" and \"find\" task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": " * Extracts taskCommand, taskAction and timeline for \"deadline\" and \"event\" task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private String taskCommand;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private String[] inputAsArray;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public Parser(String userInput) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Parse user input to extract different components out."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @return a Command object corresponding to the command type inputted by user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @throws EmptyDescriptionException is thrown when \"done\" and \"delete\" command does not specify index."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public Command parse() throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        String command \u003d this.getCommand();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        String taskAction \u003d this.getTaskAction();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                int[] arrayOfDoneIndexes \u003d this.getTaskIndexArray();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                return new DoneCommand(arrayOfDoneIndexes);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                int[] arrayOfDeleteIndexes \u003d this.getTaskIndexArray();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                return new DeleteCommand(arrayOfDeleteIndexes);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                return new FindCommand(taskAction);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                return new TodoCommand(taskAction);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                LocalDateTime deadlineDate \u003d this.getTaskDate();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                return new DeadlineCommand(taskAction, deadlineDate);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                LocalDateTime eventDate \u003d this.getTaskDate();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                return new EventCommand(taskAction, eventDate);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Returns the command such as \"todo\", \"deadline\", \"event\"."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @return String command."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String getCommand() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        inputAsArray \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        taskCommand \u003d inputAsArray[0];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return taskCommand;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Gets the task action depending on the command."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @return String representing task."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String getTaskAction() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        switch (taskCommand) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            return inputAsArray[1];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            return inputAsArray[1];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            return userInput.split(\" /by\")[0].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            return userInput.split(\" /at\")[0].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Gets the date depending on whether task is \"deadline\" or \"event\"."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @return LocalDateTime object."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public LocalDateTime getTaskDate() throws DateTimeException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        if (inputAsArray[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            String time \u003d userInput.split(\" /by\")[1].substring(1);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            return LocalDateTime.parse(time, formatter);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        } else if (inputAsArray[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            String time \u003d userInput.split(\" /at\")[1].substring(1);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            return LocalDateTime.parse(time, formatter);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Returns an array of task indexes that user requests."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @return an array of task indexes."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @throws EmptyDescriptionException throws exception of index is not provided."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public int[] getTaskIndexArray() throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        if (userInput.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            throw new EmptyDescriptionException(\"You forgot to mention the index!\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        String[] arrayOfIndexStrings \u003d userInput.split(\" \", 2)[1].split(\" \");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        int[] arrayOfIndexes \u003d Stream.of(arrayOfIndexStrings)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                                     .mapToInt(Integer::parseInt)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                                     .map(index -\u003e index - 1)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                                     .toArray();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return arrayOfIndexes;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 140
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": " * Represents a storage program that stores tasks into and loads tasks from a file \"data/duke.txt\"."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": " * When the main() program starts, this class reads and loads current tasks stored in file into TaskList object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": " * After each modification to TaskList, this class saves by re-writing all updating tasks into file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private String storageFilePath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Constructs a storage."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param filePath is the path to file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @throws IOException for file exceptions."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public Storage(String filePath) throws IOException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.storageFilePath \u003d filePath;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Saves the tasks by over-writing into the targeted file."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param currentTasks list of tasks."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @throws IOException file exceptions."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void saveTasksIntoFile(TaskList currentTasks) throws IOException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        FileWriter fw \u003d new FileWriter(this.storageFilePath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        for (Task task: currentTasks.getCurrentTasks()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            fw.write(task.toStringForFileStorage() + \"\\n\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Loads existing tasks in the file into an array list of tasks."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @return an array list of current tasks stored in file."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @throws FileNotFoundException if the filePath is wrong."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public ArrayList\u003cTask\u003e loadExistingFileTasks() throws IOException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        ArrayList\u003cTask\u003e taskListFromFile \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            File storageFile \u003d new File(this.storageFilePath);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            Scanner sc \u003d new Scanner(storageFile);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                char taskCommand \u003d line.charAt(0);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                char taskDoneStatus \u003d line.charAt(4);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                String taskAction \u003d line.substring(8);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                String[] taskActionAndTime \u003d taskAction.split(\" \\\\| \");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                if (taskCommand \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    taskListFromFile.add(new Todo(taskAction));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                } else if (taskCommand \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    taskListFromFile.add(new Deadline(taskActionAndTime[0], LocalDateTime.parse(taskActionAndTime[1])));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                } else if (taskCommand \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    taskListFromFile.add(new Event(taskActionAndTime[0], LocalDateTime.parse(taskActionAndTime[1])));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                //if this task from file has status \u00271\u0027, mark this task status in the current task list as done."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                if (taskDoneStatus \u003d\u003d \u00271\u0027) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    int currentTaskListSize \u003d taskListFromFile.size();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    int taskIndexToUpdate \u003d currentTaskListSize - 1;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                    taskListFromFile.get(taskIndexToUpdate).markAsDone();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        } catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            Path pathToStorageFile \u003d Paths.get(this.storageFilePath);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            Files.createDirectories(pathToStorageFile.getParent());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            Files.createFile(pathToStorageFile);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return taskListFromFile;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 94
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private LocalDateTime deadlineTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public Deadline(String taskAction, LocalDateTime deadlineTime) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        super(taskAction);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.deadlineTime \u003d deadlineTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Returns String representation of a deadline task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                this.deadlineTime.format(DateTimeFormatter.ofPattern(\"\" + \"MMM d yyyy, h:mm a\")));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Returns String representation of the deadline task for file storage."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String toStringForFileStorage() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return super.getStatus() ? String.format(\"D | 1 | %s | %s\", super.getTaskAction(), this.deadlineTime)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                : String.format(\"D | 0 | %s | %s\", super.getTaskAction(), this.deadlineTime);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 36
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private LocalDateTime eventTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public Event(String taskAction, LocalDateTime event) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        super(taskAction);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.eventTime \u003d event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Returns String representation of an event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                this.eventTime.format(DateTimeFormatter.ofPattern(\"\" + \"MMM d yyyy, h:mm a\")));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Returns String representation of an event in the file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String toStringForFileStorage() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return super.getStatus() ? String.format(\"E | 1 | %s | %s\", super.getTaskAction(), this.eventTime)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                : String.format(\"E | 0 | %s | %s\", super.getTaskAction(), this.eventTime);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 36
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private String taskAction;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    protected int taskDuplicatesNumber;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public Task(String taskAction) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.taskAction \u003d taskAction;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.taskDuplicatesNumber \u003d 1;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Marks this task as done."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Gets the current status of the task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @return boolean."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Gets the taskAction of the task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String getTaskAction() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return this.taskAction;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Represents task as a string."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @return a string representation of the task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            return String.format(\"[^] %s\", this.taskAction);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            return String.format(\"[x] %s\", this.taskAction);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String toStringForFileStorage() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 60
    }
  },
  {
    "path": "src/main/java/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public Task getTask(int idx) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return this.tasks.get(idx);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void addNewTodo(String task) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.tasks.add(new Todo(task));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void addNewDeadline(String task, LocalDateTime time) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.add(new Deadline(task, time));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void addNewEvent(String task, LocalDateTime time) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.add(new Event(task, time));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public int getTaskListSize() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public ArrayList\u003cTask\u003e getCurrentTasks() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Removes the indexed tasks from the task list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param taskIndexes indexes of tasks to be removed."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void removeTasks(int[] taskIndexes) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        List\u003cTask\u003e tasksToDelete \u003d IntStream.of(taskIndexes)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                                            .mapToObj(index -\u003e this.tasks.get(index))"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                                            .collect(Collectors.toList());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        this.tasks.removeAll(tasksToDelete);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Gets a list of task actions for all tasks."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @return list of task actions."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public List\u003cString\u003e getAllTasksAction() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        List\u003cString\u003e taskActions \u003d this.tasks.stream()"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                                             .map(task -\u003e task.getTaskAction())"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                                             .collect(Collectors.toList());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return taskActions;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Checks whether a task has already existed in the task list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param newTask task to check whether it has existed."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @return boolean."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public boolean checkDuplicate(Task newTask) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        List\u003cString\u003e taskActions \u003d this.tasks.stream()"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                                             .map(task -\u003e task.getTaskAction())"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                                             .collect(Collectors.toList());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return taskActions.contains(newTask.getTaskAction());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 86
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public Todo(String taskAction) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        super(taskAction);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Returns a String representation of the todo task in the task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Returns the String representation of a todo task in file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String toStringForFileStorage() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return super.getStatus() ? String.format(\"T | 1 | %s\", super.getTaskAction())"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                : String.format(\"T | 0 | %s\", super.getTaskAction());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 28
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import exception.CommandNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import exception.EmptyTaskListException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import exception.InvalidIndexException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.util.concurrent.atomic.AtomicInteger;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public Ui() {}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        System.out.println(\"Ooops! Cannot find file...\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                + \"|____/\\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    private String welcomeMessage \u003d \"Hello from\\n\" + logo + \"What can I do for you?\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String getWelcomeMessage() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return this.welcomeMessage;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Prints out error message."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param message"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String showCommandError(String message) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return \"Error: \" + message;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Prints exit message."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String getExitMessage() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return \"Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Prints unknown command."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @throws CommandNotFoundException if command not recognised."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public static String printUnknownCommand() throws CommandNotFoundException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        throw new CommandNotFoundException(\"We don\u0027t recognise this command!!!!\\n\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Prints acknowledgement after a task is added."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param tasks is the task list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param task is the added task."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @return a String message."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String acknowledgeTaskAdded(TaskList tasks, Task task) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return String.format(\"Got it. I\u0027ve added this task\\n    %s\\nNow you have %d task(s) in the list.\\n\","
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                task, tasks.getTaskListSize());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Prints acknowledgement message after searching for task."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param tasks is the task list."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param taskSearchKey is the keyword to search."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @return a String message."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String acknowledgeFound(TaskList tasks, String taskSearchKey) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        String s \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        AtomicInteger atomicIndex \u003d new AtomicInteger(1);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d tasks.getCurrentTasks();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        List\u003cString\u003e foundTaskList \u003d"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                taskList.stream()"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                        .filter(task -\u003e task.toString().split(\" \", 2)[1].split(\"\\\\(\")[0]"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                                .contains(taskSearchKey))"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                        .map(task -\u003e String.format(\"%d.  %s\\n\", atomicIndex.getAndIncrement(), task))"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                        .collect(Collectors.toList());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        foundTaskList.add(0, s);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return String.join(\"\", foundTaskList);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Prints tasks marked as done."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param tasks is task list."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param arrayOfDoneIndexes is array of tasks to be marked done."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @return String response."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @throws InvalidIndexException is exception thrown when the indexes are invalid."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String acknowledgeDone(TaskList tasks, int[] arrayOfDoneIndexes) throws InvalidIndexException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        if (arrayOfDoneIndexes.length \u003d\u003d 0) { throw new InvalidIndexException(\"Index does not match any task!\\n\"); }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        String s \u003d \"Nice! I\u0027ve marked this task(s) as done:\\n\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        List\u003cString\u003e listOFPrintedDoneTasks \u003d"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                IntStream.of(arrayOfDoneIndexes)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                         .mapToObj(index -\u003e String.format(\"%d.  %s\\n\", index + 1, tasks.getTask(index)))"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                         .collect(Collectors.toList());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        String taskSizeMessage \u003d this.currentTaskListSize(tasks);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        listOFPrintedDoneTasks.add(0, s);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        listOFPrintedDoneTasks.add(taskSizeMessage);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return String.join(\"\", listOFPrintedDoneTasks);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Prints acknowledgement of deleted tasks."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param tasks is task list."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param arrayOfDeleteIndexes are indexes of tasks to be deleted."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @return a String response."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @throws InvalidIndexException is thrown if indexes are invalid."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String acknowledgeDelete(TaskList tasks, int[] arrayOfDeleteIndexes) throws InvalidIndexException {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        String s \u003d \"Noted. I\u0027ve removed this task(s):\\n\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        if (arrayOfDeleteIndexes.length \u003d\u003d 0) { throw new InvalidIndexException(\"Index does not match any task!\\n\"); }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        List\u003cString\u003e listOFPrintedDeleteTasks \u003d"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                IntStream.of(arrayOfDeleteIndexes)"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                         .mapToObj(index -\u003e String.format(\"%d.  %s\\n\", index + 1, tasks.getTask(index)))"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                         .collect(Collectors.toList());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        listOFPrintedDeleteTasks.add(0, s);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return String.join(\"\", listOFPrintedDeleteTasks);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Prints out the current tasks in task list."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param tasks is the task list."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @return a String response."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @throws EmptyTaskListException if the current task list is empty."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String acknowledgeList(TaskList tasks) throws EmptyTaskListException {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        if (tasks.getTaskListSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            throw new EmptyTaskListException(\"There is no task in your list. Please try again...\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        String s \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        AtomicInteger atomicIndex \u003d new AtomicInteger(1);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        for (Task task: tasks.getCurrentTasks()) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            s +\u003d String.format(\"%d.  %s\\n\", atomicIndex.getAndIncrement(), task);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * Prints current size of the task list."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     *"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @param tasks is the task list."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     * @return a String response."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public String currentTaskListSize(TaskList tasks) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        return String.format(\"Now you have \" + tasks.getTaskListSize() + \" tasks in the list\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 177
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #faebd7;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            \u003cInsets left\u003d\"10.0\" right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/ImageView\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 22
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"395.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 19
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void testDeadlineObject() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"do your work\", LocalDateTime.parse(\"2020-02-02T20:00\"));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        Assertions.assertEquals(\"[D][x] do your work (by: Feb 2 2020, 8:00 PM)\", deadline.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void testDeadlinePrint() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"do your work\", LocalDateTime.parse(\"2020-02-02T20:00\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        Assertions.assertEquals(\"D | 0 | do your work | 2020-02-02T20:00\", deadline.toStringForFileStorage());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 19
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 10
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void testCorrectTask() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.addTask(new Todo(\"play game\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.addTask(new Deadline(\"study\", LocalDateTime.parse(\"2010-02-01T18:00\")));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.addTask(new Event(\"holiday\", LocalDateTime.parse(\"2039-10-03T21:00\")));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        Assertions.assertEquals(tasks.getTask(2).toString(), \"[E][x] holiday (at: Oct 3 2039, 9:00 PM)\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void testNumTasks() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.addTask(new Todo(\"play game\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.addTask(new Deadline(\"study\", LocalDateTime.parse(\"2010-02-01T18:00\")));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.addTask(new Event(\"holiday\", LocalDateTime.parse(\"2039-10-03T21:00\")));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        Assertions.assertEquals(3, tasks.getTaskListSize());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    public void testTaskAddingMethod() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.addNewTodo(\"play game\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.addNewDeadline(\"study\", LocalDateTime.parse(\"2010-02-01T18:00\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        tasks.addNewEvent(\"holiday\", LocalDateTime.parse(\"2039-10-03T21:00\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "        Assertions.assertEquals(tasks.getTaskListSize(), 3);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 40
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "todo join sports club"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 7
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nhamhung"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nhamhung"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "nhamhung": 34
    }
  }
]
