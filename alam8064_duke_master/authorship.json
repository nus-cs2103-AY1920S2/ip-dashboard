[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    String javaFxVersion \u003d \u002711.0.1\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alam8064"
        },
        "content": "test {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alam8064"
        },
        "content": "// javafx {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alam8064"
        },
        "content": "//     version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alam8064"
        },
        "content": "//     modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alam8064"
        },
        "content": "// }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "alam8064": 42
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "Momo is your very own personal chat bot task manager! This cutie can help you to keep track of various tasks at hand"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": "with various interactive features."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "Enjoy!"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "## Application Interface"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "\u003cimg src\u003d\"Ui.png\" width\u003d\"400\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "### 1. Add `Todo`  "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "Adds in a new `todo` task into the list, specifying the task description."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "#### Example of usage: "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    todo complete assignment"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "#### Expected outcome: "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    [T][✗] complete assignment"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "### 2. Add `Deadline` "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alam8064"
        },
        "content": "#### Example of usage: "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    deadline complete assignment /by 2020-01-01"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alam8064"
        },
        "content": "#### Expected outcome: "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    [T][✗] complete assignment (by: Jan 1 2020)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alam8064"
        },
        "content": "### 3. Add `Event` "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alam8064"
        },
        "content": "Adds in a new `event` task into the list, specifying the task description and the date of the event."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alam8064"
        },
        "content": "#### Example of usage: "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    event competition /at 2020-01-01"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alam8064"
        },
        "content": "#### Expected outcome: "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    [T][✗] competition (at: Jan 1 2020)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alam8064"
        },
        "content": "### 4. Display `List`  "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alam8064"
        },
        "content": "Displays the current `list` of all your tasks."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alam8064"
        },
        "content": "#### Example of usage: "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    list"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alam8064"
        },
        "content": "#### Expected outcome: "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    1. [T][✗] complete assignment"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    2. [T][✗] complete assignment (by: Jan 1 2020)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    3. [T][✗] competition (at: Jan 1 2020)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alam8064"
        },
        "content": "### 5. Mark task(s) as `Done` "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alam8064"
        },
        "content": "Marks the selected tasks to be `done` in the list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alam8064"
        },
        "content": "#### Example of usage 1: "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    done 1"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alam8064"
        },
        "content": "#### Expected outcome 1: "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     [T][✓] complete assignment"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alam8064"
        },
        "content": "#### Example of usage 2: "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    done 1 2  "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alam8064"
        },
        "content": "#### Expected outcome 2: "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     [T][✓] complete assignment"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     [T][✓] complete assignment (by: Jan 1 2020)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alam8064"
        },
        "content": "### 6. `Delete` task(s)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alam8064"
        },
        "content": "Removes the selected tasks from the list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alam8064"
        },
        "content": "#### Example of usage 1: "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    delete 1"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alam8064"
        },
        "content": "#### Expected outcome 1: "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    Nice! I\u0027ve removed this task:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     [T][✓] complete assignment"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alam8064"
        },
        "content": "#### Example of usage 2: "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    delete 1 2  "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alam8064"
        },
        "content": "#### Expected outcome 2: "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    Nice! I\u0027ve removed this task:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     [T][✓] complete assignment"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     [T][✓] complete assignment (by: Jan 1 2020)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     Now you have 1 task in the list."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alam8064"
        },
        "content": "### 7. `Find` task(s) "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alam8064"
        },
        "content": "Search for specific task(s) from the task list by specifying a keyword."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alam8064"
        },
        "content": "#### Example of usage: "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    find assignment"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alam8064"
        },
        "content": "#### Expected outcome: "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    [T][✓] complete assignment"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    [T][✓] complete assignment (by: Jan 1 2020)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "alam8064"
        },
        "content": "### 8. `Exit`  "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "alam8064"
        },
        "content": "Exits the programme and automatically closes it."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "alam8064"
        },
        "content": "#### Example of usage: "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    bye"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "alam8064"
        },
        "content": "#### Expected outcome: "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "-": 14,
      "alam8064": 99
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": " * Represents a command that executes the addition of a task into the task list."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    protected Task task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Executes the main method of adding the task into the task list, while the Ui replies the user"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * with the corresponding messages. The updated task list is then written and saved into the storage file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param tasks Task list that is updated."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param ui Ui to display interaction messages with the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param storage Storage where the updated list is saved into."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        storage.appendFile(task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        String s \u003d ui.showAddedTask(task, tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Returns if this command is an ExitCommand."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @return The result if this command gives an exit."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 34
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 8
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": " * Specific form of a deadline task that is input by the user to Duke."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Creates a deadline with the specific task and date to complete the task by."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param task Task to complete within deadline."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param by Date to complete the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public Deadline(String task, String by) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        this.date \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String toLine() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        int num;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        if (super.done) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            num \u003d 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            num \u003d 0;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return \"D/\" + num + \"/\" + super.task + \"/\" + by;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 37
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": " * Represents a command that executes the deletion of a task into the task list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    protected int[] options;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public DeleteCommand(int[] options) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        this.options \u003d options;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Executes the main method of deleting the task into the task list, while the Ui replies the user"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * with the corresponding messages. The updated task list is then written and saved into the storage file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param tasks Task list that is updated."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param ui Ui to display interaction messages with the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param storage Storage where the updated list is saved into."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @return The reply by the Ui as a String."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        int originalSize \u003d tasks.size();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        String string \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        ArrayList\u003cTask\u003e deleted \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        for (int i \u003d 0; i \u003c options.length; i++) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            deleted.add(tasks.get(options[i] - 1));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        for (int i \u003d 0; i \u003c deleted.size(); i++) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alam8064"
        },
        "content": "           tasks.deleteTask(deleted.get(i));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        storage.writeFile(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return ui.showDeletedTask(deleted, originalSize);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Returns if this command is an ExitCommand."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @return The result if this command gives an exit."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 47
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 59
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": " * Represents a command that marks a task to be done before updating it into the task list."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    protected int[] options;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public DoneCommand(int[] options) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        this.options \u003d options;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Executes the main method of updating the task\u0027s done status into the task list, while the Ui replies the user"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * with the corresponding messages. The updated task list is then written and saved into the storage file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param tasks Task list that is updated."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param ui Ui to display interaction messages with the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param storage Storage where the updated list is saved into."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        String string \u003d \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        for (int i \u003d 0; i \u003c options.length; i++) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            tasks.markAsDone(options[i]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            String s \u003d ui.showDoneTask(tasks.arr.get(options[i] - 1)) + \"\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            storage.writeFile(tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            string +\u003d s;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return string;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Returns if this command is an ExitCommand."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @return The result if this command gives an exit."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "alam8064": 39
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": " * Duke, representing a personal assistant chat bot that helps to track the user\u0027s task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Creates a chat bot, Duke, with the specified file path."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param filePath Path to specify location of file in computer."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public Duke(String filePath) throws IOException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        storage \u003d new Storage(filePath, ui);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            File file \u003d new File(\"data\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                new File(\"data\").mkdir();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            new File(filePath).createNewFile();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            tasks \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Runs the chat bot, Duke, while users key in various command inputs."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param input Input by user to perform certain tasks in the chat bot."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @return String indicating GUI response to input by user."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String runGUI(String input) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            //String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            output \u003d c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            output \u003d ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            output \u003d ui.showDateError();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            output \u003d ui.showIndexError();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        assert output !\u003d null: \"Response message by Duke should not be null\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        String response \u003d this.runGUI(input);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        if (response.equals(\"Bye. Hope to see you again soon!\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "alam8064": 67
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": " * Specific form of an event task that is input by the user to Duke."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Creates an event with the specific task and date to complete the task by."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param task Task to complete within deadline."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param at Date to complete the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public Event(String task, String at) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        this.date \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String toLine() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        int num;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        if (super.done) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            num \u003d 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            num \u003d 0;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return \"E/\" + num + \"/\" + this.task + \"/\" + at;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 37
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": " * Represents a command that exits the chat bot, Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Executes the main method of exiting the system of Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param tasks Task list that is updated."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param ui Ui to display interaction messages with the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param storage Storage where the updated list is saved into."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return ui.endDuke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Returns if this command is an ExitCommand."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @return The result if this command gives an exit."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 27
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": " * Represents a command that finds tasks from the task list using a specified keyword."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    protected String keyword;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Executes the main method of finding tasks from the task list, while the Ui replies the user"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * with the corresponding messages."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param tasks Task list that is updated."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param ui Ui to display interaction messages with the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param storage Storage where the updated list is saved into."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return ui.showFoundTasks(tasks.findTasks(keyword));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Returns if this command is an ExitCommand."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @return The result if this command gives an exit."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 31
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 10
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": " * Represents a command that lists all the tasks from the task list."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Executes the main method of listing the tasks from the task list, while the Ui replies the user"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * with the corresponding messages."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param tasks Task list that is updated."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param ui Ui to display interaction messages with the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param storage Storage where the updated list is saved into."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return ui.printList(tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Returns if this command is an ExitCommand."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @return The result if this command gives an exit."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 29
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.util.concurrent.TimeUnit;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public Main() throws IOException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        duke \u003d new Duke(\"data/duke.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void stop() throws Exception {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        TimeUnit.MILLISECONDS.sleep(200);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 37
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/me.jpg\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/momo.jpg\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(Ui.showWelcome(), dukeImage));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 51
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": " * Handles making sense of the user inputs to return specific commands."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Parses the user input to return a corresponding command message."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param fullCommand User\u0027s given input."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @return Returns a Command type."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @throws DukeException When user\u0027s inputs do not fulfill any of the command specifications."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        String[] arr \u003d fullCommand.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        String command \u003d arr[0];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            if (arr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                Task task \u003d new Todo(arr[1]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                return new AddCommand(task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            if (arr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                String[] deadlineArr \u003d arr[1].split(\" /by \", 2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                if (deadlineArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    throw new DukeException(\"OOPS!!! You forgot to specify a date/time for the deadline.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    Task task \u003d new Deadline(deadlineArr[0], deadlineArr[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    return new AddCommand(task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            if (arr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                String[] eventArr \u003d arr[1].split(\" /at \", 2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                if (eventArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    throw new DukeException(\"OOPS!!! You forgot to specify a date/time for the event.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    Task task \u003d new Event(eventArr[0], eventArr[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    return new AddCommand(task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            String[] array \u003d arr[1].split(\"\\\\s+\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            int[] options \u003d new int[array.length];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            for (int i \u003d 0; i \u003c options.length; i++) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                options[i] \u003d Integer.parseInt(array[i]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            return new DoneCommand(options);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            String[] array \u003d arr[1].split(\"\\\\s+\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            int[] options \u003d new int[array.length];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            for (int i \u003d 0; i \u003c options.length; i++) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                options[i] \u003d Integer.parseInt(array[i]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            return new DeleteCommand(options);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        } else if (command.equals(\"find\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            return new FindCommand(arr[1]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        } else if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 70
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String filePath;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public Storage(String filePath, Ui ui) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Appends a new task to the back of the file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param task New task specified to be added."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void appendFile(Task task) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath, true));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            String line \u003d task.toLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            writer.write(line);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            writer.newLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            ui.showFileNotFoundError();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Rewrites the updated list of tasks to the file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param list Updated Tasklist of tasks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void writeFile(TaskList list) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                String line \u003d list.get(i).toLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                writer.write(line);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                writer.newLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            ui.showFileNotFoundError();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Loads existing tasks from the file to a list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @return ArrayList representation of the list of tasks."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws IOException, FileNotFoundException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        ArrayList\u003cTask\u003e data \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alam8064"
        },
        "content": "//        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            while (true) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                String str \u003d br.readLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                if (str \u003d\u003d null) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                String[] arr \u003d str.split(\"/\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                if (arr[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    Todo task \u003d new Todo(arr[2]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    if (arr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                        task.setDone();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    data.add(task);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                } else if (arr[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    Deadline task \u003d new Deadline(arr[2], arr[3]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    if (arr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                        task.setDone();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    data.add(task);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                } else { //event"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    Event task \u003d new Event(arr[2], arr[3]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    if (arr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                        task.setDone();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    data.add(task);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alam8064"
        },
        "content": "//        } catch (Exception e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alam8064"
        },
        "content": "//            ui.showFileNotFoundError();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alam8064"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return data;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 90
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": " * Represents a task defined from input by the user to Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    protected String task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    protected boolean done; //✘"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public Task(String task) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        this.done \u003d true; //✓"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Returns a corresponding symbol showing the status of the task depending on whether it is done or not."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @return String symbol of either a tick or a cross."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return (done ? \"\\u2713\" : \"\\u2718\");  //return tick or X symbols"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Returns a formatted string representing a task to be written into the storage file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Abstract method that is formatted differently by different tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public abstract String toLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Returns a formatted string for the task to be printed."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.task;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 40
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": " * Contains the task list, as well as operations to amend existing tasks in thelist such as add/delete."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public ArrayList\u003cTask\u003e arr;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e arr) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        this.arr \u003d arr;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Gets a Task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param index Specific index of the task in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @return Returns a Task from the task list from the specified index."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return arr.get(index);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Gives the size of task list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @return Returns the array size of the task list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return arr.size();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Marks the task to be done."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param option Specific index of task in the list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void markAsDone(int option) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        arr.get(option - 1).setDone();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Removes the task from the list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param task Specific task in the list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void deleteTask(Task task) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        arr.remove(task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Adds the task to the list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param task Specifies task to be added."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        arr.add(task);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Filters and returns a list of tasks pertaining to the keyword given."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param keyword To find the specific task(s)."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public ArrayList\u003cTask\u003e findTasks(String keyword) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        ArrayList\u003cTask\u003e tasksFound \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        for (int i \u003d 0; i \u003c arr.size(); i++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            if (arr.get(i).task.contains(keyword)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                tasksFound.add(arr.get(i));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return tasksFound;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 68
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": " * Specific form of a todo task that is input by the user to Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public Todo(String task) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String toLine() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        int num;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        if (super.done) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            num \u003d 1;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            num \u003d 0;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return \"T/\" + num + \"/\" + super.task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 25
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": " * Handles the interactions with the user as they input to Duke."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    Scanner sc;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public static String showWelcome() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        String logo \u003d \" /\\\\_/\\\\\\n\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                      \"( o.o )\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return logo + \"Hello! I\u0027m Momo :3\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public boolean hasInputs() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return sc.hasNext();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String showError(String message) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String showFileNotFoundError() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return \"This file is not found in the specified directory!! :(\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String showIndexError() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alam8064"
        },
        "content": "       return \"This task option does not exist within the task list. Please try again with an appropriate task index.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String showLoadingError() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return \"OOPS! An error occurred while loading from given file.\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String endDuke() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String showDoneTask(Task task) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\\n  \" + task;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String showDeletedTask(ArrayList\u003cTask\u003e deletedTasks, int originalSize) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        String s \u003d \"\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        s +\u003d \"Noted. I\u0027ve removed this task: \\n \";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        for (int i \u003d 0; i \u003c deletedTasks.size(); i++) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            String task \u003d deletedTasks.get(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            s +\u003d task;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        int size \u003d originalSize - deletedTasks.size();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        String taskOrTasks \u003d \"\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        if (size \u003d\u003d 1) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            taskOrTasks \u003d \" task\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            taskOrTasks \u003d \" tasks\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        s +\u003d \"Now you have \" + size + taskOrTasks +  \" in the list.\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String showAddedTask(Task task, TaskList tasks) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        assert tasks.arr.size() \u003e 0 : \"Size of the task list cannot be 0\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        int size \u003d tasks.size();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        String taskOrTasks \u003d \"\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        if (size \u003d\u003d 1) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            taskOrTasks \u003d \" task\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            taskOrTasks \u003d \" tasks\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return \"Got it. I\u0027ve added this task: \\n \" + task + \"\\nNow you have \" + size + taskOrTasks + \" in the list.\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String showFoundTasks(ArrayList\u003cTask\u003e tasksFound) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        String s \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        for (int i \u003d 0; i \u003c tasksFound.size(); i++) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            s +\u003d tasksFound.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String printList(TaskList list) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        String s \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            s +\u003d i + 1 + \". \" + list.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String showDateError() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return \"Please key in the date in the YYYY-MM-DD format instead!!!\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 101
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" graphicTextGap\u003d\"15.0\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" text\u003d\"Label\" textFill\u003d\"#297569\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "         \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "         \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            \u003cInsets right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "         \u003c/padding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"130.0\" fitWidth\u003d\"90.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "         \u003cimage\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            \u003cImage url\u003d\"@../../../../build/resources/main/images/me.jpg\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "         \u003c/image\u003e\u003c/ImageView\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alam8064"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "alam8064": 29
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "\u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "\u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "alam8064": 19
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 10
    }
  },
  {
    "path": "src/test/java/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void testWriteFile() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        Storage storage \u003d new Storage(\"data/duke.txt\", ui);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        Task task \u003d new Todo(\"read book\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        taskList.arr.add(new Todo(\"read book\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        storage.writeFile(taskList);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(\"data/duke.txt\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            assertEquals(\"T/0/read book\", br.readLine());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        } catch (Exception ignored) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 24
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void testMarkAsDone() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        taskList.arr.add(new Todo(\"read book\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        taskList.markAsDone(1);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        assertEquals(true, taskList.arr.get(0).done);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void testDeleteTask() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        taskList.arr.add(new Todo(\"read book\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        taskList.deleteTask(1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        assertEquals(0, taskList.arr.size());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 23
    }
  },
  {
    "path": "text-ui-test/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public Deadline(String task, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 15
    }
  },
  {
    "path": "text-ui-test/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        Task[] data \u003d new Task[100];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        int slot \u003d 0;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            String[] inputArr \u003d input.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            String action \u003d inputArr[0];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                for (int i \u003d 0; i \u003c slot; i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    System.out.println(i + 1 + \". \" + data[i]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            } else if (action.equals(\"done\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                int option \u003d Integer.parseInt(inputArr[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                data[option-1].setDone();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\\n  \" + data[option-1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                if (action.equals(\"todo\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    data[slot] \u003d new Todo(inputArr[1]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                } else if (action.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    String[] dArr \u003d inputArr[1].split(\" /by \", 2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    data[slot] \u003d new Deadline(dArr[0], dArr[1]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                } else { //event"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    String[] eArr \u003d inputArr[1].split(\" /at \", 2);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    data[slot] \u003d new Event(eArr[0], eArr[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                System.out.println(\"  \" + data[slot]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                slot++;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                System.out.println(\"Now you have \" + slot + \" tasks in the list.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 51
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": " ____        _"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": "|  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "  [T][✘] borrow book"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "1.[T][✘] borrow book"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "  [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "  [E][✘] project meeting (at: Mon 2-4pm) "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "Now you have 3 tasks in the list. "
      }
    ],
    "authorContributionMap": {
      "alam8064": 20
    }
  },
  {
    "path": "text-ui-test/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public Event(String task, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 15
    }
  },
  {
    "path": "text-ui-test/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    protected String task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    protected boolean done; //✘"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public Task(String task) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        this.done \u003d true; //✓"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return (done ? \"\\u2713\" : \"\\u2718\");  //return tick or X symbols"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.task;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 24
    }
  },
  {
    "path": "text-ui-test/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public Todo(String task) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "todo borrow book "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "event project meeting /at Mon 2-4pm"
      }
    ],
    "authorContributionMap": {
      "alam8064": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "alam8064": 21
    }
  }
]
